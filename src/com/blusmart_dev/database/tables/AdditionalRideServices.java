/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.AdditionalRideServicesRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdditionalRideServices extends TableImpl<AdditionalRideServicesRecord> {

    private static final long serialVersionUID = 65383180;

    /**
     * The reference instance of <code>blusmartDevDb.additional_ride_services</code>
     */
    public static final AdditionalRideServices ADDITIONAL_RIDE_SERVICES = new AdditionalRideServices();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdditionalRideServicesRecord> getRecordType() {
        return AdditionalRideServicesRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.additional_ride_services.id</code>.
     */
    public final TableField<AdditionalRideServicesRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.ride_request_id</code>.
     */
    public final TableField<AdditionalRideServicesRecord, UInteger> RIDE_REQUEST_ID = createField(DSL.name("ride_request_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.service_type</code>.
     */
    public final TableField<AdditionalRideServicesRecord, String> SERVICE_TYPE = createField(DSL.name("service_type"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.total_amount</code>.
     */
    public final TableField<AdditionalRideServicesRecord, BigDecimal> TOTAL_AMOUNT = createField(DSL.name("total_amount"), org.jooq.impl.SQLDataType.DECIMAL(16, 8).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.quantity</code>.
     */
    public final TableField<AdditionalRideServicesRecord, UInteger> QUANTITY = createField(DSL.name("quantity"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.expiry_timestamp</code>.
     */
    public final TableField<AdditionalRideServicesRecord, Long> EXPIRY_TIMESTAMP = createField(DSL.name("expiry_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.is_active</code>.
     */
    public final TableField<AdditionalRideServicesRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.created_timestamp</code>.
     */
    public final TableField<AdditionalRideServicesRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.last_updated_timestamp</code>.
     */
    public final TableField<AdditionalRideServicesRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.created_by</code>.
     */
    public final TableField<AdditionalRideServicesRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_ride_services.last_updated_by</code>.
     */
    public final TableField<AdditionalRideServicesRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.additional_ride_services</code> table reference
     */
    public AdditionalRideServices() {
        this(DSL.name("additional_ride_services"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.additional_ride_services</code> table reference
     */
    public AdditionalRideServices(String alias) {
        this(DSL.name(alias), ADDITIONAL_RIDE_SERVICES);
    }

    /**
     * Create an aliased <code>blusmartDevDb.additional_ride_services</code> table reference
     */
    public AdditionalRideServices(Name alias) {
        this(alias, ADDITIONAL_RIDE_SERVICES);
    }

    private AdditionalRideServices(Name alias, Table<AdditionalRideServicesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdditionalRideServices(Name alias, Table<AdditionalRideServicesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AdditionalRideServices(Table<O> child, ForeignKey<O, AdditionalRideServicesRecord> key) {
        super(child, key, ADDITIONAL_RIDE_SERVICES);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<AdditionalRideServicesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ADDITIONAL_RIDE_SERVICES;
    }

    @Override
    public UniqueKey<AdditionalRideServicesRecord> getPrimaryKey() {
        return Keys.KEY_ADDITIONAL_RIDE_SERVICES_PRIMARY;
    }

    @Override
    public List<UniqueKey<AdditionalRideServicesRecord>> getKeys() {
        return Arrays.<UniqueKey<AdditionalRideServicesRecord>>asList(Keys.KEY_ADDITIONAL_RIDE_SERVICES_PRIMARY);
    }

    @Override
    public AdditionalRideServices as(String alias) {
        return new AdditionalRideServices(DSL.name(alias), this);
    }

    @Override
    public AdditionalRideServices as(Name alias) {
        return new AdditionalRideServices(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdditionalRideServices rename(String name) {
        return new AdditionalRideServices(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdditionalRideServices rename(Name name) {
        return new AdditionalRideServices(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, UInteger, String, BigDecimal, UInteger, Long, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
