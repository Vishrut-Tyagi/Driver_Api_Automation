/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.AdditionalServicesDetailsRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdditionalServicesDetails extends TableImpl<AdditionalServicesDetailsRecord> {

    private static final long serialVersionUID = -252501605;

    /**
     * The reference instance of <code>blusmartDevDb.additional_services_details</code>
     */
    public static final AdditionalServicesDetails ADDITIONAL_SERVICES_DETAILS = new AdditionalServicesDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdditionalServicesDetailsRecord> getRecordType() {
        return AdditionalServicesDetailsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.additional_services_details.service_type</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, String> SERVICE_TYPE = createField(DSL.name("service_type"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.cost</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, BigDecimal> COST = createField(DSL.name("cost"), org.jooq.impl.SQLDataType.DECIMAL(16, 8).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.min_quantity</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, UInteger> MIN_QUANTITY = createField(DSL.name("min_quantity"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.max_quantity</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, UInteger> MAX_QUANTITY = createField(DSL.name("max_quantity"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.is_active</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.created_timestamp</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.last_updated_timestamp</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.created_by</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.additional_services_details.last_updated_by</code>.
     */
    public final TableField<AdditionalServicesDetailsRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.additional_services_details</code> table reference
     */
    public AdditionalServicesDetails() {
        this(DSL.name("additional_services_details"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.additional_services_details</code> table reference
     */
    public AdditionalServicesDetails(String alias) {
        this(DSL.name(alias), ADDITIONAL_SERVICES_DETAILS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.additional_services_details</code> table reference
     */
    public AdditionalServicesDetails(Name alias) {
        this(alias, ADDITIONAL_SERVICES_DETAILS);
    }

    private AdditionalServicesDetails(Name alias, Table<AdditionalServicesDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdditionalServicesDetails(Name alias, Table<AdditionalServicesDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AdditionalServicesDetails(Table<O> child, ForeignKey<O, AdditionalServicesDetailsRecord> key) {
        super(child, key, ADDITIONAL_SERVICES_DETAILS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public UniqueKey<AdditionalServicesDetailsRecord> getPrimaryKey() {
        return Keys.KEY_ADDITIONAL_SERVICES_DETAILS_PRIMARY;
    }

    @Override
    public List<UniqueKey<AdditionalServicesDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<AdditionalServicesDetailsRecord>>asList(Keys.KEY_ADDITIONAL_SERVICES_DETAILS_PRIMARY);
    }

    @Override
    public AdditionalServicesDetails as(String alias) {
        return new AdditionalServicesDetails(DSL.name(alias), this);
    }

    @Override
    public AdditionalServicesDetails as(Name alias) {
        return new AdditionalServicesDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdditionalServicesDetails rename(String name) {
        return new AdditionalServicesDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdditionalServicesDetails rename(Name name) {
        return new AdditionalServicesDetails(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, BigDecimal, UInteger, UInteger, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
