/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.BookingPartnerMappingRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingPartnerMapping extends TableImpl<BookingPartnerMappingRecord> {

    private static final long serialVersionUID = -184863567;

    /**
     * The reference instance of <code>blusmartDevDb.booking_partner_mapping</code>
     */
    public static final BookingPartnerMapping BOOKING_PARTNER_MAPPING = new BookingPartnerMapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookingPartnerMappingRecord> getRecordType() {
        return BookingPartnerMappingRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.id</code>.
     */
    public final TableField<BookingPartnerMappingRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.partner_name</code>.
     */
    public final TableField<BookingPartnerMappingRecord, String> PARTNER_NAME = createField(DSL.name("partner_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.client_id</code>.
     */
    public final TableField<BookingPartnerMappingRecord, String> CLIENT_ID = createField(DSL.name("client_id"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.is_active</code>.
     */
    public final TableField<BookingPartnerMappingRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.user_name</code>.
     */
    public final TableField<BookingPartnerMappingRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.password</code>.
     */
    public final TableField<BookingPartnerMappingRecord, String> PASSWORD = createField(DSL.name("password"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.created_timestamp</code>.
     */
    public final TableField<BookingPartnerMappingRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.last_updated_timestamp</code>.
     */
    public final TableField<BookingPartnerMappingRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.created_by</code>.
     */
    public final TableField<BookingPartnerMappingRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.last_updated_by</code>.
     */
    public final TableField<BookingPartnerMappingRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.end_points_details</code>.
     */
    public final TableField<BookingPartnerMappingRecord, String> END_POINTS_DETAILS = createField(DSL.name("end_points_details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.booking_partner_mapping.flow_details</code>.
     */
    public final TableField<BookingPartnerMappingRecord, String> FLOW_DETAILS = createField(DSL.name("flow_details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.booking_partner_mapping</code> table reference
     */
    public BookingPartnerMapping() {
        this(DSL.name("booking_partner_mapping"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.booking_partner_mapping</code> table reference
     */
    public BookingPartnerMapping(String alias) {
        this(DSL.name(alias), BOOKING_PARTNER_MAPPING);
    }

    /**
     * Create an aliased <code>blusmartDevDb.booking_partner_mapping</code> table reference
     */
    public BookingPartnerMapping(Name alias) {
        this(alias, BOOKING_PARTNER_MAPPING);
    }

    private BookingPartnerMapping(Name alias, Table<BookingPartnerMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookingPartnerMapping(Name alias, Table<BookingPartnerMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> BookingPartnerMapping(Table<O> child, ForeignKey<O, BookingPartnerMappingRecord> key) {
        super(child, key, BOOKING_PARTNER_MAPPING);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<BookingPartnerMappingRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_BOOKING_PARTNER_MAPPING;
    }

    @Override
    public UniqueKey<BookingPartnerMappingRecord> getPrimaryKey() {
        return Keys.KEY_BOOKING_PARTNER_MAPPING_PRIMARY;
    }

    @Override
    public List<UniqueKey<BookingPartnerMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<BookingPartnerMappingRecord>>asList(Keys.KEY_BOOKING_PARTNER_MAPPING_PRIMARY);
    }

    @Override
    public BookingPartnerMapping as(String alias) {
        return new BookingPartnerMapping(DSL.name(alias), this);
    }

    @Override
    public BookingPartnerMapping as(Name alias) {
        return new BookingPartnerMapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BookingPartnerMapping rename(String name) {
        return new BookingPartnerMapping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BookingPartnerMapping rename(Name name) {
        return new BookingPartnerMapping(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<UInteger, String, String, Byte, String, String, Long, Long, UInteger, UInteger, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
