/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.BusinessAccountUserRiderMapRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessAccountUserRiderMap extends TableImpl<BusinessAccountUserRiderMapRecord> {

    private static final long serialVersionUID = 1607696571;

    /**
     * The reference instance of <code>blusmartDevDb.business_account_user_rider_map</code>
     */
    public static final BusinessAccountUserRiderMap BUSINESS_ACCOUNT_USER_RIDER_MAP = new BusinessAccountUserRiderMap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusinessAccountUserRiderMapRecord> getRecordType() {
        return BusinessAccountUserRiderMapRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.id</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.business_account_id</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, String> BUSINESS_ACCOUNT_ID = createField(DSL.name("business_account_id"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.user_id</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, UInteger> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.rider_id</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, UInteger> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.expiration_timestamp</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, Long> EXPIRATION_TIMESTAMP = createField(DSL.name("expiration_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.note</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, String> NOTE = createField(DSL.name("note"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.is_active</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.created_timestamp</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.last_updated_timestamp</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.created_by</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.last_updated_by</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.monthly_spending_limit</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, BigDecimal> MONTHLY_SPENDING_LIMIT = createField(DSL.name("monthly_spending_limit"), org.jooq.impl.SQLDataType.DECIMAL(16, 8).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.business_account_user_rider_map.available_spending_limit</code>.
     */
    public final TableField<BusinessAccountUserRiderMapRecord, BigDecimal> AVAILABLE_SPENDING_LIMIT = createField(DSL.name("available_spending_limit"), org.jooq.impl.SQLDataType.DECIMAL(16, 8).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * Create a <code>blusmartDevDb.business_account_user_rider_map</code> table reference
     */
    public BusinessAccountUserRiderMap() {
        this(DSL.name("business_account_user_rider_map"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.business_account_user_rider_map</code> table reference
     */
    public BusinessAccountUserRiderMap(String alias) {
        this(DSL.name(alias), BUSINESS_ACCOUNT_USER_RIDER_MAP);
    }

    /**
     * Create an aliased <code>blusmartDevDb.business_account_user_rider_map</code> table reference
     */
    public BusinessAccountUserRiderMap(Name alias) {
        this(alias, BUSINESS_ACCOUNT_USER_RIDER_MAP);
    }

    private BusinessAccountUserRiderMap(Name alias, Table<BusinessAccountUserRiderMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusinessAccountUserRiderMap(Name alias, Table<BusinessAccountUserRiderMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> BusinessAccountUserRiderMap(Table<O> child, ForeignKey<O, BusinessAccountUserRiderMapRecord> key) {
        super(child, key, BUSINESS_ACCOUNT_USER_RIDER_MAP);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<BusinessAccountUserRiderMapRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_BUSINESS_ACCOUNT_USER_RIDER_MAP;
    }

    @Override
    public UniqueKey<BusinessAccountUserRiderMapRecord> getPrimaryKey() {
        return Keys.KEY_BUSINESS_ACCOUNT_USER_RIDER_MAP_PRIMARY;
    }

    @Override
    public List<UniqueKey<BusinessAccountUserRiderMapRecord>> getKeys() {
        return Arrays.<UniqueKey<BusinessAccountUserRiderMapRecord>>asList(Keys.KEY_BUSINESS_ACCOUNT_USER_RIDER_MAP_PRIMARY);
    }

    @Override
    public BusinessAccountUserRiderMap as(String alias) {
        return new BusinessAccountUserRiderMap(DSL.name(alias), this);
    }

    @Override
    public BusinessAccountUserRiderMap as(Name alias) {
        return new BusinessAccountUserRiderMap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessAccountUserRiderMap rename(String name) {
        return new BusinessAccountUserRiderMap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessAccountUserRiderMap rename(Name name) {
        return new BusinessAccountUserRiderMap(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, String, UInteger, UInteger, Long, String, Byte, Long, Long, UInteger, UInteger, BigDecimal, BigDecimal> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
