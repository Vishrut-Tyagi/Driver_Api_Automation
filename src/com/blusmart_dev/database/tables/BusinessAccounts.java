/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.BusinessAccountsRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessAccounts extends TableImpl<BusinessAccountsRecord> {

    private static final long serialVersionUID = 1462594945;

    /**
     * The reference instance of <code>blusmartDevDb.business_accounts</code>
     */
    public static final BusinessAccounts BUSINESS_ACCOUNTS = new BusinessAccounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusinessAccountsRecord> getRecordType() {
        return BusinessAccountsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.business_accounts.id</code>.
     */
    public final TableField<BusinessAccountsRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.code</code>.
     */
    public final TableField<BusinessAccountsRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.account_type</code>.
     */
    public final TableField<BusinessAccountsRecord, String> ACCOUNT_TYPE = createField(DSL.name("account_type"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.buying_user_id</code>.
     */
    public final TableField<BusinessAccountsRecord, UInteger> BUYING_USER_ID = createField(DSL.name("buying_user_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.buying_rider_id</code>.
     */
    public final TableField<BusinessAccountsRecord, UInteger> BUYING_RIDER_ID = createField(DSL.name("buying_rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.expiration_timestamp</code>.
     */
    public final TableField<BusinessAccountsRecord, Long> EXPIRATION_TIMESTAMP = createField(DSL.name("expiration_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.business_display_name</code>.
     */
    public final TableField<BusinessAccountsRecord, String> BUSINESS_DISPLAY_NAME = createField(DSL.name("business_display_name"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.business_picture_url</code>.
     */
    public final TableField<BusinessAccountsRecord, String> BUSINESS_PICTURE_URL = createField(DSL.name("business_picture_url"), org.jooq.impl.SQLDataType.VARCHAR(2048).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.note</code>.
     */
    public final TableField<BusinessAccountsRecord, String> NOTE = createField(DSL.name("note"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.is_active</code>.
     */
    public final TableField<BusinessAccountsRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.created_timestamp</code>.
     */
    public final TableField<BusinessAccountsRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.last_updated_timestamp</code>.
     */
    public final TableField<BusinessAccountsRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.created_by</code>.
     */
    public final TableField<BusinessAccountsRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.last_updated_by</code>.
     */
    public final TableField<BusinessAccountsRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.gst_no</code>.
     */
    public final TableField<BusinessAccountsRecord, String> GST_NO = createField(DSL.name("gst_no"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.payment_model</code>.
     */
    public final TableField<BusinessAccountsRecord, String> PAYMENT_MODEL = createField(DSL.name("payment_model"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.pricing_commission</code>.
     */
    public final TableField<BusinessAccountsRecord, BigDecimal> PRICING_COMMISSION = createField(DSL.name("pricing_commission"), org.jooq.impl.SQLDataType.DECIMAL(16, 8).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.payment_modes</code>.
     */
    public final TableField<BusinessAccountsRecord, String> PAYMENT_MODES = createField(DSL.name("payment_modes"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.ride_types</code>.
     */
    public final TableField<BusinessAccountsRecord, String> RIDE_TYPES = createField(DSL.name("ride_types"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.business_account_data</code>.
     */
    public final TableField<BusinessAccountsRecord, String> BUSINESS_ACCOUNT_DATA = createField(DSL.name("business_account_data"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.slots_restricted</code>.
     */
    public final TableField<BusinessAccountsRecord, Byte> SLOTS_RESTRICTED = createField(DSL.name("slots_restricted"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.promo_applicable</code>.
     */
    public final TableField<BusinessAccountsRecord, Byte> PROMO_APPLICABLE = createField(DSL.name("promo_applicable"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.booking_visible</code>.
     */
    public final TableField<BusinessAccountsRecord, Byte> BOOKING_VISIBLE = createField(DSL.name("booking_visible"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.short_code</code>.
     */
    public final TableField<BusinessAccountsRecord, String> SHORT_CODE = createField(DSL.name("short_code"), org.jooq.impl.SQLDataType.VARCHAR(12).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.business_accounts.sms_notification_type</code>.
     */
    public final TableField<BusinessAccountsRecord, String> SMS_NOTIFICATION_TYPE = createField(DSL.name("sms_notification_type"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.business_accounts</code> table reference
     */
    public BusinessAccounts() {
        this(DSL.name("business_accounts"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.business_accounts</code> table reference
     */
    public BusinessAccounts(String alias) {
        this(DSL.name(alias), BUSINESS_ACCOUNTS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.business_accounts</code> table reference
     */
    public BusinessAccounts(Name alias) {
        this(alias, BUSINESS_ACCOUNTS);
    }

    private BusinessAccounts(Name alias, Table<BusinessAccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusinessAccounts(Name alias, Table<BusinessAccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> BusinessAccounts(Table<O> child, ForeignKey<O, BusinessAccountsRecord> key) {
        super(child, key, BUSINESS_ACCOUNTS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<BusinessAccountsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_BUSINESS_ACCOUNTS;
    }

    @Override
    public UniqueKey<BusinessAccountsRecord> getPrimaryKey() {
        return Keys.KEY_BUSINESS_ACCOUNTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<BusinessAccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<BusinessAccountsRecord>>asList(Keys.KEY_BUSINESS_ACCOUNTS_PRIMARY);
    }

    @Override
    public BusinessAccounts as(String alias) {
        return new BusinessAccounts(DSL.name(alias), this);
    }

    @Override
    public BusinessAccounts as(Name alias) {
        return new BusinessAccounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessAccounts rename(String name) {
        return new BusinessAccounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessAccounts rename(Name name) {
        return new BusinessAccounts(name, null);
    }
}
