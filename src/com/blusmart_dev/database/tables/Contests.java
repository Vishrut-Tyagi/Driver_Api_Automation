/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.ContestsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Contests extends TableImpl<ContestsRecord> {

    private static final long serialVersionUID = 733590036;

    /**
     * The reference instance of <code>blusmartDevDb.contests</code>
     */
    public static final Contests CONTESTS = new Contests();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContestsRecord> getRecordType() {
        return ContestsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.contests.id</code>.
     */
    public final TableField<ContestsRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.contests.contest_name</code>.
     */
    public final TableField<ContestsRecord, String> CONTEST_NAME = createField(DSL.name("contest_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.contests.description</code>.
     */
    public final TableField<ContestsRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(2048).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.contests.contest_start_timestamp</code>.
     */
    public final TableField<ContestsRecord, Long> CONTEST_START_TIMESTAMP = createField(DSL.name("contest_start_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.contest_end_timestamp</code>.
     */
    public final TableField<ContestsRecord, Long> CONTEST_END_TIMESTAMP = createField(DSL.name("contest_end_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.end_visibility_timestamp</code>.
     */
    public final TableField<ContestsRecord, Long> END_VISIBILITY_TIMESTAMP = createField(DSL.name("end_visibility_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.applicable_timestamp</code>.
     */
    public final TableField<ContestsRecord, Long> APPLICABLE_TIMESTAMP = createField(DSL.name("applicable_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.visibility_timestamp</code>.
     */
    public final TableField<ContestsRecord, Long> VISIBILITY_TIMESTAMP = createField(DSL.name("visibility_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.is_active</code>.
     */
    public final TableField<ContestsRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.created_by</code>.
     */
    public final TableField<ContestsRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.created_at</code>.
     */
    public final TableField<ContestsRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.last_updated_by</code>.
     */
    public final TableField<ContestsRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.last_updated_at</code>.
     */
    public final TableField<ContestsRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests.other_flags</code>.
     */
    public final TableField<ContestsRecord, String> OTHER_FLAGS = createField(DSL.name("other_flags"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.contests</code> table reference
     */
    public Contests() {
        this(DSL.name("contests"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.contests</code> table reference
     */
    public Contests(String alias) {
        this(DSL.name(alias), CONTESTS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.contests</code> table reference
     */
    public Contests(Name alias) {
        this(alias, CONTESTS);
    }

    private Contests(Name alias, Table<ContestsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Contests(Name alias, Table<ContestsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Contests(Table<O> child, ForeignKey<O, ContestsRecord> key) {
        super(child, key, CONTESTS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<ContestsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_CONTESTS;
    }

    @Override
    public UniqueKey<ContestsRecord> getPrimaryKey() {
        return Keys.KEY_CONTESTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<ContestsRecord>> getKeys() {
        return Arrays.<UniqueKey<ContestsRecord>>asList(Keys.KEY_CONTESTS_PRIMARY);
    }

    @Override
    public Contests as(String alias) {
        return new Contests(DSL.name(alias), this);
    }

    @Override
    public Contests as(Name alias) {
        return new Contests(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Contests rename(String name) {
        return new Contests(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Contests rename(Name name) {
        return new Contests(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<UInteger, String, String, Long, Long, Long, Long, Long, Byte, UInteger, Long, UInteger, Long, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
