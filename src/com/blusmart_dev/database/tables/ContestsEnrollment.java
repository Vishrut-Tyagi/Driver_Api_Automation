/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.ContestsEnrollmentRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContestsEnrollment extends TableImpl<ContestsEnrollmentRecord> {

    private static final long serialVersionUID = 1268108211;

    /**
     * The reference instance of <code>blusmartDevDb.contests_enrollment</code>
     */
    public static final ContestsEnrollment CONTESTS_ENROLLMENT = new ContestsEnrollment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContestsEnrollmentRecord> getRecordType() {
        return ContestsEnrollmentRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.contests_enrollment.id</code>.
     */
    public final TableField<ContestsEnrollmentRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.contest_id</code>.
     */
    public final TableField<ContestsEnrollmentRecord, UInteger> CONTEST_ID = createField(DSL.name("contest_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.rider_id</code>.
     */
    public final TableField<ContestsEnrollmentRecord, UInteger> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.enrollment_timestamp</code>.
     */
    public final TableField<ContestsEnrollmentRecord, Long> ENROLLMENT_TIMESTAMP = createField(DSL.name("enrollment_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.current_score</code>.
     */
    public final TableField<ContestsEnrollmentRecord, Integer> CURRENT_SCORE = createField(DSL.name("current_score"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.current_rank</code>.
     */
    public final TableField<ContestsEnrollmentRecord, Integer> CURRENT_RANK = createField(DSL.name("current_rank"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.prev_rank</code>.
     */
    public final TableField<ContestsEnrollmentRecord, Integer> PREV_RANK = createField(DSL.name("prev_rank"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.is_active</code>.
     */
    public final TableField<ContestsEnrollmentRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.created_by</code>.
     */
    public final TableField<ContestsEnrollmentRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.created_at</code>.
     */
    public final TableField<ContestsEnrollmentRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.last_updated_by</code>.
     */
    public final TableField<ContestsEnrollmentRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.last_updated_at</code>.
     */
    public final TableField<ContestsEnrollmentRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_enrollment.other_flags</code>.
     */
    public final TableField<ContestsEnrollmentRecord, String> OTHER_FLAGS = createField(DSL.name("other_flags"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.contests_enrollment</code> table reference
     */
    public ContestsEnrollment() {
        this(DSL.name("contests_enrollment"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.contests_enrollment</code> table reference
     */
    public ContestsEnrollment(String alias) {
        this(DSL.name(alias), CONTESTS_ENROLLMENT);
    }

    /**
     * Create an aliased <code>blusmartDevDb.contests_enrollment</code> table reference
     */
    public ContestsEnrollment(Name alias) {
        this(alias, CONTESTS_ENROLLMENT);
    }

    private ContestsEnrollment(Name alias, Table<ContestsEnrollmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContestsEnrollment(Name alias, Table<ContestsEnrollmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ContestsEnrollment(Table<O> child, ForeignKey<O, ContestsEnrollmentRecord> key) {
        super(child, key, CONTESTS_ENROLLMENT);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<ContestsEnrollmentRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_CONTESTS_ENROLLMENT;
    }

    @Override
    public UniqueKey<ContestsEnrollmentRecord> getPrimaryKey() {
        return Keys.KEY_CONTESTS_ENROLLMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<ContestsEnrollmentRecord>> getKeys() {
        return Arrays.<UniqueKey<ContestsEnrollmentRecord>>asList(Keys.KEY_CONTESTS_ENROLLMENT_PRIMARY);
    }

    @Override
    public ContestsEnrollment as(String alias) {
        return new ContestsEnrollment(DSL.name(alias), this);
    }

    @Override
    public ContestsEnrollment as(Name alias) {
        return new ContestsEnrollment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContestsEnrollment rename(String name) {
        return new ContestsEnrollment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContestsEnrollment rename(Name name) {
        return new ContestsEnrollment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, UInteger, UInteger, Long, Integer, Integer, Integer, Byte, UInteger, Long, UInteger, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
