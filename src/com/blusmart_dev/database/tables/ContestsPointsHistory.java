/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.ContestsPointsHistoryRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContestsPointsHistory extends TableImpl<ContestsPointsHistoryRecord> {

    private static final long serialVersionUID = -1477961002;

    /**
     * The reference instance of <code>blusmartDevDb.contests_points_history</code>
     */
    public static final ContestsPointsHistory CONTESTS_POINTS_HISTORY = new ContestsPointsHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContestsPointsHistoryRecord> getRecordType() {
        return ContestsPointsHistoryRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.contests_points_history.id</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.enrollment_id</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, UInteger> ENROLLMENT_ID = createField(DSL.name("enrollment_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.rider_id</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, UInteger> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.ride_id</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, UInteger> RIDE_ID = createField(DSL.name("ride_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.subtitle</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, String> SUBTITLE = createField(DSL.name("subtitle"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.points</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, Integer> POINTS = createField(DSL.name("points"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.message</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, String> MESSAGE = createField(DSL.name("message"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.note</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, String> NOTE = createField(DSL.name("note"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.is_active</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.created_by</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.created_at</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.last_updated_by</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.contests_points_history.last_updated_at</code>.
     */
    public final TableField<ContestsPointsHistoryRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>blusmartDevDb.contests_points_history</code> table reference
     */
    public ContestsPointsHistory() {
        this(DSL.name("contests_points_history"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.contests_points_history</code> table reference
     */
    public ContestsPointsHistory(String alias) {
        this(DSL.name(alias), CONTESTS_POINTS_HISTORY);
    }

    /**
     * Create an aliased <code>blusmartDevDb.contests_points_history</code> table reference
     */
    public ContestsPointsHistory(Name alias) {
        this(alias, CONTESTS_POINTS_HISTORY);
    }

    private ContestsPointsHistory(Name alias, Table<ContestsPointsHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContestsPointsHistory(Name alias, Table<ContestsPointsHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ContestsPointsHistory(Table<O> child, ForeignKey<O, ContestsPointsHistoryRecord> key) {
        super(child, key, CONTESTS_POINTS_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<ContestsPointsHistoryRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_CONTESTS_POINTS_HISTORY;
    }

    @Override
    public UniqueKey<ContestsPointsHistoryRecord> getPrimaryKey() {
        return Keys.KEY_CONTESTS_POINTS_HISTORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<ContestsPointsHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ContestsPointsHistoryRecord>>asList(Keys.KEY_CONTESTS_POINTS_HISTORY_PRIMARY);
    }

    @Override
    public ContestsPointsHistory as(String alias) {
        return new ContestsPointsHistory(DSL.name(alias), this);
    }

    @Override
    public ContestsPointsHistory as(Name alias) {
        return new ContestsPointsHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContestsPointsHistory rename(String name) {
        return new ContestsPointsHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContestsPointsHistory rename(Name name) {
        return new ContestsPointsHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, UInteger, UInteger, UInteger, String, Integer, String, String, Byte, UInteger, Long, UInteger, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
