/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.DriverCreditsDebitsAuditRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverCreditsDebitsAudit extends TableImpl<DriverCreditsDebitsAuditRecord> {

    private static final long serialVersionUID = -1662842263;

    /**
     * The reference instance of <code>blusmartDevDb.driver_credits_debits_audit</code>
     */
    public static final DriverCreditsDebitsAudit DRIVER_CREDITS_DEBITS_AUDIT = new DriverCreditsDebitsAudit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DriverCreditsDebitsAuditRecord> getRecordType() {
        return DriverCreditsDebitsAuditRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.audit_id</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, UInteger> AUDIT_ID = createField(DSL.name("audit_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.id</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.lease_driver_final_payout_id</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, UInteger> LEASE_DRIVER_FINAL_PAYOUT_ID = createField(DSL.name("lease_driver_final_payout_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.occurrence_timestamp</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, Long> OCCURRENCE_TIMESTAMP = createField(DSL.name("occurrence_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.driver_id</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, UInteger> DRIVER_ID = createField(DSL.name("driver_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.driver_name</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, String> DRIVER_NAME = createField(DSL.name("driver_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.amount</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.DECIMAL(20, 8).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.type</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.vehicle_number</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, String> VEHICLE_NUMBER = createField(DSL.name("vehicle_number"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.reason</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, String> REASON = createField(DSL.name("reason"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.other_flags</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, String> OTHER_FLAGS = createField(DSL.name("other_flags"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.is_active</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.created_timestamp</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.last_updated_timestamp</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.created_by</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.last_updated_by</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.status</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_credits_debits_audit.disbursal_timestamp</code>.
     */
    public final TableField<DriverCreditsDebitsAuditRecord, Long> DISBURSAL_TIMESTAMP = createField(DSL.name("disbursal_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>blusmartDevDb.driver_credits_debits_audit</code> table reference
     */
    public DriverCreditsDebitsAudit() {
        this(DSL.name("driver_credits_debits_audit"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.driver_credits_debits_audit</code> table reference
     */
    public DriverCreditsDebitsAudit(String alias) {
        this(DSL.name(alias), DRIVER_CREDITS_DEBITS_AUDIT);
    }

    /**
     * Create an aliased <code>blusmartDevDb.driver_credits_debits_audit</code> table reference
     */
    public DriverCreditsDebitsAudit(Name alias) {
        this(alias, DRIVER_CREDITS_DEBITS_AUDIT);
    }

    private DriverCreditsDebitsAudit(Name alias, Table<DriverCreditsDebitsAuditRecord> aliased) {
        this(alias, aliased, null);
    }

    private DriverCreditsDebitsAudit(Name alias, Table<DriverCreditsDebitsAuditRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> DriverCreditsDebitsAudit(Table<O> child, ForeignKey<O, DriverCreditsDebitsAuditRecord> key) {
        super(child, key, DRIVER_CREDITS_DEBITS_AUDIT);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<DriverCreditsDebitsAuditRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_DRIVER_CREDITS_DEBITS_AUDIT;
    }

    @Override
    public UniqueKey<DriverCreditsDebitsAuditRecord> getPrimaryKey() {
        return Keys.KEY_DRIVER_CREDITS_DEBITS_AUDIT_PRIMARY;
    }

    @Override
    public List<UniqueKey<DriverCreditsDebitsAuditRecord>> getKeys() {
        return Arrays.<UniqueKey<DriverCreditsDebitsAuditRecord>>asList(Keys.KEY_DRIVER_CREDITS_DEBITS_AUDIT_PRIMARY);
    }

    @Override
    public DriverCreditsDebitsAudit as(String alias) {
        return new DriverCreditsDebitsAudit(DSL.name(alias), this);
    }

    @Override
    public DriverCreditsDebitsAudit as(Name alias) {
        return new DriverCreditsDebitsAudit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DriverCreditsDebitsAudit rename(String name) {
        return new DriverCreditsDebitsAudit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DriverCreditsDebitsAudit rename(Name name) {
        return new DriverCreditsDebitsAudit(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<UInteger, UInteger, UInteger, Long, UInteger, String, BigDecimal, String, String, String, String, Byte, Long, Long, UInteger, UInteger, String, Long> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
