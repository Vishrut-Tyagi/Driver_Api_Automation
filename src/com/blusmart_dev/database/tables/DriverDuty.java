/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.DriverDutyRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverDuty extends TableImpl<DriverDutyRecord> {

    private static final long serialVersionUID = 1256764372;

    /**
     * The reference instance of <code>blusmartDevDb.driver_duty</code>
     */
    public static final DriverDuty DRIVER_DUTY = new DriverDuty();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DriverDutyRecord> getRecordType() {
        return DriverDutyRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.driver_duty.id</code>.
     */
    public final TableField<DriverDutyRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.driver_id</code>.
     */
    public final TableField<DriverDutyRecord, Integer> DRIVER_ID = createField(DSL.name("driver_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.online_timestamp</code>.
     */
    public final TableField<DriverDutyRecord, Long> ONLINE_TIMESTAMP = createField(DSL.name("online_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.offline_timestamp</code>.
     */
    public final TableField<DriverDutyRecord, Long> OFFLINE_TIMESTAMP = createField(DSL.name("offline_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.created_at</code>.
     */
    public final TableField<DriverDutyRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.last_updated_at</code>.
     */
    public final TableField<DriverDutyRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.trip_start_timestamp</code>.
     */
    public final TableField<DriverDutyRecord, Long> TRIP_START_TIMESTAMP = createField(DSL.name("trip_start_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.trip_end_timestamp</code>.
     */
    public final TableField<DriverDutyRecord, Long> TRIP_END_TIMESTAMP = createField(DSL.name("trip_end_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.created_by</code>.
     */
    public final TableField<DriverDutyRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.driver_duty.updated_by</code>.
     */
    public final TableField<DriverDutyRecord, UInteger> UPDATED_BY = createField(DSL.name("updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.driver_duty</code> table reference
     */
    public DriverDuty() {
        this(DSL.name("driver_duty"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.driver_duty</code> table reference
     */
    public DriverDuty(String alias) {
        this(DSL.name(alias), DRIVER_DUTY);
    }

    /**
     * Create an aliased <code>blusmartDevDb.driver_duty</code> table reference
     */
    public DriverDuty(Name alias) {
        this(alias, DRIVER_DUTY);
    }

    private DriverDuty(Name alias, Table<DriverDutyRecord> aliased) {
        this(alias, aliased, null);
    }

    private DriverDuty(Name alias, Table<DriverDutyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> DriverDuty(Table<O> child, ForeignKey<O, DriverDutyRecord> key) {
        super(child, key, DRIVER_DUTY);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<DriverDutyRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_DRIVER_DUTY;
    }

    @Override
    public UniqueKey<DriverDutyRecord> getPrimaryKey() {
        return Keys.KEY_DRIVER_DUTY_PRIMARY;
    }

    @Override
    public List<UniqueKey<DriverDutyRecord>> getKeys() {
        return Arrays.<UniqueKey<DriverDutyRecord>>asList(Keys.KEY_DRIVER_DUTY_PRIMARY);
    }

    @Override
    public DriverDuty as(String alias) {
        return new DriverDuty(DSL.name(alias), this);
    }

    @Override
    public DriverDuty as(Name alias) {
        return new DriverDuty(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DriverDuty rename(String name) {
        return new DriverDuty(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DriverDuty rename(Name name) {
        return new DriverDuty(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<UInteger, Integer, Long, Long, Long, Long, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
