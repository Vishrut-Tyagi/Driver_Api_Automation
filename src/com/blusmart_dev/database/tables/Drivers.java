/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.DriversRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Drivers extends TableImpl<DriversRecord> {

    private static final long serialVersionUID = 1290086632;

    /**
     * The reference instance of <code>blusmartDevDb.drivers</code>
     */
    public static final Drivers DRIVERS = new Drivers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DriversRecord> getRecordType() {
        return DriversRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.drivers.id</code>.
     */
    public final TableField<DriversRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.first_name</code>.
     */
    public final TableField<DriversRecord, String> FIRST_NAME = createField(DSL.name("first_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.last_name</code>.
     */
    public final TableField<DriversRecord, String> LAST_NAME = createField(DSL.name("last_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.email</code>.
     */
    public final TableField<DriversRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.phone</code>.
     */
    public final TableField<DriversRecord, String> PHONE = createField(DSL.name("phone"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.profile_pic_url</code>.
     */
    public final TableField<DriversRecord, String> PROFILE_PIC_URL = createField(DSL.name("profile_pic_url"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.is_active</code>.
     */
    public final TableField<DriversRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.hub</code>.
     */
    public final TableField<DriversRecord, String> HUB = createField(DSL.name("hub"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.created_timestamp</code>.
     */
    public final TableField<DriversRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.last_updated_timestamp</code>.
     */
    public final TableField<DriversRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.created_by</code>.
     */
    public final TableField<DriversRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.last_updated_by</code>.
     */
    public final TableField<DriversRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.is_verified</code>.
     */
    public final TableField<DriversRecord, Byte> IS_VERIFIED = createField(DSL.name("is_verified"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.is_blocked</code>.
     */
    public final TableField<DriversRecord, Byte> IS_BLOCKED = createField(DSL.name("is_blocked"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.ssoId</code>.
     */
    public final TableField<DriversRecord, Integer> SSOID = createField(DSL.name("ssoId"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.city</code>.
     */
    public final TableField<DriversRecord, String> CITY = createField(DSL.name("city"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.verification_details</code>.
     */
    public final TableField<DriversRecord, String> VERIFICATION_DETAILS = createField(DSL.name("verification_details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.drivers.other_flags</code>.
     */
    public final TableField<DriversRecord, String> OTHER_FLAGS = createField(DSL.name("other_flags"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.drivers</code> table reference
     */
    public Drivers() {
        this(DSL.name("drivers"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.drivers</code> table reference
     */
    public Drivers(String alias) {
        this(DSL.name(alias), DRIVERS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.drivers</code> table reference
     */
    public Drivers(Name alias) {
        this(alias, DRIVERS);
    }

    private Drivers(Name alias, Table<DriversRecord> aliased) {
        this(alias, aliased, null);
    }

    private Drivers(Name alias, Table<DriversRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Drivers(Table<O> child, ForeignKey<O, DriversRecord> key) {
        super(child, key, DRIVERS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<DriversRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DRIVERS;
    }

    @Override
    public UniqueKey<DriversRecord> getPrimaryKey() {
        return Keys.KEY_DRIVERS_PRIMARY;
    }

    @Override
    public List<UniqueKey<DriversRecord>> getKeys() {
        return Arrays.<UniqueKey<DriversRecord>>asList(Keys.KEY_DRIVERS_PRIMARY);
    }

    @Override
    public Drivers as(String alias) {
        return new Drivers(DSL.name(alias), this);
    }

    @Override
    public Drivers as(Name alias) {
        return new Drivers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Drivers rename(String name) {
        return new Drivers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Drivers rename(Name name) {
        return new Drivers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, String, String, String, String, String, Byte, String, Long, Long, UInteger, UInteger, Byte, Byte, Integer, String, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
