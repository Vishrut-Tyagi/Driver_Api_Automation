/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.InvoicePrefixCounterRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoicePrefixCounter extends TableImpl<InvoicePrefixCounterRecord> {

    private static final long serialVersionUID = -1017407752;

    /**
     * The reference instance of <code>blusmartDevDb.invoice_prefix_counter</code>
     */
    public static final InvoicePrefixCounter INVOICE_PREFIX_COUNTER = new InvoicePrefixCounter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoicePrefixCounterRecord> getRecordType() {
        return InvoicePrefixCounterRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.id</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.prefix</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, String> PREFIX = createField(DSL.name("prefix"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.value</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.year</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, String> YEAR = createField(DSL.name("year"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.applicable_timestamp</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, Long> APPLICABLE_TIMESTAMP = createField(DSL.name("applicable_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.current_count</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, Integer> CURRENT_COUNT = createField(DSL.name("current_count"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.is_active</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.created_by</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.created_at</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.last_updated_by</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.invoice_prefix_counter.last_updated_at</code>.
     */
    public final TableField<InvoicePrefixCounterRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>blusmartDevDb.invoice_prefix_counter</code> table reference
     */
    public InvoicePrefixCounter() {
        this(DSL.name("invoice_prefix_counter"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.invoice_prefix_counter</code> table reference
     */
    public InvoicePrefixCounter(String alias) {
        this(DSL.name(alias), INVOICE_PREFIX_COUNTER);
    }

    /**
     * Create an aliased <code>blusmartDevDb.invoice_prefix_counter</code> table reference
     */
    public InvoicePrefixCounter(Name alias) {
        this(alias, INVOICE_PREFIX_COUNTER);
    }

    private InvoicePrefixCounter(Name alias, Table<InvoicePrefixCounterRecord> aliased) {
        this(alias, aliased, null);
    }

    private InvoicePrefixCounter(Name alias, Table<InvoicePrefixCounterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> InvoicePrefixCounter(Table<O> child, ForeignKey<O, InvoicePrefixCounterRecord> key) {
        super(child, key, INVOICE_PREFIX_COUNTER);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<InvoicePrefixCounterRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_INVOICE_PREFIX_COUNTER;
    }

    @Override
    public UniqueKey<InvoicePrefixCounterRecord> getPrimaryKey() {
        return Keys.KEY_INVOICE_PREFIX_COUNTER_PRIMARY;
    }

    @Override
    public List<UniqueKey<InvoicePrefixCounterRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoicePrefixCounterRecord>>asList(Keys.KEY_INVOICE_PREFIX_COUNTER_PRIMARY);
    }

    @Override
    public InvoicePrefixCounter as(String alias) {
        return new InvoicePrefixCounter(DSL.name(alias), this);
    }

    @Override
    public InvoicePrefixCounter as(Name alias) {
        return new InvoicePrefixCounter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoicePrefixCounter rename(String name) {
        return new InvoicePrefixCounter(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoicePrefixCounter rename(Name name) {
        return new InvoicePrefixCounter(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, String, String, String, Long, Integer, Byte, UInteger, Long, UInteger, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
