/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.LeaseBatchReservationAudRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaseBatchReservationAud extends TableImpl<LeaseBatchReservationAudRecord> {

    private static final long serialVersionUID = -99415835;

    /**
     * The reference instance of <code>blusmartDevDb.lease_batch_reservation_aud</code>
     */
    public static final LeaseBatchReservationAud LEASE_BATCH_RESERVATION_AUD = new LeaseBatchReservationAud();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaseBatchReservationAudRecord> getRecordType() {
        return LeaseBatchReservationAudRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.aud_id</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, UInteger> AUD_ID = createField(DSL.name("aud_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.id</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.batch</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, String> BATCH = createField(DSL.name("batch"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.hub_id</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, UInteger> HUB_ID = createField(DSL.name("hub_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.available_slots</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, Integer> AVAILABLE_SLOTS = createField(DSL.name("available_slots"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.max_slots</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, UInteger> MAX_SLOTS = createField(DSL.name("max_slots"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.is_active</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.created_by</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.created_at</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.last_updated_by</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.lmp_combination_id</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, String> LMP_COMBINATION_ID = createField(DSL.name("lmp_combination_id"), org.jooq.impl.SQLDataType.CHAR(36).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_batch_reservation_aud.last_updated_at</code>.
     */
    public final TableField<LeaseBatchReservationAudRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>blusmartDevDb.lease_batch_reservation_aud</code> table reference
     */
    public LeaseBatchReservationAud() {
        this(DSL.name("lease_batch_reservation_aud"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.lease_batch_reservation_aud</code> table reference
     */
    public LeaseBatchReservationAud(String alias) {
        this(DSL.name(alias), LEASE_BATCH_RESERVATION_AUD);
    }

    /**
     * Create an aliased <code>blusmartDevDb.lease_batch_reservation_aud</code> table reference
     */
    public LeaseBatchReservationAud(Name alias) {
        this(alias, LEASE_BATCH_RESERVATION_AUD);
    }

    private LeaseBatchReservationAud(Name alias, Table<LeaseBatchReservationAudRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaseBatchReservationAud(Name alias, Table<LeaseBatchReservationAudRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> LeaseBatchReservationAud(Table<O> child, ForeignKey<O, LeaseBatchReservationAudRecord> key) {
        super(child, key, LEASE_BATCH_RESERVATION_AUD);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<LeaseBatchReservationAudRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_LEASE_BATCH_RESERVATION_AUD;
    }

    @Override
    public UniqueKey<LeaseBatchReservationAudRecord> getPrimaryKey() {
        return Keys.KEY_LEASE_BATCH_RESERVATION_AUD_PRIMARY;
    }

    @Override
    public List<UniqueKey<LeaseBatchReservationAudRecord>> getKeys() {
        return Arrays.<UniqueKey<LeaseBatchReservationAudRecord>>asList(Keys.KEY_LEASE_BATCH_RESERVATION_AUD_PRIMARY);
    }

    @Override
    public LeaseBatchReservationAud as(String alias) {
        return new LeaseBatchReservationAud(DSL.name(alias), this);
    }

    @Override
    public LeaseBatchReservationAud as(Name alias) {
        return new LeaseBatchReservationAud(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaseBatchReservationAud rename(String name) {
        return new LeaseBatchReservationAud(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaseBatchReservationAud rename(Name name) {
        return new LeaseBatchReservationAud(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<UInteger, UInteger, String, UInteger, Integer, UInteger, Byte, UInteger, Long, UInteger, String, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
