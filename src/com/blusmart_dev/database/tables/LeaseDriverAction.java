/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.LeaseDriverActionRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaseDriverAction extends TableImpl<LeaseDriverActionRecord> {

    private static final long serialVersionUID = -70708086;

    /**
     * The reference instance of <code>blusmartDevDb.lease_driver_action</code>
     */
    public static final LeaseDriverAction LEASE_DRIVER_ACTION = new LeaseDriverAction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaseDriverActionRecord> getRecordType() {
        return LeaseDriverActionRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.lease_driver_action.id</code>.
     */
    public final TableField<LeaseDriverActionRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.duty_id</code>.
     */
    public final TableField<LeaseDriverActionRecord, UInteger> DUTY_ID = createField(DSL.name("duty_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.driver_id</code>.
     */
    public final TableField<LeaseDriverActionRecord, UInteger> DRIVER_ID = createField(DSL.name("driver_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.driver_lease_daily_stats_id</code>.
     */
    public final TableField<LeaseDriverActionRecord, UInteger> DRIVER_LEASE_DAILY_STATS_ID = createField(DSL.name("driver_lease_daily_stats_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.vehicle_number</code>.
     */
    public final TableField<LeaseDriverActionRecord, String> VEHICLE_NUMBER = createField(DSL.name("vehicle_number"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.from_state</code>.
     */
    public final TableField<LeaseDriverActionRecord, String> FROM_STATE = createField(DSL.name("from_state"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.to_state</code>.
     */
    public final TableField<LeaseDriverActionRecord, String> TO_STATE = createField(DSL.name("to_state"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.from_timestamp</code>.
     */
    public final TableField<LeaseDriverActionRecord, Long> FROM_TIMESTAMP = createField(DSL.name("from_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.to_timestamp</code>.
     */
    public final TableField<LeaseDriverActionRecord, Long> TO_TIMESTAMP = createField(DSL.name("to_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.is_active</code>.
     */
    public final TableField<LeaseDriverActionRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.created_by</code>.
     */
    public final TableField<LeaseDriverActionRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.created_timestamp</code>.
     */
    public final TableField<LeaseDriverActionRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_driver_action.pause_reason</code>.
     */
    public final TableField<LeaseDriverActionRecord, String> PAUSE_REASON = createField(DSL.name("pause_reason"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.lease_driver_action</code> table reference
     */
    public LeaseDriverAction() {
        this(DSL.name("lease_driver_action"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.lease_driver_action</code> table reference
     */
    public LeaseDriverAction(String alias) {
        this(DSL.name(alias), LEASE_DRIVER_ACTION);
    }

    /**
     * Create an aliased <code>blusmartDevDb.lease_driver_action</code> table reference
     */
    public LeaseDriverAction(Name alias) {
        this(alias, LEASE_DRIVER_ACTION);
    }

    private LeaseDriverAction(Name alias, Table<LeaseDriverActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaseDriverAction(Name alias, Table<LeaseDriverActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> LeaseDriverAction(Table<O> child, ForeignKey<O, LeaseDriverActionRecord> key) {
        super(child, key, LEASE_DRIVER_ACTION);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<LeaseDriverActionRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_LEASE_DRIVER_ACTION;
    }

    @Override
    public UniqueKey<LeaseDriverActionRecord> getPrimaryKey() {
        return Keys.KEY_LEASE_DRIVER_ACTION_PRIMARY;
    }

    @Override
    public List<UniqueKey<LeaseDriverActionRecord>> getKeys() {
        return Arrays.<UniqueKey<LeaseDriverActionRecord>>asList(Keys.KEY_LEASE_DRIVER_ACTION_PRIMARY);
    }

    @Override
    public LeaseDriverAction as(String alias) {
        return new LeaseDriverAction(DSL.name(alias), this);
    }

    @Override
    public LeaseDriverAction as(Name alias) {
        return new LeaseDriverAction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaseDriverAction rename(String name) {
        return new LeaseDriverAction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaseDriverAction rename(Name name) {
        return new LeaseDriverAction(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, UInteger, UInteger, UInteger, String, String, String, Long, Long, Byte, UInteger, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
