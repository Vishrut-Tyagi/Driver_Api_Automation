/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.LeaseSkipDatesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaseSkipDates extends TableImpl<LeaseSkipDatesRecord> {

    private static final long serialVersionUID = 1109530198;

    /**
     * The reference instance of <code>blusmartDevDb.lease_skip_dates</code>
     */
    public static final LeaseSkipDates LEASE_SKIP_DATES = new LeaseSkipDates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaseSkipDatesRecord> getRecordType() {
        return LeaseSkipDatesRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.id</code>.
     */
    public final TableField<LeaseSkipDatesRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.date</code>.
     */
    public final TableField<LeaseSkipDatesRecord, Long> DATE = createField(DSL.name("date"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.available_quota</code>.
     */
    public final TableField<LeaseSkipDatesRecord, Integer> AVAILABLE_QUOTA = createField(DSL.name("available_quota"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.max_quota</code>.
     */
    public final TableField<LeaseSkipDatesRecord, UInteger> MAX_QUOTA = createField(DSL.name("max_quota"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.is_active</code>.
     */
    public final TableField<LeaseSkipDatesRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.created_by</code>.
     */
    public final TableField<LeaseSkipDatesRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.created_at</code>.
     */
    public final TableField<LeaseSkipDatesRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.last_updated_by</code>.
     */
    public final TableField<LeaseSkipDatesRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.last_updated_at</code>.
     */
    public final TableField<LeaseSkipDatesRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.hub_id</code>.
     */
    public final TableField<LeaseSkipDatesRecord, UInteger> HUB_ID = createField(DSL.name("hub_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.lease_skip_dates.duty_type</code>.
     */
    public final TableField<LeaseSkipDatesRecord, String> DUTY_TYPE = createField(DSL.name("duty_type"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.lease_skip_dates</code> table reference
     */
    public LeaseSkipDates() {
        this(DSL.name("lease_skip_dates"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.lease_skip_dates</code> table reference
     */
    public LeaseSkipDates(String alias) {
        this(DSL.name(alias), LEASE_SKIP_DATES);
    }

    /**
     * Create an aliased <code>blusmartDevDb.lease_skip_dates</code> table reference
     */
    public LeaseSkipDates(Name alias) {
        this(alias, LEASE_SKIP_DATES);
    }

    private LeaseSkipDates(Name alias, Table<LeaseSkipDatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaseSkipDates(Name alias, Table<LeaseSkipDatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> LeaseSkipDates(Table<O> child, ForeignKey<O, LeaseSkipDatesRecord> key) {
        super(child, key, LEASE_SKIP_DATES);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<LeaseSkipDatesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_LEASE_SKIP_DATES;
    }

    @Override
    public UniqueKey<LeaseSkipDatesRecord> getPrimaryKey() {
        return Keys.KEY_LEASE_SKIP_DATES_PRIMARY;
    }

    @Override
    public List<UniqueKey<LeaseSkipDatesRecord>> getKeys() {
        return Arrays.<UniqueKey<LeaseSkipDatesRecord>>asList(Keys.KEY_LEASE_SKIP_DATES_PRIMARY);
    }

    @Override
    public LeaseSkipDates as(String alias) {
        return new LeaseSkipDates(DSL.name(alias), this);
    }

    @Override
    public LeaseSkipDates as(Name alias) {
        return new LeaseSkipDates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaseSkipDates rename(String name) {
        return new LeaseSkipDates(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaseSkipDates rename(Name name) {
        return new LeaseSkipDates(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, Long, Integer, UInteger, Byte, UInteger, Long, UInteger, Long, UInteger, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
