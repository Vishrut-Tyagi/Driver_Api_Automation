/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.LevelsAchivementsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LevelsAchivements extends TableImpl<LevelsAchivementsRecord> {

    private static final long serialVersionUID = -609141092;

    /**
     * The reference instance of <code>blusmartDevDb.levels_achivements</code>
     */
    public static final LevelsAchivements LEVELS_ACHIVEMENTS = new LevelsAchivements();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LevelsAchivementsRecord> getRecordType() {
        return LevelsAchivementsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.levels_achivements.id</code>.
     */
    public final TableField<LevelsAchivementsRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.levels_achivements.achivement_name</code>.
     */
    public final TableField<LevelsAchivementsRecord, String> ACHIVEMENT_NAME = createField(DSL.name("achivement_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.levels_achivements.achivement_details</code>.
     */
    public final TableField<LevelsAchivementsRecord, String> ACHIVEMENT_DETAILS = createField(DSL.name("achivement_details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.levels_achivements.is_active</code>.
     */
    public final TableField<LevelsAchivementsRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.levels_achivements.created_at</code>.
     */
    public final TableField<LevelsAchivementsRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.levels_achivements.created_by</code>.
     */
    public final TableField<LevelsAchivementsRecord, Integer> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.levels_achivements.last_updated_at</code>.
     */
    public final TableField<LevelsAchivementsRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.levels_achivements.last_updated_by</code>.
     */
    public final TableField<LevelsAchivementsRecord, Integer> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>blusmartDevDb.levels_achivements</code> table reference
     */
    public LevelsAchivements() {
        this(DSL.name("levels_achivements"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.levels_achivements</code> table reference
     */
    public LevelsAchivements(String alias) {
        this(DSL.name(alias), LEVELS_ACHIVEMENTS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.levels_achivements</code> table reference
     */
    public LevelsAchivements(Name alias) {
        this(alias, LEVELS_ACHIVEMENTS);
    }

    private LevelsAchivements(Name alias, Table<LevelsAchivementsRecord> aliased) {
        this(alias, aliased, null);
    }

    private LevelsAchivements(Name alias, Table<LevelsAchivementsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> LevelsAchivements(Table<O> child, ForeignKey<O, LevelsAchivementsRecord> key) {
        super(child, key, LEVELS_ACHIVEMENTS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<LevelsAchivementsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LEVELS_ACHIVEMENTS;
    }

    @Override
    public UniqueKey<LevelsAchivementsRecord> getPrimaryKey() {
        return Keys.KEY_LEVELS_ACHIVEMENTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<LevelsAchivementsRecord>> getKeys() {
        return Arrays.<UniqueKey<LevelsAchivementsRecord>>asList(Keys.KEY_LEVELS_ACHIVEMENTS_PRIMARY);
    }

    @Override
    public LevelsAchivements as(String alias) {
        return new LevelsAchivements(DSL.name(alias), this);
    }

    @Override
    public LevelsAchivements as(Name alias) {
        return new LevelsAchivements(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LevelsAchivements rename(String name) {
        return new LevelsAchivements(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LevelsAchivements rename(Name name) {
        return new LevelsAchivements(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, Byte, Long, Integer, Long, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
