/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.PaymentTransactionRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentTransaction extends TableImpl<PaymentTransactionRecord> {

    private static final long serialVersionUID = 771743439;

    /**
     * The reference instance of <code>blusmartDevDb.payment_transaction</code>
     */
    public static final PaymentTransaction PAYMENT_TRANSACTION = new PaymentTransaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentTransactionRecord> getRecordType() {
        return PaymentTransactionRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.payment_transaction.id</code>.
     */
    public final TableField<PaymentTransactionRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.ride_id</code>.
     */
    public final TableField<PaymentTransactionRecord, UInteger> RIDE_ID = createField(DSL.name("ride_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.payment_source</code>.
     */
    public final TableField<PaymentTransactionRecord, String> PAYMENT_SOURCE = createField(DSL.name("payment_source"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.transaction_id</code>.
     */
    public final TableField<PaymentTransactionRecord, String> TRANSACTION_ID = createField(DSL.name("transaction_id"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.request_checksum</code>.
     */
    public final TableField<PaymentTransactionRecord, String> REQUEST_CHECKSUM = createField(DSL.name("request_checksum"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.request_metadata</code>.
     */
    public final TableField<PaymentTransactionRecord, String> REQUEST_METADATA = createField(DSL.name("request_metadata"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.request_sent_timestamp</code>.
     */
    public final TableField<PaymentTransactionRecord, Long> REQUEST_SENT_TIMESTAMP = createField(DSL.name("request_sent_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.response_metadata</code>.
     */
    public final TableField<PaymentTransactionRecord, String> RESPONSE_METADATA = createField(DSL.name("response_metadata"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.response_checksum</code>.
     */
    public final TableField<PaymentTransactionRecord, String> RESPONSE_CHECKSUM = createField(DSL.name("response_checksum"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.response_received_timestamp</code>.
     */
    public final TableField<PaymentTransactionRecord, Long> RESPONSE_RECEIVED_TIMESTAMP = createField(DSL.name("response_received_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.transaction_state</code>.
     */
    public final TableField<PaymentTransactionRecord, String> TRANSACTION_STATE = createField(DSL.name("transaction_state"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.error_log</code>.
     */
    public final TableField<PaymentTransactionRecord, String> ERROR_LOG = createField(DSL.name("error_log"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.created_timestamp</code>.
     */
    public final TableField<PaymentTransactionRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.last_updated_timestamp</code>.
     */
    public final TableField<PaymentTransactionRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.is_active</code>.
     */
    public final TableField<PaymentTransactionRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.created_by</code>.
     */
    public final TableField<PaymentTransactionRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.last_updated_by</code>.
     */
    public final TableField<PaymentTransactionRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.payment_transaction.payment_order_id</code>.
     */
    public final TableField<PaymentTransactionRecord, UInteger> PAYMENT_ORDER_ID = createField(DSL.name("payment_order_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.payment_transaction</code> table reference
     */
    public PaymentTransaction() {
        this(DSL.name("payment_transaction"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.payment_transaction</code> table reference
     */
    public PaymentTransaction(String alias) {
        this(DSL.name(alias), PAYMENT_TRANSACTION);
    }

    /**
     * Create an aliased <code>blusmartDevDb.payment_transaction</code> table reference
     */
    public PaymentTransaction(Name alias) {
        this(alias, PAYMENT_TRANSACTION);
    }

    private PaymentTransaction(Name alias, Table<PaymentTransactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentTransaction(Name alias, Table<PaymentTransactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PaymentTransaction(Table<O> child, ForeignKey<O, PaymentTransactionRecord> key) {
        super(child, key, PAYMENT_TRANSACTION);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<PaymentTransactionRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PAYMENT_TRANSACTION;
    }

    @Override
    public UniqueKey<PaymentTransactionRecord> getPrimaryKey() {
        return Keys.KEY_PAYMENT_TRANSACTION_PRIMARY;
    }

    @Override
    public List<UniqueKey<PaymentTransactionRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentTransactionRecord>>asList(Keys.KEY_PAYMENT_TRANSACTION_PRIMARY);
    }

    @Override
    public PaymentTransaction as(String alias) {
        return new PaymentTransaction(DSL.name(alias), this);
    }

    @Override
    public PaymentTransaction as(Name alias) {
        return new PaymentTransaction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentTransaction rename(String name) {
        return new PaymentTransaction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentTransaction rename(Name name) {
        return new PaymentTransaction(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<UInteger, UInteger, String, String, String, String, Long, String, String, Long, String, String, Long, Long, Byte, UInteger, UInteger, UInteger> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
