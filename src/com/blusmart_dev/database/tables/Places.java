/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.PlacesRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Places extends TableImpl<PlacesRecord> {

    private static final long serialVersionUID = 1399629375;

    /**
     * The reference instance of <code>blusmartDevDb.places</code>
     */
    public static final Places PLACES = new Places();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlacesRecord> getRecordType() {
        return PlacesRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.places.id</code>.
     */
    public final TableField<PlacesRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.places.display_name</code>.
     */
    public final TableField<PlacesRecord, String> DISPLAY_NAME = createField(DSL.name("display_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.places.place_name</code>.
     */
    public final TableField<PlacesRecord, String> PLACE_NAME = createField(DSL.name("place_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.places.place_address</code>.
     */
    public final TableField<PlacesRecord, String> PLACE_ADDRESS = createField(DSL.name("place_address"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.places.place_id</code>.
     */
    public final TableField<PlacesRecord, String> PLACE_ID = createField(DSL.name("place_id"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.places.parent_place_id</code>.
     */
    public final TableField<PlacesRecord, String> PARENT_PLACE_ID = createField(DSL.name("parent_place_id"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.places.latitude</code>.
     */
    public final TableField<PlacesRecord, BigDecimal> LATITUDE = createField(DSL.name("latitude"), org.jooq.impl.SQLDataType.DECIMAL(30, 16).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.places.longitude</code>.
     */
    public final TableField<PlacesRecord, BigDecimal> LONGITUDE = createField(DSL.name("longitude"), org.jooq.impl.SQLDataType.DECIMAL(30, 16).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.places.is_active</code>.
     */
    public final TableField<PlacesRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.places.created_timestamp</code>.
     */
    public final TableField<PlacesRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.places.last_updated_timestamp</code>.
     */
    public final TableField<PlacesRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.places.created_by</code>.
     */
    public final TableField<PlacesRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.places.last_updated_by</code>.
     */
    public final TableField<PlacesRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.places</code> table reference
     */
    public Places() {
        this(DSL.name("places"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.places</code> table reference
     */
    public Places(String alias) {
        this(DSL.name(alias), PLACES);
    }

    /**
     * Create an aliased <code>blusmartDevDb.places</code> table reference
     */
    public Places(Name alias) {
        this(alias, PLACES);
    }

    private Places(Name alias, Table<PlacesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Places(Name alias, Table<PlacesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Places(Table<O> child, ForeignKey<O, PlacesRecord> key) {
        super(child, key, PLACES);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<PlacesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PLACES;
    }

    @Override
    public UniqueKey<PlacesRecord> getPrimaryKey() {
        return Keys.KEY_PLACES_PRIMARY;
    }

    @Override
    public List<UniqueKey<PlacesRecord>> getKeys() {
        return Arrays.<UniqueKey<PlacesRecord>>asList(Keys.KEY_PLACES_PRIMARY);
    }

    @Override
    public Places as(String alias) {
        return new Places(DSL.name(alias), this);
    }

    @Override
    public Places as(Name alias) {
        return new Places(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Places rename(String name) {
        return new Places(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Places rename(Name name) {
        return new Places(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, String, String, String, String, String, BigDecimal, BigDecimal, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
