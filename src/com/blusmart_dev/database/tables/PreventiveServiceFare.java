/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.PreventiveServiceFareRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PreventiveServiceFare extends TableImpl<PreventiveServiceFareRecord> {

    private static final long serialVersionUID = -901682501;

    /**
     * The reference instance of <code>blusmartDevDb.preventive_service_fare</code>
     */
    public static final PreventiveServiceFare PREVENTIVE_SERVICE_FARE = new PreventiveServiceFare();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PreventiveServiceFareRecord> getRecordType() {
        return PreventiveServiceFareRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.id</code>.
     */
    public final TableField<PreventiveServiceFareRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.from_id</code>.
     */
    public final TableField<PreventiveServiceFareRecord, UInteger> FROM_ID = createField(DSL.name("from_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.to_id</code>.
     */
    public final TableField<PreventiveServiceFareRecord, UInteger> TO_ID = createField(DSL.name("to_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.amount</code>.
     */
    public final TableField<PreventiveServiceFareRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.DECIMAL(20, 8).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.type</code>.
     */
    public final TableField<PreventiveServiceFareRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.created_by</code>.
     */
    public final TableField<PreventiveServiceFareRecord, Integer> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.updated_by</code>.
     */
    public final TableField<PreventiveServiceFareRecord, Integer> UPDATED_BY = createField(DSL.name("updated_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.created_at</code>.
     */
    public final TableField<PreventiveServiceFareRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.last_updated_at</code>.
     */
    public final TableField<PreventiveServiceFareRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.preventive_service_fare.is_active</code>.
     */
    public final TableField<PreventiveServiceFareRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>blusmartDevDb.preventive_service_fare</code> table reference
     */
    public PreventiveServiceFare() {
        this(DSL.name("preventive_service_fare"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.preventive_service_fare</code> table reference
     */
    public PreventiveServiceFare(String alias) {
        this(DSL.name(alias), PREVENTIVE_SERVICE_FARE);
    }

    /**
     * Create an aliased <code>blusmartDevDb.preventive_service_fare</code> table reference
     */
    public PreventiveServiceFare(Name alias) {
        this(alias, PREVENTIVE_SERVICE_FARE);
    }

    private PreventiveServiceFare(Name alias, Table<PreventiveServiceFareRecord> aliased) {
        this(alias, aliased, null);
    }

    private PreventiveServiceFare(Name alias, Table<PreventiveServiceFareRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PreventiveServiceFare(Table<O> child, ForeignKey<O, PreventiveServiceFareRecord> key) {
        super(child, key, PREVENTIVE_SERVICE_FARE);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<PreventiveServiceFareRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PREVENTIVE_SERVICE_FARE;
    }

    @Override
    public UniqueKey<PreventiveServiceFareRecord> getPrimaryKey() {
        return Keys.KEY_PREVENTIVE_SERVICE_FARE_PRIMARY;
    }

    @Override
    public List<UniqueKey<PreventiveServiceFareRecord>> getKeys() {
        return Arrays.<UniqueKey<PreventiveServiceFareRecord>>asList(Keys.KEY_PREVENTIVE_SERVICE_FARE_PRIMARY);
    }

    @Override
    public PreventiveServiceFare as(String alias) {
        return new PreventiveServiceFare(DSL.name(alias), this);
    }

    @Override
    public PreventiveServiceFare as(Name alias) {
        return new PreventiveServiceFare(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PreventiveServiceFare rename(String name) {
        return new PreventiveServiceFare(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PreventiveServiceFare rename(Name name) {
        return new PreventiveServiceFare(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<UInteger, UInteger, UInteger, BigDecimal, String, Integer, Integer, Long, Long, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
