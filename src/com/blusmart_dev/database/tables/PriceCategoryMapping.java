/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.PriceCategoryMappingRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PriceCategoryMapping extends TableImpl<PriceCategoryMappingRecord> {

    private static final long serialVersionUID = 576265681;

    /**
     * The reference instance of <code>blusmartDevDb.price_category_mapping</code>
     */
    public static final PriceCategoryMapping PRICE_CATEGORY_MAPPING = new PriceCategoryMapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PriceCategoryMappingRecord> getRecordType() {
        return PriceCategoryMappingRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.price_category_mapping.id</code>.
     */
    public final TableField<PriceCategoryMappingRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.category_code</code>.
     */
    public final TableField<PriceCategoryMappingRecord, String> CATEGORY_CODE = createField(DSL.name("category_code"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.base_price</code>.
     */
    public final TableField<PriceCategoryMappingRecord, UInteger> BASE_PRICE = createField(DSL.name("base_price"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.package_code</code>.
     */
    public final TableField<PriceCategoryMappingRecord, String> PACKAGE_CODE = createField(DSL.name("package_code"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.is_active</code>.
     */
    public final TableField<PriceCategoryMappingRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.created_timestamp</code>.
     */
    public final TableField<PriceCategoryMappingRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.last_updated_timestamp</code>.
     */
    public final TableField<PriceCategoryMappingRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.created_by</code>.
     */
    public final TableField<PriceCategoryMappingRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.last_updated_by</code>.
     */
    public final TableField<PriceCategoryMappingRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.price_category_mapping.other_flags</code>.
     */
    public final TableField<PriceCategoryMappingRecord, String> OTHER_FLAGS = createField(DSL.name("other_flags"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.price_category_mapping</code> table reference
     */
    public PriceCategoryMapping() {
        this(DSL.name("price_category_mapping"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.price_category_mapping</code> table reference
     */
    public PriceCategoryMapping(String alias) {
        this(DSL.name(alias), PRICE_CATEGORY_MAPPING);
    }

    /**
     * Create an aliased <code>blusmartDevDb.price_category_mapping</code> table reference
     */
    public PriceCategoryMapping(Name alias) {
        this(alias, PRICE_CATEGORY_MAPPING);
    }

    private PriceCategoryMapping(Name alias, Table<PriceCategoryMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private PriceCategoryMapping(Name alias, Table<PriceCategoryMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PriceCategoryMapping(Table<O> child, ForeignKey<O, PriceCategoryMappingRecord> key) {
        super(child, key, PRICE_CATEGORY_MAPPING);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<PriceCategoryMappingRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PRICE_CATEGORY_MAPPING;
    }

    @Override
    public UniqueKey<PriceCategoryMappingRecord> getPrimaryKey() {
        return Keys.KEY_PRICE_CATEGORY_MAPPING_PRIMARY;
    }

    @Override
    public List<UniqueKey<PriceCategoryMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<PriceCategoryMappingRecord>>asList(Keys.KEY_PRICE_CATEGORY_MAPPING_PRIMARY);
    }

    @Override
    public PriceCategoryMapping as(String alias) {
        return new PriceCategoryMapping(DSL.name(alias), this);
    }

    @Override
    public PriceCategoryMapping as(Name alias) {
        return new PriceCategoryMapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PriceCategoryMapping rename(String name) {
        return new PriceCategoryMapping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PriceCategoryMapping rename(Name name) {
        return new PriceCategoryMapping(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<UInteger, String, UInteger, String, Byte, Long, Long, UInteger, UInteger, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
