/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.PromotionalCreditsRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PromotionalCredits extends TableImpl<PromotionalCreditsRecord> {

    private static final long serialVersionUID = -588998450;

    /**
     * The reference instance of <code>blusmartDevDb.promotional_credits</code>
     */
    public static final PromotionalCredits PROMOTIONAL_CREDITS = new PromotionalCredits();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PromotionalCreditsRecord> getRecordType() {
        return PromotionalCreditsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.promotional_credits.id</code>.
     */
    public final TableField<PromotionalCreditsRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.rider_id</code>.
     */
    public final TableField<PromotionalCreditsRecord, UInteger> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.credit_amount</code>.
     */
    public final TableField<PromotionalCreditsRecord, BigDecimal> CREDIT_AMOUNT = createField(DSL.name("credit_amount"), org.jooq.impl.SQLDataType.DECIMAL(11, 2).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.expiry_timestamp</code>.
     */
    public final TableField<PromotionalCreditsRecord, Long> EXPIRY_TIMESTAMP = createField(DSL.name("expiry_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.expired_balance</code>.
     */
    public final TableField<PromotionalCreditsRecord, BigDecimal> EXPIRED_BALANCE = createField(DSL.name("expired_balance"), org.jooq.impl.SQLDataType.DECIMAL(11, 2).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.source</code>.
     */
    public final TableField<PromotionalCreditsRecord, String> SOURCE = createField(DSL.name("source"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.remark</code>.
     */
    public final TableField<PromotionalCreditsRecord, String> REMARK = createField(DSL.name("remark"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.is_expired</code>.
     */
    public final TableField<PromotionalCreditsRecord, Byte> IS_EXPIRED = createField(DSL.name("is_expired"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.is_active</code>.
     */
    public final TableField<PromotionalCreditsRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.created_timestamp</code>.
     */
    public final TableField<PromotionalCreditsRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.last_updated_timestamp</code>.
     */
    public final TableField<PromotionalCreditsRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.created_by</code>.
     */
    public final TableField<PromotionalCreditsRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.promotional_credits.last_updated_by</code>.
     */
    public final TableField<PromotionalCreditsRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.promotional_credits</code> table reference
     */
    public PromotionalCredits() {
        this(DSL.name("promotional_credits"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.promotional_credits</code> table reference
     */
    public PromotionalCredits(String alias) {
        this(DSL.name(alias), PROMOTIONAL_CREDITS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.promotional_credits</code> table reference
     */
    public PromotionalCredits(Name alias) {
        this(alias, PROMOTIONAL_CREDITS);
    }

    private PromotionalCredits(Name alias, Table<PromotionalCreditsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PromotionalCredits(Name alias, Table<PromotionalCreditsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PromotionalCredits(Table<O> child, ForeignKey<O, PromotionalCreditsRecord> key) {
        super(child, key, PROMOTIONAL_CREDITS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<PromotionalCreditsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PROMOTIONAL_CREDITS;
    }

    @Override
    public UniqueKey<PromotionalCreditsRecord> getPrimaryKey() {
        return Keys.KEY_PROMOTIONAL_CREDITS_PRIMARY;
    }

    @Override
    public List<UniqueKey<PromotionalCreditsRecord>> getKeys() {
        return Arrays.<UniqueKey<PromotionalCreditsRecord>>asList(Keys.KEY_PROMOTIONAL_CREDITS_PRIMARY);
    }

    @Override
    public PromotionalCredits as(String alias) {
        return new PromotionalCredits(DSL.name(alias), this);
    }

    @Override
    public PromotionalCredits as(Name alias) {
        return new PromotionalCredits(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PromotionalCredits rename(String name) {
        return new PromotionalCredits(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PromotionalCredits rename(Name name) {
        return new PromotionalCredits(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, UInteger, BigDecimal, Long, BigDecimal, String, String, Byte, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
