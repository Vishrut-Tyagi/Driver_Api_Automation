/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.QrtzCalendarsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzCalendars extends TableImpl<QrtzCalendarsRecord> {

    private static final long serialVersionUID = -860137519;

    /**
     * The reference instance of <code>blusmartDevDb.QRTZ_CALENDARS</code>
     */
    public static final QrtzCalendars QRTZ_CALENDARS = new QrtzCalendars();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzCalendarsRecord> getRecordType() {
        return QrtzCalendarsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.QRTZ_CALENDARS.SCHED_NAME</code>.
     */
    public final TableField<QrtzCalendarsRecord, String> SCHED_NAME = createField(DSL.name("SCHED_NAME"), org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_CALENDARS.CALENDAR_NAME</code>.
     */
    public final TableField<QrtzCalendarsRecord, String> CALENDAR_NAME = createField(DSL.name("CALENDAR_NAME"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_CALENDARS.CALENDAR</code>.
     */
    public final TableField<QrtzCalendarsRecord, byte[]> CALENDAR = createField(DSL.name("CALENDAR"), org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    /**
     * Create a <code>blusmartDevDb.QRTZ_CALENDARS</code> table reference
     */
    public QrtzCalendars() {
        this(DSL.name("QRTZ_CALENDARS"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_CALENDARS</code> table reference
     */
    public QrtzCalendars(String alias) {
        this(DSL.name(alias), QRTZ_CALENDARS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_CALENDARS</code> table reference
     */
    public QrtzCalendars(Name alias) {
        this(alias, QRTZ_CALENDARS);
    }

    private QrtzCalendars(Name alias, Table<QrtzCalendarsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzCalendars(Name alias, Table<QrtzCalendarsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> QrtzCalendars(Table<O> child, ForeignKey<O, QrtzCalendarsRecord> key) {
        super(child, key, QRTZ_CALENDARS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public UniqueKey<QrtzCalendarsRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_CALENDARS_PRIMARY;
    }

    @Override
    public List<UniqueKey<QrtzCalendarsRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzCalendarsRecord>>asList(Keys.KEY_QRTZ_CALENDARS_PRIMARY);
    }

    @Override
    public QrtzCalendars as(String alias) {
        return new QrtzCalendars(DSL.name(alias), this);
    }

    @Override
    public QrtzCalendars as(Name alias) {
        return new QrtzCalendars(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzCalendars rename(String name) {
        return new QrtzCalendars(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzCalendars rename(Name name) {
        return new QrtzCalendars(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, byte[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
