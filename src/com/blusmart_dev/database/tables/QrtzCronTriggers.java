/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.QrtzCronTriggersRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzCronTriggers extends TableImpl<QrtzCronTriggersRecord> {

    private static final long serialVersionUID = 2036136208;

    /**
     * The reference instance of <code>blusmartDevDb.QRTZ_CRON_TRIGGERS</code>
     */
    public static final QrtzCronTriggers QRTZ_CRON_TRIGGERS = new QrtzCronTriggers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzCronTriggersRecord> getRecordType() {
        return QrtzCronTriggersRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.QRTZ_CRON_TRIGGERS.SCHED_NAME</code>.
     */
    public final TableField<QrtzCronTriggersRecord, String> SCHED_NAME = createField(DSL.name("SCHED_NAME"), org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_CRON_TRIGGERS.TRIGGER_NAME</code>.
     */
    public final TableField<QrtzCronTriggersRecord, String> TRIGGER_NAME = createField(DSL.name("TRIGGER_NAME"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP</code>.
     */
    public final TableField<QrtzCronTriggersRecord, String> TRIGGER_GROUP = createField(DSL.name("TRIGGER_GROUP"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION</code>.
     */
    public final TableField<QrtzCronTriggersRecord, String> CRON_EXPRESSION = createField(DSL.name("CRON_EXPRESSION"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID</code>.
     */
    public final TableField<QrtzCronTriggersRecord, String> TIME_ZONE_ID = createField(DSL.name("TIME_ZONE_ID"), org.jooq.impl.SQLDataType.VARCHAR(80).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.QRTZ_CRON_TRIGGERS</code> table reference
     */
    public QrtzCronTriggers() {
        this(DSL.name("QRTZ_CRON_TRIGGERS"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_CRON_TRIGGERS</code> table reference
     */
    public QrtzCronTriggers(String alias) {
        this(DSL.name(alias), QRTZ_CRON_TRIGGERS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_CRON_TRIGGERS</code> table reference
     */
    public QrtzCronTriggers(Name alias) {
        this(alias, QRTZ_CRON_TRIGGERS);
    }

    private QrtzCronTriggers(Name alias, Table<QrtzCronTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzCronTriggers(Name alias, Table<QrtzCronTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> QrtzCronTriggers(Table<O> child, ForeignKey<O, QrtzCronTriggersRecord> key) {
        super(child, key, QRTZ_CRON_TRIGGERS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public UniqueKey<QrtzCronTriggersRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_CRON_TRIGGERS_PRIMARY;
    }

    @Override
    public List<UniqueKey<QrtzCronTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzCronTriggersRecord>>asList(Keys.KEY_QRTZ_CRON_TRIGGERS_PRIMARY);
    }

    @Override
    public List<ForeignKey<QrtzCronTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QrtzCronTriggersRecord, ?>>asList(Keys.QRTZ_CRON_TRIGGERS_IBFK_1);
    }

    public QrtzTriggers qrtzTriggers() {
        return new QrtzTriggers(this, Keys.QRTZ_CRON_TRIGGERS_IBFK_1);
    }

    @Override
    public QrtzCronTriggers as(String alias) {
        return new QrtzCronTriggers(DSL.name(alias), this);
    }

    @Override
    public QrtzCronTriggers as(Name alias) {
        return new QrtzCronTriggers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzCronTriggers rename(String name) {
        return new QrtzCronTriggers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzCronTriggers rename(Name name) {
        return new QrtzCronTriggers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
