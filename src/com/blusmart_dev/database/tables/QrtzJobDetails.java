/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.QrtzJobDetailsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzJobDetails extends TableImpl<QrtzJobDetailsRecord> {

    private static final long serialVersionUID = -1539402350;

    /**
     * The reference instance of <code>blusmartDevDb.QRTZ_JOB_DETAILS</code>
     */
    public static final QrtzJobDetails QRTZ_JOB_DETAILS = new QrtzJobDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzJobDetailsRecord> getRecordType() {
        return QrtzJobDetailsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.SCHED_NAME</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> SCHED_NAME = createField(DSL.name("SCHED_NAME"), org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.JOB_NAME</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> JOB_NAME = createField(DSL.name("JOB_NAME"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.JOB_GROUP</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> JOB_GROUP = createField(DSL.name("JOB_GROUP"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.DESCRIPTION</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), org.jooq.impl.SQLDataType.VARCHAR(250).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.JOB_CLASS_NAME</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> JOB_CLASS_NAME = createField(DSL.name("JOB_CLASS_NAME"), org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.IS_DURABLE</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> IS_DURABLE = createField(DSL.name("IS_DURABLE"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.IS_NONCONCURRENT</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> IS_NONCONCURRENT = createField(DSL.name("IS_NONCONCURRENT"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.IS_UPDATE_DATA</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> IS_UPDATE_DATA = createField(DSL.name("IS_UPDATE_DATA"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.REQUESTS_RECOVERY</code>.
     */
    public final TableField<QrtzJobDetailsRecord, String> REQUESTS_RECOVERY = createField(DSL.name("REQUESTS_RECOVERY"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_JOB_DETAILS.JOB_DATA</code>.
     */
    public final TableField<QrtzJobDetailsRecord, byte[]> JOB_DATA = createField(DSL.name("JOB_DATA"), org.jooq.impl.SQLDataType.BLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.QRTZ_JOB_DETAILS</code> table reference
     */
    public QrtzJobDetails() {
        this(DSL.name("QRTZ_JOB_DETAILS"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_JOB_DETAILS</code> table reference
     */
    public QrtzJobDetails(String alias) {
        this(DSL.name(alias), QRTZ_JOB_DETAILS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_JOB_DETAILS</code> table reference
     */
    public QrtzJobDetails(Name alias) {
        this(alias, QRTZ_JOB_DETAILS);
    }

    private QrtzJobDetails(Name alias, Table<QrtzJobDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzJobDetails(Name alias, Table<QrtzJobDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> QrtzJobDetails(Table<O> child, ForeignKey<O, QrtzJobDetailsRecord> key) {
        super(child, key, QRTZ_JOB_DETAILS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public UniqueKey<QrtzJobDetailsRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_JOB_DETAILS_PRIMARY;
    }

    @Override
    public List<UniqueKey<QrtzJobDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzJobDetailsRecord>>asList(Keys.KEY_QRTZ_JOB_DETAILS_PRIMARY);
    }

    @Override
    public QrtzJobDetails as(String alias) {
        return new QrtzJobDetails(DSL.name(alias), this);
    }

    @Override
    public QrtzJobDetails as(Name alias) {
        return new QrtzJobDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzJobDetails rename(String name) {
        return new QrtzJobDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzJobDetails rename(Name name) {
        return new QrtzJobDetails(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, String, String, String, String, String, byte[]> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
