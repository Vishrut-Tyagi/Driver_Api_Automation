/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.QrtzSimpropTriggersRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzSimpropTriggers extends TableImpl<QrtzSimpropTriggersRecord> {

    private static final long serialVersionUID = -1858890665;

    /**
     * The reference instance of <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS</code>
     */
    public static final QrtzSimpropTriggers QRTZ_SIMPROP_TRIGGERS = new QrtzSimpropTriggers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzSimpropTriggersRecord> getRecordType() {
        return QrtzSimpropTriggersRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.SCHED_NAME</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> SCHED_NAME = createField(DSL.name("SCHED_NAME"), org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.TRIGGER_NAME</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> TRIGGER_NAME = createField(DSL.name("TRIGGER_NAME"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.TRIGGER_GROUP</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> TRIGGER_GROUP = createField(DSL.name("TRIGGER_GROUP"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.STR_PROP_1</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> STR_PROP_1 = createField(DSL.name("STR_PROP_1"), org.jooq.impl.SQLDataType.VARCHAR(512).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.STR_PROP_2</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> STR_PROP_2 = createField(DSL.name("STR_PROP_2"), org.jooq.impl.SQLDataType.VARCHAR(512).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.STR_PROP_3</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> STR_PROP_3 = createField(DSL.name("STR_PROP_3"), org.jooq.impl.SQLDataType.VARCHAR(512).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.INT_PROP_1</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, Integer> INT_PROP_1 = createField(DSL.name("INT_PROP_1"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.INT_PROP_2</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, Integer> INT_PROP_2 = createField(DSL.name("INT_PROP_2"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.LONG_PROP_1</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, Long> LONG_PROP_1 = createField(DSL.name("LONG_PROP_1"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.LONG_PROP_2</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, Long> LONG_PROP_2 = createField(DSL.name("LONG_PROP_2"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.DEC_PROP_1</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, BigDecimal> DEC_PROP_1 = createField(DSL.name("DEC_PROP_1"), org.jooq.impl.SQLDataType.DECIMAL(13, 4).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.DEC_PROP_2</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, BigDecimal> DEC_PROP_2 = createField(DSL.name("DEC_PROP_2"), org.jooq.impl.SQLDataType.DECIMAL(13, 4).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.BOOL_PROP_1</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> BOOL_PROP_1 = createField(DSL.name("BOOL_PROP_1"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS.BOOL_PROP_2</code>.
     */
    public final TableField<QrtzSimpropTriggersRecord, String> BOOL_PROP_2 = createField(DSL.name("BOOL_PROP_2"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS</code> table reference
     */
    public QrtzSimpropTriggers() {
        this(DSL.name("QRTZ_SIMPROP_TRIGGERS"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS</code> table reference
     */
    public QrtzSimpropTriggers(String alias) {
        this(DSL.name(alias), QRTZ_SIMPROP_TRIGGERS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_SIMPROP_TRIGGERS</code> table reference
     */
    public QrtzSimpropTriggers(Name alias) {
        this(alias, QRTZ_SIMPROP_TRIGGERS);
    }

    private QrtzSimpropTriggers(Name alias, Table<QrtzSimpropTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzSimpropTriggers(Name alias, Table<QrtzSimpropTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> QrtzSimpropTriggers(Table<O> child, ForeignKey<O, QrtzSimpropTriggersRecord> key) {
        super(child, key, QRTZ_SIMPROP_TRIGGERS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public UniqueKey<QrtzSimpropTriggersRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_SIMPROP_TRIGGERS_PRIMARY;
    }

    @Override
    public List<UniqueKey<QrtzSimpropTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzSimpropTriggersRecord>>asList(Keys.KEY_QRTZ_SIMPROP_TRIGGERS_PRIMARY);
    }

    @Override
    public List<ForeignKey<QrtzSimpropTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QrtzSimpropTriggersRecord, ?>>asList(Keys.QRTZ_SIMPROP_TRIGGERS_IBFK_1);
    }

    public QrtzTriggers qrtzTriggers() {
        return new QrtzTriggers(this, Keys.QRTZ_SIMPROP_TRIGGERS_IBFK_1);
    }

    @Override
    public QrtzSimpropTriggers as(String alias) {
        return new QrtzSimpropTriggers(DSL.name(alias), this);
    }

    @Override
    public QrtzSimpropTriggers as(Name alias) {
        return new QrtzSimpropTriggers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzSimpropTriggers rename(String name) {
        return new QrtzSimpropTriggers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzSimpropTriggers rename(Name name) {
        return new QrtzSimpropTriggers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, String, String, String, Integer, Integer, Long, Long, BigDecimal, BigDecimal, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
