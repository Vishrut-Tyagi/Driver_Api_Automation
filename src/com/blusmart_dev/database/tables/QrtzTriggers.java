/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Indexes;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.QrtzTriggersRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzTriggers extends TableImpl<QrtzTriggersRecord> {

    private static final long serialVersionUID = -1505139505;

    /**
     * The reference instance of <code>blusmartDevDb.QRTZ_TRIGGERS</code>
     */
    public static final QrtzTriggers QRTZ_TRIGGERS = new QrtzTriggers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzTriggersRecord> getRecordType() {
        return QrtzTriggersRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.SCHED_NAME</code>.
     */
    public final TableField<QrtzTriggersRecord, String> SCHED_NAME = createField(DSL.name("SCHED_NAME"), org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.TRIGGER_NAME</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_NAME = createField(DSL.name("TRIGGER_NAME"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.TRIGGER_GROUP</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_GROUP = createField(DSL.name("TRIGGER_GROUP"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.JOB_NAME</code>.
     */
    public final TableField<QrtzTriggersRecord, String> JOB_NAME = createField(DSL.name("JOB_NAME"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.JOB_GROUP</code>.
     */
    public final TableField<QrtzTriggersRecord, String> JOB_GROUP = createField(DSL.name("JOB_GROUP"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.DESCRIPTION</code>.
     */
    public final TableField<QrtzTriggersRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), org.jooq.impl.SQLDataType.VARCHAR(250).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.NEXT_FIRE_TIME</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> NEXT_FIRE_TIME = createField(DSL.name("NEXT_FIRE_TIME"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.PREV_FIRE_TIME</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> PREV_FIRE_TIME = createField(DSL.name("PREV_FIRE_TIME"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.PRIORITY</code>.
     */
    public final TableField<QrtzTriggersRecord, Integer> PRIORITY = createField(DSL.name("PRIORITY"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.TRIGGER_STATE</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_STATE = createField(DSL.name("TRIGGER_STATE"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.TRIGGER_TYPE</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_TYPE = createField(DSL.name("TRIGGER_TYPE"), org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.START_TIME</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> START_TIME = createField(DSL.name("START_TIME"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.END_TIME</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> END_TIME = createField(DSL.name("END_TIME"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.CALENDAR_NAME</code>.
     */
    public final TableField<QrtzTriggersRecord, String> CALENDAR_NAME = createField(DSL.name("CALENDAR_NAME"), org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.MISFIRE_INSTR</code>.
     */
    public final TableField<QrtzTriggersRecord, Short> MISFIRE_INSTR = createField(DSL.name("MISFIRE_INSTR"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>blusmartDevDb.QRTZ_TRIGGERS.JOB_DATA</code>.
     */
    public final TableField<QrtzTriggersRecord, byte[]> JOB_DATA = createField(DSL.name("JOB_DATA"), org.jooq.impl.SQLDataType.BLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BLOB)), this, "");

    /**
     * Create a <code>blusmartDevDb.QRTZ_TRIGGERS</code> table reference
     */
    public QrtzTriggers() {
        this(DSL.name("QRTZ_TRIGGERS"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_TRIGGERS</code> table reference
     */
    public QrtzTriggers(String alias) {
        this(DSL.name(alias), QRTZ_TRIGGERS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.QRTZ_TRIGGERS</code> table reference
     */
    public QrtzTriggers(Name alias) {
        this(alias, QRTZ_TRIGGERS);
    }

    private QrtzTriggers(Name alias, Table<QrtzTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzTriggers(Name alias, Table<QrtzTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> QrtzTriggers(Table<O> child, ForeignKey<O, QrtzTriggersRecord> key) {
        super(child, key, QRTZ_TRIGGERS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QRTZ_TRIGGERS_SCHED_NAME);
    }

    @Override
    public UniqueKey<QrtzTriggersRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_TRIGGERS_PRIMARY;
    }

    @Override
    public List<UniqueKey<QrtzTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzTriggersRecord>>asList(Keys.KEY_QRTZ_TRIGGERS_PRIMARY);
    }

    @Override
    public List<ForeignKey<QrtzTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QrtzTriggersRecord, ?>>asList(Keys.QRTZ_TRIGGERS_IBFK_1);
    }

    public QrtzJobDetails qrtzJobDetails() {
        return new QrtzJobDetails(this, Keys.QRTZ_TRIGGERS_IBFK_1);
    }

    @Override
    public QrtzTriggers as(String alias) {
        return new QrtzTriggers(DSL.name(alias), this);
    }

    @Override
    public QrtzTriggers as(Name alias) {
        return new QrtzTriggers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzTriggers rename(String name) {
        return new QrtzTriggers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzTriggers rename(Name name) {
        return new QrtzTriggers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<String, String, String, String, String, String, Long, Long, Integer, String, String, Long, Long, String, Short, byte[]> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
