/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.RfidTyresRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RfidTyres extends TableImpl<RfidTyresRecord> {

    private static final long serialVersionUID = -1406867844;

    /**
     * The reference instance of <code>blusmartDevDb.rfid_tyres</code>
     */
    public static final RfidTyres RFID_TYRES = new RfidTyres();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RfidTyresRecord> getRecordType() {
        return RfidTyresRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.rfid_tyres.id</code>.
     */
    public final TableField<RfidTyresRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.rfid_id</code>.
     */
    public final TableField<RfidTyresRecord, Integer> RFID_ID = createField(DSL.name("rfid_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.tyre_side</code>.
     */
    public final TableField<RfidTyresRecord, String> TYRE_SIDE = createField(DSL.name("tyre_side"), org.jooq.impl.SQLDataType.VARCHAR(2000).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.rssi</code>.
     */
    public final TableField<RfidTyresRecord, String> RSSI = createField(DSL.name("rssi"), org.jooq.impl.SQLDataType.VARCHAR(216).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.epc_id</code>.
     */
    public final TableField<RfidTyresRecord, String> EPC_ID = createField(DSL.name("epc_id"), org.jooq.impl.SQLDataType.VARCHAR(216).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.frequency</code>.
     */
    public final TableField<RfidTyresRecord, String> FREQUENCY = createField(DSL.name("frequency"), org.jooq.impl.SQLDataType.VARCHAR(216).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.is_active</code>.
     */
    public final TableField<RfidTyresRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.created_timestamp</code>.
     */
    public final TableField<RfidTyresRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.last_updated_timestamp</code>.
     */
    public final TableField<RfidTyresRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.created_by</code>.
     */
    public final TableField<RfidTyresRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.rfid_tyres.last_updated_by</code>.
     */
    public final TableField<RfidTyresRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.rfid_tyres</code> table reference
     */
    public RfidTyres() {
        this(DSL.name("rfid_tyres"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.rfid_tyres</code> table reference
     */
    public RfidTyres(String alias) {
        this(DSL.name(alias), RFID_TYRES);
    }

    /**
     * Create an aliased <code>blusmartDevDb.rfid_tyres</code> table reference
     */
    public RfidTyres(Name alias) {
        this(alias, RFID_TYRES);
    }

    private RfidTyres(Name alias, Table<RfidTyresRecord> aliased) {
        this(alias, aliased, null);
    }

    private RfidTyres(Name alias, Table<RfidTyresRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> RfidTyres(Table<O> child, ForeignKey<O, RfidTyresRecord> key) {
        super(child, key, RFID_TYRES);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<RfidTyresRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RFID_TYRES;
    }

    @Override
    public UniqueKey<RfidTyresRecord> getPrimaryKey() {
        return Keys.KEY_RFID_TYRES_PRIMARY;
    }

    @Override
    public List<UniqueKey<RfidTyresRecord>> getKeys() {
        return Arrays.<UniqueKey<RfidTyresRecord>>asList(Keys.KEY_RFID_TYRES_PRIMARY);
    }

    @Override
    public RfidTyres as(String alias) {
        return new RfidTyres(DSL.name(alias), this);
    }

    @Override
    public RfidTyres as(Name alias) {
        return new RfidTyres(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RfidTyres rename(String name) {
        return new RfidTyres(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RfidTyres rename(Name name) {
        return new RfidTyres(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, Integer, String, String, String, String, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
