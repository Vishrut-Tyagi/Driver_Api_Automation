/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.RiderTypesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiderTypes extends TableImpl<RiderTypesRecord> {

    private static final long serialVersionUID = 1043175087;

    /**
     * The reference instance of <code>blusmartDevDb.rider_types</code>
     */
    public static final RiderTypes RIDER_TYPES = new RiderTypes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RiderTypesRecord> getRecordType() {
        return RiderTypesRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.rider_types.id</code>.
     */
    public final TableField<RiderTypesRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.rider_types.rider_id</code>.
     */
    public final TableField<RiderTypesRecord, UInteger> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.rider_types.rider_type</code>.
     */
    public final TableField<RiderTypesRecord, String> RIDER_TYPE = createField(DSL.name("rider_type"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.rider_types.is_active</code>.
     */
    public final TableField<RiderTypesRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.rider_types.created_timestamp</code>.
     */
    public final TableField<RiderTypesRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.rider_types.last_updated_timestamp</code>.
     */
    public final TableField<RiderTypesRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.rider_types.created_by</code>.
     */
    public final TableField<RiderTypesRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.rider_types.last_updated_by</code>.
     */
    public final TableField<RiderTypesRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.rider_types</code> table reference
     */
    public RiderTypes() {
        this(DSL.name("rider_types"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.rider_types</code> table reference
     */
    public RiderTypes(String alias) {
        this(DSL.name(alias), RIDER_TYPES);
    }

    /**
     * Create an aliased <code>blusmartDevDb.rider_types</code> table reference
     */
    public RiderTypes(Name alias) {
        this(alias, RIDER_TYPES);
    }

    private RiderTypes(Name alias, Table<RiderTypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private RiderTypes(Name alias, Table<RiderTypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> RiderTypes(Table<O> child, ForeignKey<O, RiderTypesRecord> key) {
        super(child, key, RIDER_TYPES);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<RiderTypesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RIDER_TYPES;
    }

    @Override
    public UniqueKey<RiderTypesRecord> getPrimaryKey() {
        return Keys.KEY_RIDER_TYPES_PRIMARY;
    }

    @Override
    public List<UniqueKey<RiderTypesRecord>> getKeys() {
        return Arrays.<UniqueKey<RiderTypesRecord>>asList(Keys.KEY_RIDER_TYPES_PRIMARY);
    }

    @Override
    public RiderTypes as(String alias) {
        return new RiderTypes(DSL.name(alias), this);
    }

    @Override
    public RiderTypes as(Name alias) {
        return new RiderTypes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RiderTypes rename(String name) {
        return new RiderTypes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RiderTypes rename(Name name) {
        return new RiderTypes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<UInteger, UInteger, String, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
