/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.RidersRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Riders extends TableImpl<RidersRecord> {

    private static final long serialVersionUID = 1970371605;

    /**
     * The reference instance of <code>blusmartDevDb.riders</code>
     */
    public static final Riders RIDERS = new Riders();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RidersRecord> getRecordType() {
        return RidersRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.riders.id</code>.
     */
    public final TableField<RidersRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.riders.first_name</code>.
     */
    public final TableField<RidersRecord, String> FIRST_NAME = createField(DSL.name("first_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.last_name</code>.
     */
    public final TableField<RidersRecord, String> LAST_NAME = createField(DSL.name("last_name"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.email</code>.
     */
    public final TableField<RidersRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.phone</code>.
     */
    public final TableField<RidersRecord, String> PHONE = createField(DSL.name("phone"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.profile_pic_url</code>.
     */
    public final TableField<RidersRecord, String> PROFILE_PIC_URL = createField(DSL.name("profile_pic_url"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.is_active</code>.
     */
    public final TableField<RidersRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.created_timestamp</code>.
     */
    public final TableField<RidersRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.last_updated_timestamp</code>.
     */
    public final TableField<RidersRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.created_by</code>.
     */
    public final TableField<RidersRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.last_updated_by</code>.
     */
    public final TableField<RidersRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.is_verified</code>.
     */
    public final TableField<RidersRecord, Byte> IS_VERIFIED = createField(DSL.name("is_verified"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.is_blocked</code>.
     */
    public final TableField<RidersRecord, Byte> IS_BLOCKED = createField(DSL.name("is_blocked"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.ssoId</code>.
     */
    public final TableField<RidersRecord, Integer> SSOID = createField(DSL.name("ssoId"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.ridecell_rider_id</code>.
     */
    public final TableField<RidersRecord, Integer> RIDECELL_RIDER_ID = createField(DSL.name("ridecell_rider_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.last_active_timestamp</code>.
     */
    public final TableField<RidersRecord, Long> LAST_ACTIVE_TIMESTAMP = createField(DSL.name("last_active_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.signup_source</code>.
     */
    public final TableField<RidersRecord, String> SIGNUP_SOURCE = createField(DSL.name("signup_source"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.login_source</code>.
     */
    public final TableField<RidersRecord, String> LOGIN_SOURCE = createField(DSL.name("login_source"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.user_setting</code>.
     */
    public final TableField<RidersRecord, String> USER_SETTING = createField(DSL.name("user_setting"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.other_flags</code>.
     */
    public final TableField<RidersRecord, String> OTHER_FLAGS = createField(DSL.name("other_flags"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.gender</code>.
     */
    public final TableField<RidersRecord, String> GENDER = createField(DSL.name("gender"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.dob</code>.
     */
    public final TableField<RidersRecord, Long> DOB = createField(DSL.name("dob"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.is_profile_completed</code>.
     */
    public final TableField<RidersRecord, Byte> IS_PROFILE_COMPLETED = createField(DSL.name("is_profile_completed"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.early_arrival_count</code>.
     */
    public final TableField<RidersRecord, UInteger> EARLY_ARRIVAL_COUNT = createField(DSL.name("early_arrival_count"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.riders.state</code>.
     */
    public final TableField<RidersRecord, String> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("'ACTIVE'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.riders</code> table reference
     */
    public Riders() {
        this(DSL.name("riders"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.riders</code> table reference
     */
    public Riders(String alias) {
        this(DSL.name(alias), RIDERS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.riders</code> table reference
     */
    public Riders(Name alias) {
        this(alias, RIDERS);
    }

    private Riders(Name alias, Table<RidersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Riders(Name alias, Table<RidersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Riders(Table<O> child, ForeignKey<O, RidersRecord> key) {
        super(child, key, RIDERS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<RidersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RIDERS;
    }

    @Override
    public UniqueKey<RidersRecord> getPrimaryKey() {
        return Keys.KEY_RIDERS_PRIMARY;
    }

    @Override
    public List<UniqueKey<RidersRecord>> getKeys() {
        return Arrays.<UniqueKey<RidersRecord>>asList(Keys.KEY_RIDERS_PRIMARY);
    }

    @Override
    public Riders as(String alias) {
        return new Riders(DSL.name(alias), this);
    }

    @Override
    public Riders as(Name alias) {
        return new Riders(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Riders rename(String name) {
        return new Riders(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Riders rename(Name name) {
        return new Riders(name, null);
    }
}
