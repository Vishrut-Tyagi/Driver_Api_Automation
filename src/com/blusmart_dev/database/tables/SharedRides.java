/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.SharedRidesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SharedRides extends TableImpl<SharedRidesRecord> {

    private static final long serialVersionUID = 1785529398;

    /**
     * The reference instance of <code>blusmartDevDb.shared_rides</code>
     */
    public static final SharedRides SHARED_RIDES = new SharedRides();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SharedRidesRecord> getRecordType() {
        return SharedRidesRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.shared_rides.id</code>.
     */
    public final TableField<SharedRidesRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.rider_id</code>.
     */
    public final TableField<SharedRidesRecord, UInteger> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.ride_request_id</code>.
     */
    public final TableField<SharedRidesRecord, UInteger> RIDE_REQUEST_ID = createField(DSL.name("ride_request_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.token</code>.
     */
    public final TableField<SharedRidesRecord, String> TOKEN = createField(DSL.name("token"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.phone</code>.
     */
    public final TableField<SharedRidesRecord, String> PHONE = createField(DSL.name("phone"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.estimated_start_timestamp</code>.
     */
    public final TableField<SharedRidesRecord, Long> ESTIMATED_START_TIMESTAMP = createField(DSL.name("estimated_start_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.is_active</code>.
     */
    public final TableField<SharedRidesRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.created_timestamp</code>.
     */
    public final TableField<SharedRidesRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.last_updated_timestamp</code>.
     */
    public final TableField<SharedRidesRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.created_by</code>.
     */
    public final TableField<SharedRidesRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.last_updated_by</code>.
     */
    public final TableField<SharedRidesRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.token_expiration_timestamp</code>.
     */
    public final TableField<SharedRidesRecord, Long> TOKEN_EXPIRATION_TIMESTAMP = createField(DSL.name("token_expiration_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.shared_rides.url_token</code>.
     */
    public final TableField<SharedRidesRecord, String> URL_TOKEN = createField(DSL.name("url_token"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.shared_rides</code> table reference
     */
    public SharedRides() {
        this(DSL.name("shared_rides"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.shared_rides</code> table reference
     */
    public SharedRides(String alias) {
        this(DSL.name(alias), SHARED_RIDES);
    }

    /**
     * Create an aliased <code>blusmartDevDb.shared_rides</code> table reference
     */
    public SharedRides(Name alias) {
        this(alias, SHARED_RIDES);
    }

    private SharedRides(Name alias, Table<SharedRidesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SharedRides(Name alias, Table<SharedRidesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SharedRides(Table<O> child, ForeignKey<O, SharedRidesRecord> key) {
        super(child, key, SHARED_RIDES);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<SharedRidesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHARED_RIDES;
    }

    @Override
    public UniqueKey<SharedRidesRecord> getPrimaryKey() {
        return Keys.KEY_SHARED_RIDES_PRIMARY;
    }

    @Override
    public List<UniqueKey<SharedRidesRecord>> getKeys() {
        return Arrays.<UniqueKey<SharedRidesRecord>>asList(Keys.KEY_SHARED_RIDES_PRIMARY);
    }

    @Override
    public SharedRides as(String alias) {
        return new SharedRides(DSL.name(alias), this);
    }

    @Override
    public SharedRides as(Name alias) {
        return new SharedRides(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SharedRides rename(String name) {
        return new SharedRides(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SharedRides rename(Name name) {
        return new SharedRides(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, UInteger, UInteger, String, String, Long, Byte, Long, Long, UInteger, UInteger, Long, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
