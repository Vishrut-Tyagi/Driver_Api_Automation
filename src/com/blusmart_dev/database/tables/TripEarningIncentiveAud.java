/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.TripEarningIncentiveAudRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This table is used to track the trip incentive audit of drivers based on 
 * combine slots
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TripEarningIncentiveAud extends TableImpl<TripEarningIncentiveAudRecord> {

    private static final long serialVersionUID = -1216652341;

    /**
     * The reference instance of <code>blusmartDevDb.trip_earning_incentive_aud</code>
     */
    public static final TripEarningIncentiveAud TRIP_EARNING_INCENTIVE_AUD = new TripEarningIncentiveAud();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TripEarningIncentiveAudRecord> getRecordType() {
        return TripEarningIncentiveAudRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.aud_id</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Integer> AUD_ID = createField(DSL.name("aud_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.id</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.driver_id</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Integer> DRIVER_ID = createField(DSL.name("driver_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.start_date_timestamp</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Long> START_DATE_TIMESTAMP = createField(DSL.name("start_date_timestamp"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.end_date_timestamp</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Long> END_DATE_TIMESTAMP = createField(DSL.name("end_date_timestamp"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.trip_earning</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, BigDecimal> TRIP_EARNING = createField(DSL.name("trip_earning"), org.jooq.impl.SQLDataType.DECIMAL(16, 8).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.trip_incentive</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, BigDecimal> TRIP_INCENTIVE = createField(DSL.name("trip_incentive"), org.jooq.impl.SQLDataType.DECIMAL(16, 8).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.created_at</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.last_updated_at</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.is_active</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.created_by</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Integer> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.last_updated_by</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, Integer> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.trip_earning_incentive_aud.operation</code>.
     */
    public final TableField<TripEarningIncentiveAudRecord, String> OPERATION = createField(DSL.name("operation"), org.jooq.impl.SQLDataType.VARCHAR(25).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.trip_earning_incentive_aud</code> table reference
     */
    public TripEarningIncentiveAud() {
        this(DSL.name("trip_earning_incentive_aud"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.trip_earning_incentive_aud</code> table reference
     */
    public TripEarningIncentiveAud(String alias) {
        this(DSL.name(alias), TRIP_EARNING_INCENTIVE_AUD);
    }

    /**
     * Create an aliased <code>blusmartDevDb.trip_earning_incentive_aud</code> table reference
     */
    public TripEarningIncentiveAud(Name alias) {
        this(alias, TRIP_EARNING_INCENTIVE_AUD);
    }

    private TripEarningIncentiveAud(Name alias, Table<TripEarningIncentiveAudRecord> aliased) {
        this(alias, aliased, null);
    }

    private TripEarningIncentiveAud(Name alias, Table<TripEarningIncentiveAudRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("This table is used to track the trip incentive audit of drivers based on combine slots"), TableOptions.table());
    }

    public <O extends Record> TripEarningIncentiveAud(Table<O> child, ForeignKey<O, TripEarningIncentiveAudRecord> key) {
        super(child, key, TRIP_EARNING_INCENTIVE_AUD);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<TripEarningIncentiveAudRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRIP_EARNING_INCENTIVE_AUD;
    }

    @Override
    public UniqueKey<TripEarningIncentiveAudRecord> getPrimaryKey() {
        return Keys.KEY_TRIP_EARNING_INCENTIVE_AUD_PRIMARY;
    }

    @Override
    public List<UniqueKey<TripEarningIncentiveAudRecord>> getKeys() {
        return Arrays.<UniqueKey<TripEarningIncentiveAudRecord>>asList(Keys.KEY_TRIP_EARNING_INCENTIVE_AUD_PRIMARY);
    }

    @Override
    public TripEarningIncentiveAud as(String alias) {
        return new TripEarningIncentiveAud(DSL.name(alias), this);
    }

    @Override
    public TripEarningIncentiveAud as(Name alias) {
        return new TripEarningIncentiveAud(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TripEarningIncentiveAud rename(String name) {
        return new TripEarningIncentiveAud(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TripEarningIncentiveAud rename(Name name) {
        return new TripEarningIncentiveAud(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, Integer, Long, Long, BigDecimal, BigDecimal, Long, Long, Byte, Integer, Integer, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
