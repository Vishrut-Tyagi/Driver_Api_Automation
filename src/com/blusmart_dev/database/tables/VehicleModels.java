/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.VehicleModelsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleModels extends TableImpl<VehicleModelsRecord> {

    private static final long serialVersionUID = -1705748489;

    /**
     * The reference instance of <code>blusmartDevDb.vehicle_models</code>
     */
    public static final VehicleModels VEHICLE_MODELS = new VehicleModels();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehicleModelsRecord> getRecordType() {
        return VehicleModelsRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.vehicle_models.id</code>.
     */
    public final TableField<VehicleModelsRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_models.model_name</code>.
     */
    public final TableField<VehicleModelsRecord, String> MODEL_NAME = createField(DSL.name("model_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_models.manufacture_Id</code>.
     */
    public final TableField<VehicleModelsRecord, Integer> MANUFACTURE_ID = createField(DSL.name("manufacture_Id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_models.is_active</code>.
     */
    public final TableField<VehicleModelsRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_models.created_by</code>.
     */
    public final TableField<VehicleModelsRecord, Integer> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_models.last_updated_by</code>.
     */
    public final TableField<VehicleModelsRecord, Integer> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_models.created_at</code>.
     */
    public final TableField<VehicleModelsRecord, Long> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_models.last_updated_at</code>.
     */
    public final TableField<VehicleModelsRecord, Long> LAST_UPDATED_AT = createField(DSL.name("last_updated_at"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>blusmartDevDb.vehicle_models</code> table reference
     */
    public VehicleModels() {
        this(DSL.name("vehicle_models"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.vehicle_models</code> table reference
     */
    public VehicleModels(String alias) {
        this(DSL.name(alias), VEHICLE_MODELS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.vehicle_models</code> table reference
     */
    public VehicleModels(Name alias) {
        this(alias, VEHICLE_MODELS);
    }

    private VehicleModels(Name alias, Table<VehicleModelsRecord> aliased) {
        this(alias, aliased, null);
    }

    private VehicleModels(Name alias, Table<VehicleModelsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VehicleModels(Table<O> child, ForeignKey<O, VehicleModelsRecord> key) {
        super(child, key, VEHICLE_MODELS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<VehicleModelsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_VEHICLE_MODELS;
    }

    @Override
    public UniqueKey<VehicleModelsRecord> getPrimaryKey() {
        return Keys.KEY_VEHICLE_MODELS_PRIMARY;
    }

    @Override
    public List<UniqueKey<VehicleModelsRecord>> getKeys() {
        return Arrays.<UniqueKey<VehicleModelsRecord>>asList(Keys.KEY_VEHICLE_MODELS_PRIMARY);
    }

    @Override
    public VehicleModels as(String alias) {
        return new VehicleModels(DSL.name(alias), this);
    }

    @Override
    public VehicleModels as(Name alias) {
        return new VehicleModels(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleModels rename(String name) {
        return new VehicleModels(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleModels rename(Name name) {
        return new VehicleModels(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<UInteger, String, Integer, Byte, Integer, Integer, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
