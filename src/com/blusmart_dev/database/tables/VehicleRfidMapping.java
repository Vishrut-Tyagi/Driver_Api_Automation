/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.VehicleRfidMappingRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleRfidMapping extends TableImpl<VehicleRfidMappingRecord> {

    private static final long serialVersionUID = 1221845404;

    /**
     * The reference instance of <code>blusmartDevDb.vehicle_rfid_mapping</code>
     */
    public static final VehicleRfidMapping VEHICLE_RFID_MAPPING = new VehicleRfidMapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehicleRfidMappingRecord> getRecordType() {
        return VehicleRfidMappingRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.id</code>.
     */
    public final TableField<VehicleRfidMappingRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.vehicle_number</code>.
     */
    public final TableField<VehicleRfidMappingRecord, String> VEHICLE_NUMBER = createField(DSL.name("vehicle_number"), org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.hub</code>.
     */
    public final TableField<VehicleRfidMappingRecord, String> HUB = createField(DSL.name("hub"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.status</code>.
     */
    public final TableField<VehicleRfidMappingRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(2000).defaultValue(org.jooq.impl.DSL.inline("'1'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.is_active</code>.
     */
    public final TableField<VehicleRfidMappingRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.created_timestamp</code>.
     */
    public final TableField<VehicleRfidMappingRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.last_updated_timestamp</code>.
     */
    public final TableField<VehicleRfidMappingRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.created_by</code>.
     */
    public final TableField<VehicleRfidMappingRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicle_rfid_mapping.last_updated_by</code>.
     */
    public final TableField<VehicleRfidMappingRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>blusmartDevDb.vehicle_rfid_mapping</code> table reference
     */
    public VehicleRfidMapping() {
        this(DSL.name("vehicle_rfid_mapping"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.vehicle_rfid_mapping</code> table reference
     */
    public VehicleRfidMapping(String alias) {
        this(DSL.name(alias), VEHICLE_RFID_MAPPING);
    }

    /**
     * Create an aliased <code>blusmartDevDb.vehicle_rfid_mapping</code> table reference
     */
    public VehicleRfidMapping(Name alias) {
        this(alias, VEHICLE_RFID_MAPPING);
    }

    private VehicleRfidMapping(Name alias, Table<VehicleRfidMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private VehicleRfidMapping(Name alias, Table<VehicleRfidMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VehicleRfidMapping(Table<O> child, ForeignKey<O, VehicleRfidMappingRecord> key) {
        super(child, key, VEHICLE_RFID_MAPPING);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<VehicleRfidMappingRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_VEHICLE_RFID_MAPPING;
    }

    @Override
    public UniqueKey<VehicleRfidMappingRecord> getPrimaryKey() {
        return Keys.KEY_VEHICLE_RFID_MAPPING_PRIMARY;
    }

    @Override
    public List<UniqueKey<VehicleRfidMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<VehicleRfidMappingRecord>>asList(Keys.KEY_VEHICLE_RFID_MAPPING_PRIMARY);
    }

    @Override
    public VehicleRfidMapping as(String alias) {
        return new VehicleRfidMapping(DSL.name(alias), this);
    }

    @Override
    public VehicleRfidMapping as(Name alias) {
        return new VehicleRfidMapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleRfidMapping rename(String name) {
        return new VehicleRfidMapping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleRfidMapping rename(Name name) {
        return new VehicleRfidMapping(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<UInteger, String, String, String, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
