/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.VehiclesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vehicles extends TableImpl<VehiclesRecord> {

    private static final long serialVersionUID = -1393598437;

    /**
     * The reference instance of <code>blusmartDevDb.vehicles</code>
     */
    public static final Vehicles VEHICLES = new Vehicles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehiclesRecord> getRecordType() {
        return VehiclesRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.vehicles.vehicle_number</code>.
     */
    public final TableField<VehiclesRecord, String> VEHICLE_NUMBER = createField(DSL.name("vehicle_number"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.is_active</code>.
     */
    public final TableField<VehiclesRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.model_name</code>.
     */
    public final TableField<VehiclesRecord, String> MODEL_NAME = createField(DSL.name("model_name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.display_name</code>.
     */
    public final TableField<VehiclesRecord, String> DISPLAY_NAME = createField(DSL.name("display_name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.hub_name</code>.
     */
    public final TableField<VehiclesRecord, String> HUB_NAME = createField(DSL.name("hub_name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.capacity</code>.
     */
    public final TableField<VehiclesRecord, String> CAPACITY = createField(DSL.name("capacity"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.created_timestamp</code>.
     */
    public final TableField<VehiclesRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.last_updated_timestamp</code>.
     */
    public final TableField<VehiclesRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.created_by</code>.
     */
    public final TableField<VehiclesRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.last_updated_by</code>.
     */
    public final TableField<VehiclesRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.km_range</code>.
     */
    public final TableField<VehiclesRecord, UInteger> KM_RANGE = createField(DSL.name("km_range"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.vehicles.vehicle_name</code>.
     */
    public final TableField<VehiclesRecord, String> VEHICLE_NAME = createField(DSL.name("vehicle_name"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>blusmartDevDb.vehicles</code> table reference
     */
    public Vehicles() {
        this(DSL.name("vehicles"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.vehicles</code> table reference
     */
    public Vehicles(String alias) {
        this(DSL.name(alias), VEHICLES);
    }

    /**
     * Create an aliased <code>blusmartDevDb.vehicles</code> table reference
     */
    public Vehicles(Name alias) {
        this(alias, VEHICLES);
    }

    private Vehicles(Name alias, Table<VehiclesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vehicles(Name alias, Table<VehiclesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Vehicles(Table<O> child, ForeignKey<O, VehiclesRecord> key) {
        super(child, key, VEHICLES);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public UniqueKey<VehiclesRecord> getPrimaryKey() {
        return Keys.KEY_VEHICLES_PRIMARY;
    }

    @Override
    public List<UniqueKey<VehiclesRecord>> getKeys() {
        return Arrays.<UniqueKey<VehiclesRecord>>asList(Keys.KEY_VEHICLES_PRIMARY);
    }

    @Override
    public Vehicles as(String alias) {
        return new Vehicles(DSL.name(alias), this);
    }

    @Override
    public Vehicles as(Name alias) {
        return new Vehicles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vehicles rename(String name) {
        return new Vehicles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Vehicles rename(Name name) {
        return new Vehicles(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, Byte, String, String, String, String, Long, Long, UInteger, UInteger, UInteger, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
