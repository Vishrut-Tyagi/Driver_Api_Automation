/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.VerificationTokensRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VerificationTokens extends TableImpl<VerificationTokensRecord> {

    private static final long serialVersionUID = 1778042047;

    /**
     * The reference instance of <code>blusmartDevDb.verification_tokens</code>
     */
    public static final VerificationTokens VERIFICATION_TOKENS = new VerificationTokens();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VerificationTokensRecord> getRecordType() {
        return VerificationTokensRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.verification_tokens.id</code>.
     */
    public final TableField<VerificationTokensRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.ride_request_id</code>.
     */
    public final TableField<VerificationTokensRecord, UInteger> RIDE_REQUEST_ID = createField(DSL.name("ride_request_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.ride_id</code>.
     */
    public final TableField<VerificationTokensRecord, UInteger> RIDE_ID = createField(DSL.name("ride_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.pin</code>.
     */
    public final TableField<VerificationTokensRecord, String> PIN = createField(DSL.name("pin"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.expiry_timestamp</code>.
     */
    public final TableField<VerificationTokensRecord, Long> EXPIRY_TIMESTAMP = createField(DSL.name("expiry_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.is_active</code>.
     */
    public final TableField<VerificationTokensRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.created_timestamp</code>.
     */
    public final TableField<VerificationTokensRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.last_updated_timestamp</code>.
     */
    public final TableField<VerificationTokensRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.created_by</code>.
     */
    public final TableField<VerificationTokensRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.last_updated_by</code>.
     */
    public final TableField<VerificationTokensRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.pin_type</code>.
     */
    public final TableField<VerificationTokensRecord, String> PIN_TYPE = createField(DSL.name("pin_type"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>blusmartDevDb.verification_tokens.rider_id</code>.
     */
    public final TableField<VerificationTokensRecord, Integer> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>blusmartDevDb.verification_tokens</code> table reference
     */
    public VerificationTokens() {
        this(DSL.name("verification_tokens"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.verification_tokens</code> table reference
     */
    public VerificationTokens(String alias) {
        this(DSL.name(alias), VERIFICATION_TOKENS);
    }

    /**
     * Create an aliased <code>blusmartDevDb.verification_tokens</code> table reference
     */
    public VerificationTokens(Name alias) {
        this(alias, VERIFICATION_TOKENS);
    }

    private VerificationTokens(Name alias, Table<VerificationTokensRecord> aliased) {
        this(alias, aliased, null);
    }

    private VerificationTokens(Name alias, Table<VerificationTokensRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VerificationTokens(Table<O> child, ForeignKey<O, VerificationTokensRecord> key) {
        super(child, key, VERIFICATION_TOKENS);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<VerificationTokensRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_VERIFICATION_TOKENS;
    }

    @Override
    public UniqueKey<VerificationTokensRecord> getPrimaryKey() {
        return Keys.KEY_VERIFICATION_TOKENS_PRIMARY;
    }

    @Override
    public List<UniqueKey<VerificationTokensRecord>> getKeys() {
        return Arrays.<UniqueKey<VerificationTokensRecord>>asList(Keys.KEY_VERIFICATION_TOKENS_PRIMARY);
    }

    @Override
    public VerificationTokens as(String alias) {
        return new VerificationTokens(DSL.name(alias), this);
    }

    @Override
    public VerificationTokens as(Name alias) {
        return new VerificationTokens(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VerificationTokens rename(String name) {
        return new VerificationTokens(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VerificationTokens rename(Name name) {
        return new VerificationTokens(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<UInteger, UInteger, UInteger, String, Long, Byte, Long, Long, UInteger, UInteger, String, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
