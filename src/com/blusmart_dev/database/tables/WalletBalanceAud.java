/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables;


import com.blusmart_dev.database.Blusmartdevdb;
import com.blusmart_dev.database.Keys;
import com.blusmart_dev.database.tables.records.WalletBalanceAudRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WalletBalanceAud extends TableImpl<WalletBalanceAudRecord> {

    private static final long serialVersionUID = -1880134691;

    /**
     * The reference instance of <code>blusmartDevDb.wallet_balance_aud</code>
     */
    public static final WalletBalanceAud WALLET_BALANCE_AUD = new WalletBalanceAud();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WalletBalanceAudRecord> getRecordType() {
        return WalletBalanceAudRecord.class;
    }

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.aud_id</code>.
     */
    public final TableField<WalletBalanceAudRecord, UInteger> AUD_ID = createField(DSL.name("aud_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.id</code>.
     */
    public final TableField<WalletBalanceAudRecord, UInteger> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.rider_id</code>.
     */
    public final TableField<WalletBalanceAudRecord, UInteger> RIDER_ID = createField(DSL.name("rider_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.current_balance</code>.
     */
    public final TableField<WalletBalanceAudRecord, BigDecimal> CURRENT_BALANCE = createField(DSL.name("current_balance"), org.jooq.impl.SQLDataType.DECIMAL(11, 2).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.is_active</code>.
     */
    public final TableField<WalletBalanceAudRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.created_timestamp</code>.
     */
    public final TableField<WalletBalanceAudRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.last_updated_timestamp</code>.
     */
    public final TableField<WalletBalanceAudRecord, Long> LAST_UPDATED_TIMESTAMP = createField(DSL.name("last_updated_timestamp"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.created_by</code>.
     */
    public final TableField<WalletBalanceAudRecord, UInteger> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.last_updated_by</code>.
     */
    public final TableField<WalletBalanceAudRecord, UInteger> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.promotional_credits_balance</code>.
     */
    public final TableField<WalletBalanceAudRecord, BigDecimal> PROMOTIONAL_CREDITS_BALANCE = createField(DSL.name("promotional_credits_balance"), org.jooq.impl.SQLDataType.DECIMAL(11, 2).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>blusmartDevDb.wallet_balance_aud.promotional_credits_used</code>.
     */
    public final TableField<WalletBalanceAudRecord, BigDecimal> PROMOTIONAL_CREDITS_USED = createField(DSL.name("promotional_credits_used"), org.jooq.impl.SQLDataType.DECIMAL(11, 2).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * Create a <code>blusmartDevDb.wallet_balance_aud</code> table reference
     */
    public WalletBalanceAud() {
        this(DSL.name("wallet_balance_aud"), null);
    }

    /**
     * Create an aliased <code>blusmartDevDb.wallet_balance_aud</code> table reference
     */
    public WalletBalanceAud(String alias) {
        this(DSL.name(alias), WALLET_BALANCE_AUD);
    }

    /**
     * Create an aliased <code>blusmartDevDb.wallet_balance_aud</code> table reference
     */
    public WalletBalanceAud(Name alias) {
        this(alias, WALLET_BALANCE_AUD);
    }

    private WalletBalanceAud(Name alias, Table<WalletBalanceAudRecord> aliased) {
        this(alias, aliased, null);
    }

    private WalletBalanceAud(Name alias, Table<WalletBalanceAudRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> WalletBalanceAud(Table<O> child, ForeignKey<O, WalletBalanceAudRecord> key) {
        super(child, key, WALLET_BALANCE_AUD);
    }

    @Override
    public Schema getSchema() {
        return Blusmartdevdb.BLUSMARTDEVDB;
    }

    @Override
    public Identity<WalletBalanceAudRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_WALLET_BALANCE_AUD;
    }

    @Override
    public UniqueKey<WalletBalanceAudRecord> getPrimaryKey() {
        return Keys.KEY_WALLET_BALANCE_AUD_PRIMARY;
    }

    @Override
    public List<UniqueKey<WalletBalanceAudRecord>> getKeys() {
        return Arrays.<UniqueKey<WalletBalanceAudRecord>>asList(Keys.KEY_WALLET_BALANCE_AUD_PRIMARY);
    }

    @Override
    public WalletBalanceAud as(String alias) {
        return new WalletBalanceAud(DSL.name(alias), this);
    }

    @Override
    public WalletBalanceAud as(Name alias) {
        return new WalletBalanceAud(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WalletBalanceAud rename(String name) {
        return new WalletBalanceAud(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WalletBalanceAud rename(Name name) {
        return new WalletBalanceAud(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, UInteger, UInteger, BigDecimal, Byte, Long, Long, UInteger, UInteger, BigDecimal, BigDecimal> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
