/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdditionalRideServices implements Serializable {

    private static final long serialVersionUID = 111183564;

    private UInteger   id;
    private UInteger   rideRequestId;
    private String     serviceType;
    private BigDecimal totalAmount;
    private UInteger   quantity;
    private Long       expiryTimestamp;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;

    public AdditionalRideServices() {}

    public AdditionalRideServices(AdditionalRideServices value) {
        this.id = value.id;
        this.rideRequestId = value.rideRequestId;
        this.serviceType = value.serviceType;
        this.totalAmount = value.totalAmount;
        this.quantity = value.quantity;
        this.expiryTimestamp = value.expiryTimestamp;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
    }

    public AdditionalRideServices(
        UInteger   id,
        UInteger   rideRequestId,
        String     serviceType,
        BigDecimal totalAmount,
        UInteger   quantity,
        Long       expiryTimestamp,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy
    ) {
        this.id = id;
        this.rideRequestId = rideRequestId;
        this.serviceType = serviceType;
        this.totalAmount = totalAmount;
        this.quantity = quantity;
        this.expiryTimestamp = expiryTimestamp;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
    }

    public UInteger getId() {
        return this.id;
    }

    public AdditionalRideServices setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRideRequestId() {
        return this.rideRequestId;
    }

    public AdditionalRideServices setRideRequestId(UInteger rideRequestId) {
        this.rideRequestId = rideRequestId;
        return this;
    }

    public String getServiceType() {
        return this.serviceType;
    }

    public AdditionalRideServices setServiceType(String serviceType) {
        this.serviceType = serviceType;
        return this;
    }

    public BigDecimal getTotalAmount() {
        return this.totalAmount;
    }

    public AdditionalRideServices setTotalAmount(BigDecimal totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }

    public UInteger getQuantity() {
        return this.quantity;
    }

    public AdditionalRideServices setQuantity(UInteger quantity) {
        this.quantity = quantity;
        return this;
    }

    public Long getExpiryTimestamp() {
        return this.expiryTimestamp;
    }

    public AdditionalRideServices setExpiryTimestamp(Long expiryTimestamp) {
        this.expiryTimestamp = expiryTimestamp;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public AdditionalRideServices setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public AdditionalRideServices setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public AdditionalRideServices setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public AdditionalRideServices setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public AdditionalRideServices setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AdditionalRideServices other = (AdditionalRideServices) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (rideRequestId == null) {
            if (other.rideRequestId != null)
                return false;
        }
        else if (!rideRequestId.equals(other.rideRequestId))
            return false;
        if (serviceType == null) {
            if (other.serviceType != null)
                return false;
        }
        else if (!serviceType.equals(other.serviceType))
            return false;
        if (totalAmount == null) {
            if (other.totalAmount != null)
                return false;
        }
        else if (!totalAmount.equals(other.totalAmount))
            return false;
        if (quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!quantity.equals(other.quantity))
            return false;
        if (expiryTimestamp == null) {
            if (other.expiryTimestamp != null)
                return false;
        }
        else if (!expiryTimestamp.equals(other.expiryTimestamp))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.rideRequestId == null) ? 0 : this.rideRequestId.hashCode());
        result = prime * result + ((this.serviceType == null) ? 0 : this.serviceType.hashCode());
        result = prime * result + ((this.totalAmount == null) ? 0 : this.totalAmount.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        result = prime * result + ((this.expiryTimestamp == null) ? 0 : this.expiryTimestamp.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AdditionalRideServices (");

        sb.append(id);
        sb.append(", ").append(rideRequestId);
        sb.append(", ").append(serviceType);
        sb.append(", ").append(totalAmount);
        sb.append(", ").append(quantity);
        sb.append(", ").append(expiryTimestamp);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);

        sb.append(")");
        return sb.toString();
    }
}
