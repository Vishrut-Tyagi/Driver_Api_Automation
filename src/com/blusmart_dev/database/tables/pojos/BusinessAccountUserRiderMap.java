/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessAccountUserRiderMap implements Serializable {

    private static final long serialVersionUID = -211966286;

    private UInteger   id;
    private String     businessAccountId;
    private UInteger   userId;
    private UInteger   riderId;
    private Long       expirationTimestamp;
    private String     note;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private BigDecimal monthlySpendingLimit;
    private BigDecimal availableSpendingLimit;

    public BusinessAccountUserRiderMap() {}

    public BusinessAccountUserRiderMap(BusinessAccountUserRiderMap value) {
        this.id = value.id;
        this.businessAccountId = value.businessAccountId;
        this.userId = value.userId;
        this.riderId = value.riderId;
        this.expirationTimestamp = value.expirationTimestamp;
        this.note = value.note;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.monthlySpendingLimit = value.monthlySpendingLimit;
        this.availableSpendingLimit = value.availableSpendingLimit;
    }

    public BusinessAccountUserRiderMap(
        UInteger   id,
        String     businessAccountId,
        UInteger   userId,
        UInteger   riderId,
        Long       expirationTimestamp,
        String     note,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        BigDecimal monthlySpendingLimit,
        BigDecimal availableSpendingLimit
    ) {
        this.id = id;
        this.businessAccountId = businessAccountId;
        this.userId = userId;
        this.riderId = riderId;
        this.expirationTimestamp = expirationTimestamp;
        this.note = note;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.monthlySpendingLimit = monthlySpendingLimit;
        this.availableSpendingLimit = availableSpendingLimit;
    }

    public UInteger getId() {
        return this.id;
    }

    public BusinessAccountUserRiderMap setId(UInteger id) {
        this.id = id;
        return this;
    }

    public String getBusinessAccountId() {
        return this.businessAccountId;
    }

    public BusinessAccountUserRiderMap setBusinessAccountId(String businessAccountId) {
        this.businessAccountId = businessAccountId;
        return this;
    }

    public UInteger getUserId() {
        return this.userId;
    }

    public BusinessAccountUserRiderMap setUserId(UInteger userId) {
        this.userId = userId;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public BusinessAccountUserRiderMap setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public Long getExpirationTimestamp() {
        return this.expirationTimestamp;
    }

    public BusinessAccountUserRiderMap setExpirationTimestamp(Long expirationTimestamp) {
        this.expirationTimestamp = expirationTimestamp;
        return this;
    }

    public String getNote() {
        return this.note;
    }

    public BusinessAccountUserRiderMap setNote(String note) {
        this.note = note;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public BusinessAccountUserRiderMap setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public BusinessAccountUserRiderMap setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public BusinessAccountUserRiderMap setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public BusinessAccountUserRiderMap setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public BusinessAccountUserRiderMap setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public BigDecimal getMonthlySpendingLimit() {
        return this.monthlySpendingLimit;
    }

    public BusinessAccountUserRiderMap setMonthlySpendingLimit(BigDecimal monthlySpendingLimit) {
        this.monthlySpendingLimit = monthlySpendingLimit;
        return this;
    }

    public BigDecimal getAvailableSpendingLimit() {
        return this.availableSpendingLimit;
    }

    public BusinessAccountUserRiderMap setAvailableSpendingLimit(BigDecimal availableSpendingLimit) {
        this.availableSpendingLimit = availableSpendingLimit;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BusinessAccountUserRiderMap other = (BusinessAccountUserRiderMap) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (businessAccountId == null) {
            if (other.businessAccountId != null)
                return false;
        }
        else if (!businessAccountId.equals(other.businessAccountId))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (expirationTimestamp == null) {
            if (other.expirationTimestamp != null)
                return false;
        }
        else if (!expirationTimestamp.equals(other.expirationTimestamp))
            return false;
        if (note == null) {
            if (other.note != null)
                return false;
        }
        else if (!note.equals(other.note))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (monthlySpendingLimit == null) {
            if (other.monthlySpendingLimit != null)
                return false;
        }
        else if (!monthlySpendingLimit.equals(other.monthlySpendingLimit))
            return false;
        if (availableSpendingLimit == null) {
            if (other.availableSpendingLimit != null)
                return false;
        }
        else if (!availableSpendingLimit.equals(other.availableSpendingLimit))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.businessAccountId == null) ? 0 : this.businessAccountId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.expirationTimestamp == null) ? 0 : this.expirationTimestamp.hashCode());
        result = prime * result + ((this.note == null) ? 0 : this.note.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.monthlySpendingLimit == null) ? 0 : this.monthlySpendingLimit.hashCode());
        result = prime * result + ((this.availableSpendingLimit == null) ? 0 : this.availableSpendingLimit.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BusinessAccountUserRiderMap (");

        sb.append(id);
        sb.append(", ").append(businessAccountId);
        sb.append(", ").append(userId);
        sb.append(", ").append(riderId);
        sb.append(", ").append(expirationTimestamp);
        sb.append(", ").append(note);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(monthlySpendingLimit);
        sb.append(", ").append(availableSpendingLimit);

        sb.append(")");
        return sb.toString();
    }
}
