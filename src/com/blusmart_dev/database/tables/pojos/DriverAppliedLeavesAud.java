/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverAppliedLeavesAud implements Serializable {

    private static final long serialVersionUID = 854490307;

    private UInteger   audId;
    private UInteger   id;
    private UInteger   leavesRecordId;
    private UInteger   driverId;
    private Long       fromTimestamp;
    private Long       toTimestamp;
    private BigDecimal totalHours;
    private String     state;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private String     rejectionReason;

    public DriverAppliedLeavesAud() {}

    public DriverAppliedLeavesAud(DriverAppliedLeavesAud value) {
        this.audId = value.audId;
        this.id = value.id;
        this.leavesRecordId = value.leavesRecordId;
        this.driverId = value.driverId;
        this.fromTimestamp = value.fromTimestamp;
        this.toTimestamp = value.toTimestamp;
        this.totalHours = value.totalHours;
        this.state = value.state;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.rejectionReason = value.rejectionReason;
    }

    public DriverAppliedLeavesAud(
        UInteger   audId,
        UInteger   id,
        UInteger   leavesRecordId,
        UInteger   driverId,
        Long       fromTimestamp,
        Long       toTimestamp,
        BigDecimal totalHours,
        String     state,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        String     rejectionReason
    ) {
        this.audId = audId;
        this.id = id;
        this.leavesRecordId = leavesRecordId;
        this.driverId = driverId;
        this.fromTimestamp = fromTimestamp;
        this.toTimestamp = toTimestamp;
        this.totalHours = totalHours;
        this.state = state;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.rejectionReason = rejectionReason;
    }

    public UInteger getAudId() {
        return this.audId;
    }

    public DriverAppliedLeavesAud setAudId(UInteger audId) {
        this.audId = audId;
        return this;
    }

    public UInteger getId() {
        return this.id;
    }

    public DriverAppliedLeavesAud setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getLeavesRecordId() {
        return this.leavesRecordId;
    }

    public DriverAppliedLeavesAud setLeavesRecordId(UInteger leavesRecordId) {
        this.leavesRecordId = leavesRecordId;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public DriverAppliedLeavesAud setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public Long getFromTimestamp() {
        return this.fromTimestamp;
    }

    public DriverAppliedLeavesAud setFromTimestamp(Long fromTimestamp) {
        this.fromTimestamp = fromTimestamp;
        return this;
    }

    public Long getToTimestamp() {
        return this.toTimestamp;
    }

    public DriverAppliedLeavesAud setToTimestamp(Long toTimestamp) {
        this.toTimestamp = toTimestamp;
        return this;
    }

    public BigDecimal getTotalHours() {
        return this.totalHours;
    }

    public DriverAppliedLeavesAud setTotalHours(BigDecimal totalHours) {
        this.totalHours = totalHours;
        return this;
    }

    public String getState() {
        return this.state;
    }

    public DriverAppliedLeavesAud setState(String state) {
        this.state = state;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public DriverAppliedLeavesAud setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public DriverAppliedLeavesAud setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public DriverAppliedLeavesAud setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public DriverAppliedLeavesAud setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public DriverAppliedLeavesAud setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public String getRejectionReason() {
        return this.rejectionReason;
    }

    public DriverAppliedLeavesAud setRejectionReason(String rejectionReason) {
        this.rejectionReason = rejectionReason;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DriverAppliedLeavesAud other = (DriverAppliedLeavesAud) obj;
        if (audId == null) {
            if (other.audId != null)
                return false;
        }
        else if (!audId.equals(other.audId))
            return false;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (leavesRecordId == null) {
            if (other.leavesRecordId != null)
                return false;
        }
        else if (!leavesRecordId.equals(other.leavesRecordId))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (fromTimestamp == null) {
            if (other.fromTimestamp != null)
                return false;
        }
        else if (!fromTimestamp.equals(other.fromTimestamp))
            return false;
        if (toTimestamp == null) {
            if (other.toTimestamp != null)
                return false;
        }
        else if (!toTimestamp.equals(other.toTimestamp))
            return false;
        if (totalHours == null) {
            if (other.totalHours != null)
                return false;
        }
        else if (!totalHours.equals(other.totalHours))
            return false;
        if (state == null) {
            if (other.state != null)
                return false;
        }
        else if (!state.equals(other.state))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (rejectionReason == null) {
            if (other.rejectionReason != null)
                return false;
        }
        else if (!rejectionReason.equals(other.rejectionReason))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.audId == null) ? 0 : this.audId.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.leavesRecordId == null) ? 0 : this.leavesRecordId.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.fromTimestamp == null) ? 0 : this.fromTimestamp.hashCode());
        result = prime * result + ((this.toTimestamp == null) ? 0 : this.toTimestamp.hashCode());
        result = prime * result + ((this.totalHours == null) ? 0 : this.totalHours.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.rejectionReason == null) ? 0 : this.rejectionReason.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DriverAppliedLeavesAud (");

        sb.append(audId);
        sb.append(", ").append(id);
        sb.append(", ").append(leavesRecordId);
        sb.append(", ").append(driverId);
        sb.append(", ").append(fromTimestamp);
        sb.append(", ").append(toTimestamp);
        sb.append(", ").append(totalHours);
        sb.append(", ").append(state);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(rejectionReason);

        sb.append(")");
        return sb.toString();
    }
}
