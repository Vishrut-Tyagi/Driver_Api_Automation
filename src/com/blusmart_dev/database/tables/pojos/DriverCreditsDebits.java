/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverCreditsDebits implements Serializable {

    private static final long serialVersionUID = -1100487652;

    private UInteger   id;
    private UInteger   leaseDriverFinalPayoutId;
    private Long       occurrenceTimestamp;
    private UInteger   driverId;
    private String     driverName;
    private BigDecimal amount;
    private String     type;
    private String     vehicleNumber;
    private String     reason;
    private String     otherFlags;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private String     status;
    private Long       disbursalTimestamp;

    public DriverCreditsDebits() {}

    public DriverCreditsDebits(DriverCreditsDebits value) {
        this.id = value.id;
        this.leaseDriverFinalPayoutId = value.leaseDriverFinalPayoutId;
        this.occurrenceTimestamp = value.occurrenceTimestamp;
        this.driverId = value.driverId;
        this.driverName = value.driverName;
        this.amount = value.amount;
        this.type = value.type;
        this.vehicleNumber = value.vehicleNumber;
        this.reason = value.reason;
        this.otherFlags = value.otherFlags;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.status = value.status;
        this.disbursalTimestamp = value.disbursalTimestamp;
    }

    public DriverCreditsDebits(
        UInteger   id,
        UInteger   leaseDriverFinalPayoutId,
        Long       occurrenceTimestamp,
        UInteger   driverId,
        String     driverName,
        BigDecimal amount,
        String     type,
        String     vehicleNumber,
        String     reason,
        String     otherFlags,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        String     status,
        Long       disbursalTimestamp
    ) {
        this.id = id;
        this.leaseDriverFinalPayoutId = leaseDriverFinalPayoutId;
        this.occurrenceTimestamp = occurrenceTimestamp;
        this.driverId = driverId;
        this.driverName = driverName;
        this.amount = amount;
        this.type = type;
        this.vehicleNumber = vehicleNumber;
        this.reason = reason;
        this.otherFlags = otherFlags;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.status = status;
        this.disbursalTimestamp = disbursalTimestamp;
    }

    public UInteger getId() {
        return this.id;
    }

    public DriverCreditsDebits setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getLeaseDriverFinalPayoutId() {
        return this.leaseDriverFinalPayoutId;
    }

    public DriverCreditsDebits setLeaseDriverFinalPayoutId(UInteger leaseDriverFinalPayoutId) {
        this.leaseDriverFinalPayoutId = leaseDriverFinalPayoutId;
        return this;
    }

    public Long getOccurrenceTimestamp() {
        return this.occurrenceTimestamp;
    }

    public DriverCreditsDebits setOccurrenceTimestamp(Long occurrenceTimestamp) {
        this.occurrenceTimestamp = occurrenceTimestamp;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public DriverCreditsDebits setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public String getDriverName() {
        return this.driverName;
    }

    public DriverCreditsDebits setDriverName(String driverName) {
        this.driverName = driverName;
        return this;
    }

    public BigDecimal getAmount() {
        return this.amount;
    }

    public DriverCreditsDebits setAmount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    public String getType() {
        return this.type;
    }

    public DriverCreditsDebits setType(String type) {
        this.type = type;
        return this;
    }

    public String getVehicleNumber() {
        return this.vehicleNumber;
    }

    public DriverCreditsDebits setVehicleNumber(String vehicleNumber) {
        this.vehicleNumber = vehicleNumber;
        return this;
    }

    public String getReason() {
        return this.reason;
    }

    public DriverCreditsDebits setReason(String reason) {
        this.reason = reason;
        return this;
    }

    public String getOtherFlags() {
        return this.otherFlags;
    }

    public DriverCreditsDebits setOtherFlags(String otherFlags) {
        this.otherFlags = otherFlags;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public DriverCreditsDebits setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public DriverCreditsDebits setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public DriverCreditsDebits setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public DriverCreditsDebits setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public DriverCreditsDebits setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public String getStatus() {
        return this.status;
    }

    public DriverCreditsDebits setStatus(String status) {
        this.status = status;
        return this;
    }

    public Long getDisbursalTimestamp() {
        return this.disbursalTimestamp;
    }

    public DriverCreditsDebits setDisbursalTimestamp(Long disbursalTimestamp) {
        this.disbursalTimestamp = disbursalTimestamp;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DriverCreditsDebits other = (DriverCreditsDebits) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (leaseDriverFinalPayoutId == null) {
            if (other.leaseDriverFinalPayoutId != null)
                return false;
        }
        else if (!leaseDriverFinalPayoutId.equals(other.leaseDriverFinalPayoutId))
            return false;
        if (occurrenceTimestamp == null) {
            if (other.occurrenceTimestamp != null)
                return false;
        }
        else if (!occurrenceTimestamp.equals(other.occurrenceTimestamp))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (driverName == null) {
            if (other.driverName != null)
                return false;
        }
        else if (!driverName.equals(other.driverName))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (type == null) {
            if (other.type != null)
                return false;
        }
        else if (!type.equals(other.type))
            return false;
        if (vehicleNumber == null) {
            if (other.vehicleNumber != null)
                return false;
        }
        else if (!vehicleNumber.equals(other.vehicleNumber))
            return false;
        if (reason == null) {
            if (other.reason != null)
                return false;
        }
        else if (!reason.equals(other.reason))
            return false;
        if (otherFlags == null) {
            if (other.otherFlags != null)
                return false;
        }
        else if (!otherFlags.equals(other.otherFlags))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (disbursalTimestamp == null) {
            if (other.disbursalTimestamp != null)
                return false;
        }
        else if (!disbursalTimestamp.equals(other.disbursalTimestamp))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.leaseDriverFinalPayoutId == null) ? 0 : this.leaseDriverFinalPayoutId.hashCode());
        result = prime * result + ((this.occurrenceTimestamp == null) ? 0 : this.occurrenceTimestamp.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.driverName == null) ? 0 : this.driverName.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.vehicleNumber == null) ? 0 : this.vehicleNumber.hashCode());
        result = prime * result + ((this.reason == null) ? 0 : this.reason.hashCode());
        result = prime * result + ((this.otherFlags == null) ? 0 : this.otherFlags.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.disbursalTimestamp == null) ? 0 : this.disbursalTimestamp.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DriverCreditsDebits (");

        sb.append(id);
        sb.append(", ").append(leaseDriverFinalPayoutId);
        sb.append(", ").append(occurrenceTimestamp);
        sb.append(", ").append(driverId);
        sb.append(", ").append(driverName);
        sb.append(", ").append(amount);
        sb.append(", ").append(type);
        sb.append(", ").append(vehicleNumber);
        sb.append(", ").append(reason);
        sb.append(", ").append(otherFlags);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(status);
        sb.append(", ").append(disbursalTimestamp);

        sb.append(")");
        return sb.toString();
    }
}
