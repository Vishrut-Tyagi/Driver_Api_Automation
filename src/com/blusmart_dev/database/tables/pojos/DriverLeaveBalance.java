/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverLeaveBalance implements Serializable {

    private static final long serialVersionUID = 1414357041;

    private UInteger   id;
    private UInteger   driverId;
    private BigDecimal hourCount;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private UInteger   month;
    private UInteger   year;
    private BigDecimal addedHours;

    public DriverLeaveBalance() {}

    public DriverLeaveBalance(DriverLeaveBalance value) {
        this.id = value.id;
        this.driverId = value.driverId;
        this.hourCount = value.hourCount;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.month = value.month;
        this.year = value.year;
        this.addedHours = value.addedHours;
    }

    public DriverLeaveBalance(
        UInteger   id,
        UInteger   driverId,
        BigDecimal hourCount,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        UInteger   month,
        UInteger   year,
        BigDecimal addedHours
    ) {
        this.id = id;
        this.driverId = driverId;
        this.hourCount = hourCount;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.month = month;
        this.year = year;
        this.addedHours = addedHours;
    }

    public UInteger getId() {
        return this.id;
    }

    public DriverLeaveBalance setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public DriverLeaveBalance setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public BigDecimal getHourCount() {
        return this.hourCount;
    }

    public DriverLeaveBalance setHourCount(BigDecimal hourCount) {
        this.hourCount = hourCount;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public DriverLeaveBalance setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public DriverLeaveBalance setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public DriverLeaveBalance setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public DriverLeaveBalance setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public DriverLeaveBalance setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public UInteger getMonth() {
        return this.month;
    }

    public DriverLeaveBalance setMonth(UInteger month) {
        this.month = month;
        return this;
    }

    public UInteger getYear() {
        return this.year;
    }

    public DriverLeaveBalance setYear(UInteger year) {
        this.year = year;
        return this;
    }

    public BigDecimal getAddedHours() {
        return this.addedHours;
    }

    public DriverLeaveBalance setAddedHours(BigDecimal addedHours) {
        this.addedHours = addedHours;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DriverLeaveBalance other = (DriverLeaveBalance) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (hourCount == null) {
            if (other.hourCount != null)
                return false;
        }
        else if (!hourCount.equals(other.hourCount))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (month == null) {
            if (other.month != null)
                return false;
        }
        else if (!month.equals(other.month))
            return false;
        if (year == null) {
            if (other.year != null)
                return false;
        }
        else if (!year.equals(other.year))
            return false;
        if (addedHours == null) {
            if (other.addedHours != null)
                return false;
        }
        else if (!addedHours.equals(other.addedHours))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.hourCount == null) ? 0 : this.hourCount.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.month == null) ? 0 : this.month.hashCode());
        result = prime * result + ((this.year == null) ? 0 : this.year.hashCode());
        result = prime * result + ((this.addedHours == null) ? 0 : this.addedHours.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DriverLeaveBalance (");

        sb.append(id);
        sb.append(", ").append(driverId);
        sb.append(", ").append(hourCount);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(month);
        sb.append(", ").append(year);
        sb.append(", ").append(addedHours);

        sb.append(")");
        return sb.toString();
    }
}
