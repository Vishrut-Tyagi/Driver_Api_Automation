/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HubData implements Serializable {

    private static final long serialVersionUID = 1889234463;

    private UInteger   id;
    private String     hubname;
    private BigDecimal latitude;
    private BigDecimal longitude;
    private Byte       isshiftconfigurationactive;
    private Integer    createdBy;
    private Integer    updatedBy;
    private Long       createdAt;
    private Long       lastUpdatedAt;
    private UInteger   drivercheckinrange;
    private Byte       isActive;
    private UInteger   serviceRegionId;
    private String     otherFlags;
    private Integer    hubIncharge;

    public HubData() {}

    public HubData(HubData value) {
        this.id = value.id;
        this.hubname = value.hubname;
        this.latitude = value.latitude;
        this.longitude = value.longitude;
        this.isshiftconfigurationactive = value.isshiftconfigurationactive;
        this.createdBy = value.createdBy;
        this.updatedBy = value.updatedBy;
        this.createdAt = value.createdAt;
        this.lastUpdatedAt = value.lastUpdatedAt;
        this.drivercheckinrange = value.drivercheckinrange;
        this.isActive = value.isActive;
        this.serviceRegionId = value.serviceRegionId;
        this.otherFlags = value.otherFlags;
        this.hubIncharge = value.hubIncharge;
    }

    public HubData(
        UInteger   id,
        String     hubname,
        BigDecimal latitude,
        BigDecimal longitude,
        Byte       isshiftconfigurationactive,
        Integer    createdBy,
        Integer    updatedBy,
        Long       createdAt,
        Long       lastUpdatedAt,
        UInteger   drivercheckinrange,
        Byte       isActive,
        UInteger   serviceRegionId,
        String     otherFlags,
        Integer    hubIncharge
    ) {
        this.id = id;
        this.hubname = hubname;
        this.latitude = latitude;
        this.longitude = longitude;
        this.isshiftconfigurationactive = isshiftconfigurationactive;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdAt = createdAt;
        this.lastUpdatedAt = lastUpdatedAt;
        this.drivercheckinrange = drivercheckinrange;
        this.isActive = isActive;
        this.serviceRegionId = serviceRegionId;
        this.otherFlags = otherFlags;
        this.hubIncharge = hubIncharge;
    }

    public UInteger getId() {
        return this.id;
    }

    public HubData setId(UInteger id) {
        this.id = id;
        return this;
    }

    public String getHubname() {
        return this.hubname;
    }

    public HubData setHubname(String hubname) {
        this.hubname = hubname;
        return this;
    }

    public BigDecimal getLatitude() {
        return this.latitude;
    }

    public HubData setLatitude(BigDecimal latitude) {
        this.latitude = latitude;
        return this;
    }

    public BigDecimal getLongitude() {
        return this.longitude;
    }

    public HubData setLongitude(BigDecimal longitude) {
        this.longitude = longitude;
        return this;
    }

    public Byte getIsshiftconfigurationactive() {
        return this.isshiftconfigurationactive;
    }

    public HubData setIsshiftconfigurationactive(Byte isshiftconfigurationactive) {
        this.isshiftconfigurationactive = isshiftconfigurationactive;
        return this;
    }

    public Integer getCreatedBy() {
        return this.createdBy;
    }

    public HubData setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public Integer getUpdatedBy() {
        return this.updatedBy;
    }

    public HubData setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    public Long getCreatedAt() {
        return this.createdAt;
    }

    public HubData setCreatedAt(Long createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    public Long getLastUpdatedAt() {
        return this.lastUpdatedAt;
    }

    public HubData setLastUpdatedAt(Long lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }

    public UInteger getDrivercheckinrange() {
        return this.drivercheckinrange;
    }

    public HubData setDrivercheckinrange(UInteger drivercheckinrange) {
        this.drivercheckinrange = drivercheckinrange;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public HubData setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public UInteger getServiceRegionId() {
        return this.serviceRegionId;
    }

    public HubData setServiceRegionId(UInteger serviceRegionId) {
        this.serviceRegionId = serviceRegionId;
        return this;
    }

    public String getOtherFlags() {
        return this.otherFlags;
    }

    public HubData setOtherFlags(String otherFlags) {
        this.otherFlags = otherFlags;
        return this;
    }

    public Integer getHubIncharge() {
        return this.hubIncharge;
    }

    public HubData setHubIncharge(Integer hubIncharge) {
        this.hubIncharge = hubIncharge;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final HubData other = (HubData) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (hubname == null) {
            if (other.hubname != null)
                return false;
        }
        else if (!hubname.equals(other.hubname))
            return false;
        if (latitude == null) {
            if (other.latitude != null)
                return false;
        }
        else if (!latitude.equals(other.latitude))
            return false;
        if (longitude == null) {
            if (other.longitude != null)
                return false;
        }
        else if (!longitude.equals(other.longitude))
            return false;
        if (isshiftconfigurationactive == null) {
            if (other.isshiftconfigurationactive != null)
                return false;
        }
        else if (!isshiftconfigurationactive.equals(other.isshiftconfigurationactive))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!updatedBy.equals(other.updatedBy))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (lastUpdatedAt == null) {
            if (other.lastUpdatedAt != null)
                return false;
        }
        else if (!lastUpdatedAt.equals(other.lastUpdatedAt))
            return false;
        if (drivercheckinrange == null) {
            if (other.drivercheckinrange != null)
                return false;
        }
        else if (!drivercheckinrange.equals(other.drivercheckinrange))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (serviceRegionId == null) {
            if (other.serviceRegionId != null)
                return false;
        }
        else if (!serviceRegionId.equals(other.serviceRegionId))
            return false;
        if (otherFlags == null) {
            if (other.otherFlags != null)
                return false;
        }
        else if (!otherFlags.equals(other.otherFlags))
            return false;
        if (hubIncharge == null) {
            if (other.hubIncharge != null)
                return false;
        }
        else if (!hubIncharge.equals(other.hubIncharge))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.hubname == null) ? 0 : this.hubname.hashCode());
        result = prime * result + ((this.latitude == null) ? 0 : this.latitude.hashCode());
        result = prime * result + ((this.longitude == null) ? 0 : this.longitude.hashCode());
        result = prime * result + ((this.isshiftconfigurationactive == null) ? 0 : this.isshiftconfigurationactive.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.lastUpdatedAt == null) ? 0 : this.lastUpdatedAt.hashCode());
        result = prime * result + ((this.drivercheckinrange == null) ? 0 : this.drivercheckinrange.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.serviceRegionId == null) ? 0 : this.serviceRegionId.hashCode());
        result = prime * result + ((this.otherFlags == null) ? 0 : this.otherFlags.hashCode());
        result = prime * result + ((this.hubIncharge == null) ? 0 : this.hubIncharge.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("HubData (");

        sb.append(id);
        sb.append(", ").append(hubname);
        sb.append(", ").append(latitude);
        sb.append(", ").append(longitude);
        sb.append(", ").append(isshiftconfigurationactive);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(lastUpdatedAt);
        sb.append(", ").append(drivercheckinrange);
        sb.append(", ").append(isActive);
        sb.append(", ").append(serviceRegionId);
        sb.append(", ").append(otherFlags);
        sb.append(", ").append(hubIncharge);

        sb.append(")");
        return sb.toString();
    }
}
