/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaseDriverDailyStats implements Serializable {

    private static final long serialVersionUID = -1909251542;

    private UInteger   id;
    private UInteger   leaseId;
    private UInteger   driverId;
    private Long       recordDate;
    private String     leaseDriverDailyStatsState;
    private UInteger   totalOnlineDuration;
    private UInteger   totalPausedDuration;
    private UInteger   totalDutyDuration;
    private UInteger   totalTripDuration;
    private String     checkinCheckoutIds;
    private String     rideIds;
    private UInteger   tripsCount;
    private UInteger   vehiclesCount;
    private String     vehiclesNumber;
    private UInteger   sumOfFeedback;
    private UInteger   numberOfRatedRides;
    private BigDecimal tripEarnings;
    private BigDecimal estimatedLeaseCost;
    private BigDecimal actualLeaseCost;
    private BigDecimal estimatedMinimumGuarantee;
    private BigDecimal actualMinimumGuarantee;
    private BigDecimal driverEarnings;
    private BigDecimal leaseCostPenalty;
    private String     leaseCostPenaltyBreakup;
    private BigDecimal minimumGuaranteePenalty;
    private String     minimumGuaranteePenaltyBreakup;
    private Long       dutyStartTimestamp;
    private Long       dutyEndTimestamp;
    private Byte       isDriverPresent;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private BigDecimal commission;
    private BigDecimal gst;
    private BigDecimal driverTakeHome;
    private UInteger   totalOvertimeDuration;
    private BigDecimal overtimeEarnings;
    private Byte       hasOverlappingHappened;
    private Integer    overlappedId;
    private Long       officialDutyEndTimestamp;
    private Long       latestHubReachTimestamp;
    private UInteger   payoutId;
    private String     totalPausedBreakupDuration;
    private UInteger   dutyDay;
    private Long       checkInTimestamp;
    private String     checkInHub;
    private String     vehicleHandoverEpochs;
    private Long       officialDutyStartTimestamp;
    private UInteger   totalPreOvertimeDuration;
    private UInteger   totalPostOvertimeDuration;
    private BigDecimal preOvertimeEarnings;
    private BigDecimal postOvertimeEarnings;
    private Integer    slot;
    private Integer    slotWisePayoutId;
    private String     attendanceState;
    private String     otherFlags;
    private UInteger   totalPlannedMbgDuration;
    private UInteger   totalActualMbgDuration;
    private UInteger   totalPaidMbgDuration;
    private UInteger   totalActualSupplyDuration;
    private UInteger   totalPaidSupplyDuration;
    private UInteger   totalEarlyDutyStartDuration;
    private UInteger   totalLateDutyStartDuration;
    private UInteger   totalEarlyDutyEndDuration;
    private UInteger   totalLateDutyEndDuration;
    private UInteger   totalPaidBuffer;

    public LeaseDriverDailyStats() {}

    public LeaseDriverDailyStats(LeaseDriverDailyStats value) {
        this.id = value.id;
        this.leaseId = value.leaseId;
        this.driverId = value.driverId;
        this.recordDate = value.recordDate;
        this.leaseDriverDailyStatsState = value.leaseDriverDailyStatsState;
        this.totalOnlineDuration = value.totalOnlineDuration;
        this.totalPausedDuration = value.totalPausedDuration;
        this.totalDutyDuration = value.totalDutyDuration;
        this.totalTripDuration = value.totalTripDuration;
        this.checkinCheckoutIds = value.checkinCheckoutIds;
        this.rideIds = value.rideIds;
        this.tripsCount = value.tripsCount;
        this.vehiclesCount = value.vehiclesCount;
        this.vehiclesNumber = value.vehiclesNumber;
        this.sumOfFeedback = value.sumOfFeedback;
        this.numberOfRatedRides = value.numberOfRatedRides;
        this.tripEarnings = value.tripEarnings;
        this.estimatedLeaseCost = value.estimatedLeaseCost;
        this.actualLeaseCost = value.actualLeaseCost;
        this.estimatedMinimumGuarantee = value.estimatedMinimumGuarantee;
        this.actualMinimumGuarantee = value.actualMinimumGuarantee;
        this.driverEarnings = value.driverEarnings;
        this.leaseCostPenalty = value.leaseCostPenalty;
        this.leaseCostPenaltyBreakup = value.leaseCostPenaltyBreakup;
        this.minimumGuaranteePenalty = value.minimumGuaranteePenalty;
        this.minimumGuaranteePenaltyBreakup = value.minimumGuaranteePenaltyBreakup;
        this.dutyStartTimestamp = value.dutyStartTimestamp;
        this.dutyEndTimestamp = value.dutyEndTimestamp;
        this.isDriverPresent = value.isDriverPresent;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.commission = value.commission;
        this.gst = value.gst;
        this.driverTakeHome = value.driverTakeHome;
        this.totalOvertimeDuration = value.totalOvertimeDuration;
        this.overtimeEarnings = value.overtimeEarnings;
        this.hasOverlappingHappened = value.hasOverlappingHappened;
        this.overlappedId = value.overlappedId;
        this.officialDutyEndTimestamp = value.officialDutyEndTimestamp;
        this.latestHubReachTimestamp = value.latestHubReachTimestamp;
        this.payoutId = value.payoutId;
        this.totalPausedBreakupDuration = value.totalPausedBreakupDuration;
        this.dutyDay = value.dutyDay;
        this.checkInTimestamp = value.checkInTimestamp;
        this.checkInHub = value.checkInHub;
        this.vehicleHandoverEpochs = value.vehicleHandoverEpochs;
        this.officialDutyStartTimestamp = value.officialDutyStartTimestamp;
        this.totalPreOvertimeDuration = value.totalPreOvertimeDuration;
        this.totalPostOvertimeDuration = value.totalPostOvertimeDuration;
        this.preOvertimeEarnings = value.preOvertimeEarnings;
        this.postOvertimeEarnings = value.postOvertimeEarnings;
        this.slot = value.slot;
        this.slotWisePayoutId = value.slotWisePayoutId;
        this.attendanceState = value.attendanceState;
        this.otherFlags = value.otherFlags;
        this.totalPlannedMbgDuration = value.totalPlannedMbgDuration;
        this.totalActualMbgDuration = value.totalActualMbgDuration;
        this.totalPaidMbgDuration = value.totalPaidMbgDuration;
        this.totalActualSupplyDuration = value.totalActualSupplyDuration;
        this.totalPaidSupplyDuration = value.totalPaidSupplyDuration;
        this.totalEarlyDutyStartDuration = value.totalEarlyDutyStartDuration;
        this.totalLateDutyStartDuration = value.totalLateDutyStartDuration;
        this.totalEarlyDutyEndDuration = value.totalEarlyDutyEndDuration;
        this.totalLateDutyEndDuration = value.totalLateDutyEndDuration;
        this.totalPaidBuffer = value.totalPaidBuffer;
    }

    public LeaseDriverDailyStats(
        UInteger   id,
        UInteger   leaseId,
        UInteger   driverId,
        Long       recordDate,
        String     leaseDriverDailyStatsState,
        UInteger   totalOnlineDuration,
        UInteger   totalPausedDuration,
        UInteger   totalDutyDuration,
        UInteger   totalTripDuration,
        String     checkinCheckoutIds,
        String     rideIds,
        UInteger   tripsCount,
        UInteger   vehiclesCount,
        String     vehiclesNumber,
        UInteger   sumOfFeedback,
        UInteger   numberOfRatedRides,
        BigDecimal tripEarnings,
        BigDecimal estimatedLeaseCost,
        BigDecimal actualLeaseCost,
        BigDecimal estimatedMinimumGuarantee,
        BigDecimal actualMinimumGuarantee,
        BigDecimal driverEarnings,
        BigDecimal leaseCostPenalty,
        String     leaseCostPenaltyBreakup,
        BigDecimal minimumGuaranteePenalty,
        String     minimumGuaranteePenaltyBreakup,
        Long       dutyStartTimestamp,
        Long       dutyEndTimestamp,
        Byte       isDriverPresent,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        BigDecimal commission,
        BigDecimal gst,
        BigDecimal driverTakeHome,
        UInteger   totalOvertimeDuration,
        BigDecimal overtimeEarnings,
        Byte       hasOverlappingHappened,
        Integer    overlappedId,
        Long       officialDutyEndTimestamp,
        Long       latestHubReachTimestamp,
        UInteger   payoutId,
        String     totalPausedBreakupDuration,
        UInteger   dutyDay,
        Long       checkInTimestamp,
        String     checkInHub,
        String     vehicleHandoverEpochs,
        Long       officialDutyStartTimestamp,
        UInteger   totalPreOvertimeDuration,
        UInteger   totalPostOvertimeDuration,
        BigDecimal preOvertimeEarnings,
        BigDecimal postOvertimeEarnings,
        Integer    slot,
        Integer    slotWisePayoutId,
        String     attendanceState,
        String     otherFlags,
        UInteger   totalPlannedMbgDuration,
        UInteger   totalActualMbgDuration,
        UInteger   totalPaidMbgDuration,
        UInteger   totalActualSupplyDuration,
        UInteger   totalPaidSupplyDuration,
        UInteger   totalEarlyDutyStartDuration,
        UInteger   totalLateDutyStartDuration,
        UInteger   totalEarlyDutyEndDuration,
        UInteger   totalLateDutyEndDuration,
        UInteger   totalPaidBuffer
    ) {
        this.id = id;
        this.leaseId = leaseId;
        this.driverId = driverId;
        this.recordDate = recordDate;
        this.leaseDriverDailyStatsState = leaseDriverDailyStatsState;
        this.totalOnlineDuration = totalOnlineDuration;
        this.totalPausedDuration = totalPausedDuration;
        this.totalDutyDuration = totalDutyDuration;
        this.totalTripDuration = totalTripDuration;
        this.checkinCheckoutIds = checkinCheckoutIds;
        this.rideIds = rideIds;
        this.tripsCount = tripsCount;
        this.vehiclesCount = vehiclesCount;
        this.vehiclesNumber = vehiclesNumber;
        this.sumOfFeedback = sumOfFeedback;
        this.numberOfRatedRides = numberOfRatedRides;
        this.tripEarnings = tripEarnings;
        this.estimatedLeaseCost = estimatedLeaseCost;
        this.actualLeaseCost = actualLeaseCost;
        this.estimatedMinimumGuarantee = estimatedMinimumGuarantee;
        this.actualMinimumGuarantee = actualMinimumGuarantee;
        this.driverEarnings = driverEarnings;
        this.leaseCostPenalty = leaseCostPenalty;
        this.leaseCostPenaltyBreakup = leaseCostPenaltyBreakup;
        this.minimumGuaranteePenalty = minimumGuaranteePenalty;
        this.minimumGuaranteePenaltyBreakup = minimumGuaranteePenaltyBreakup;
        this.dutyStartTimestamp = dutyStartTimestamp;
        this.dutyEndTimestamp = dutyEndTimestamp;
        this.isDriverPresent = isDriverPresent;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.commission = commission;
        this.gst = gst;
        this.driverTakeHome = driverTakeHome;
        this.totalOvertimeDuration = totalOvertimeDuration;
        this.overtimeEarnings = overtimeEarnings;
        this.hasOverlappingHappened = hasOverlappingHappened;
        this.overlappedId = overlappedId;
        this.officialDutyEndTimestamp = officialDutyEndTimestamp;
        this.latestHubReachTimestamp = latestHubReachTimestamp;
        this.payoutId = payoutId;
        this.totalPausedBreakupDuration = totalPausedBreakupDuration;
        this.dutyDay = dutyDay;
        this.checkInTimestamp = checkInTimestamp;
        this.checkInHub = checkInHub;
        this.vehicleHandoverEpochs = vehicleHandoverEpochs;
        this.officialDutyStartTimestamp = officialDutyStartTimestamp;
        this.totalPreOvertimeDuration = totalPreOvertimeDuration;
        this.totalPostOvertimeDuration = totalPostOvertimeDuration;
        this.preOvertimeEarnings = preOvertimeEarnings;
        this.postOvertimeEarnings = postOvertimeEarnings;
        this.slot = slot;
        this.slotWisePayoutId = slotWisePayoutId;
        this.attendanceState = attendanceState;
        this.otherFlags = otherFlags;
        this.totalPlannedMbgDuration = totalPlannedMbgDuration;
        this.totalActualMbgDuration = totalActualMbgDuration;
        this.totalPaidMbgDuration = totalPaidMbgDuration;
        this.totalActualSupplyDuration = totalActualSupplyDuration;
        this.totalPaidSupplyDuration = totalPaidSupplyDuration;
        this.totalEarlyDutyStartDuration = totalEarlyDutyStartDuration;
        this.totalLateDutyStartDuration = totalLateDutyStartDuration;
        this.totalEarlyDutyEndDuration = totalEarlyDutyEndDuration;
        this.totalLateDutyEndDuration = totalLateDutyEndDuration;
        this.totalPaidBuffer = totalPaidBuffer;
    }

    public UInteger getId() {
        return this.id;
    }

    public LeaseDriverDailyStats setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getLeaseId() {
        return this.leaseId;
    }

    public LeaseDriverDailyStats setLeaseId(UInteger leaseId) {
        this.leaseId = leaseId;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public LeaseDriverDailyStats setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public Long getRecordDate() {
        return this.recordDate;
    }

    public LeaseDriverDailyStats setRecordDate(Long recordDate) {
        this.recordDate = recordDate;
        return this;
    }

    public String getLeaseDriverDailyStatsState() {
        return this.leaseDriverDailyStatsState;
    }

    public LeaseDriverDailyStats setLeaseDriverDailyStatsState(String leaseDriverDailyStatsState) {
        this.leaseDriverDailyStatsState = leaseDriverDailyStatsState;
        return this;
    }

    public UInteger getTotalOnlineDuration() {
        return this.totalOnlineDuration;
    }

    public LeaseDriverDailyStats setTotalOnlineDuration(UInteger totalOnlineDuration) {
        this.totalOnlineDuration = totalOnlineDuration;
        return this;
    }

    public UInteger getTotalPausedDuration() {
        return this.totalPausedDuration;
    }

    public LeaseDriverDailyStats setTotalPausedDuration(UInteger totalPausedDuration) {
        this.totalPausedDuration = totalPausedDuration;
        return this;
    }

    public UInteger getTotalDutyDuration() {
        return this.totalDutyDuration;
    }

    public LeaseDriverDailyStats setTotalDutyDuration(UInteger totalDutyDuration) {
        this.totalDutyDuration = totalDutyDuration;
        return this;
    }

    public UInteger getTotalTripDuration() {
        return this.totalTripDuration;
    }

    public LeaseDriverDailyStats setTotalTripDuration(UInteger totalTripDuration) {
        this.totalTripDuration = totalTripDuration;
        return this;
    }

    public String getCheckinCheckoutIds() {
        return this.checkinCheckoutIds;
    }

    public LeaseDriverDailyStats setCheckinCheckoutIds(String checkinCheckoutIds) {
        this.checkinCheckoutIds = checkinCheckoutIds;
        return this;
    }

    public String getRideIds() {
        return this.rideIds;
    }

    public LeaseDriverDailyStats setRideIds(String rideIds) {
        this.rideIds = rideIds;
        return this;
    }

    public UInteger getTripsCount() {
        return this.tripsCount;
    }

    public LeaseDriverDailyStats setTripsCount(UInteger tripsCount) {
        this.tripsCount = tripsCount;
        return this;
    }

    public UInteger getVehiclesCount() {
        return this.vehiclesCount;
    }

    public LeaseDriverDailyStats setVehiclesCount(UInteger vehiclesCount) {
        this.vehiclesCount = vehiclesCount;
        return this;
    }

    public String getVehiclesNumber() {
        return this.vehiclesNumber;
    }

    public LeaseDriverDailyStats setVehiclesNumber(String vehiclesNumber) {
        this.vehiclesNumber = vehiclesNumber;
        return this;
    }

    public UInteger getSumOfFeedback() {
        return this.sumOfFeedback;
    }

    public LeaseDriverDailyStats setSumOfFeedback(UInteger sumOfFeedback) {
        this.sumOfFeedback = sumOfFeedback;
        return this;
    }

    public UInteger getNumberOfRatedRides() {
        return this.numberOfRatedRides;
    }

    public LeaseDriverDailyStats setNumberOfRatedRides(UInteger numberOfRatedRides) {
        this.numberOfRatedRides = numberOfRatedRides;
        return this;
    }

    public BigDecimal getTripEarnings() {
        return this.tripEarnings;
    }

    public LeaseDriverDailyStats setTripEarnings(BigDecimal tripEarnings) {
        this.tripEarnings = tripEarnings;
        return this;
    }

    public BigDecimal getEstimatedLeaseCost() {
        return this.estimatedLeaseCost;
    }

    public LeaseDriverDailyStats setEstimatedLeaseCost(BigDecimal estimatedLeaseCost) {
        this.estimatedLeaseCost = estimatedLeaseCost;
        return this;
    }

    public BigDecimal getActualLeaseCost() {
        return this.actualLeaseCost;
    }

    public LeaseDriverDailyStats setActualLeaseCost(BigDecimal actualLeaseCost) {
        this.actualLeaseCost = actualLeaseCost;
        return this;
    }

    public BigDecimal getEstimatedMinimumGuarantee() {
        return this.estimatedMinimumGuarantee;
    }

    public LeaseDriverDailyStats setEstimatedMinimumGuarantee(BigDecimal estimatedMinimumGuarantee) {
        this.estimatedMinimumGuarantee = estimatedMinimumGuarantee;
        return this;
    }

    public BigDecimal getActualMinimumGuarantee() {
        return this.actualMinimumGuarantee;
    }

    public LeaseDriverDailyStats setActualMinimumGuarantee(BigDecimal actualMinimumGuarantee) {
        this.actualMinimumGuarantee = actualMinimumGuarantee;
        return this;
    }

    public BigDecimal getDriverEarnings() {
        return this.driverEarnings;
    }

    public LeaseDriverDailyStats setDriverEarnings(BigDecimal driverEarnings) {
        this.driverEarnings = driverEarnings;
        return this;
    }

    public BigDecimal getLeaseCostPenalty() {
        return this.leaseCostPenalty;
    }

    public LeaseDriverDailyStats setLeaseCostPenalty(BigDecimal leaseCostPenalty) {
        this.leaseCostPenalty = leaseCostPenalty;
        return this;
    }

    public String getLeaseCostPenaltyBreakup() {
        return this.leaseCostPenaltyBreakup;
    }

    public LeaseDriverDailyStats setLeaseCostPenaltyBreakup(String leaseCostPenaltyBreakup) {
        this.leaseCostPenaltyBreakup = leaseCostPenaltyBreakup;
        return this;
    }

    public BigDecimal getMinimumGuaranteePenalty() {
        return this.minimumGuaranteePenalty;
    }

    public LeaseDriverDailyStats setMinimumGuaranteePenalty(BigDecimal minimumGuaranteePenalty) {
        this.minimumGuaranteePenalty = minimumGuaranteePenalty;
        return this;
    }

    public String getMinimumGuaranteePenaltyBreakup() {
        return this.minimumGuaranteePenaltyBreakup;
    }

    public LeaseDriverDailyStats setMinimumGuaranteePenaltyBreakup(String minimumGuaranteePenaltyBreakup) {
        this.minimumGuaranteePenaltyBreakup = minimumGuaranteePenaltyBreakup;
        return this;
    }

    public Long getDutyStartTimestamp() {
        return this.dutyStartTimestamp;
    }

    public LeaseDriverDailyStats setDutyStartTimestamp(Long dutyStartTimestamp) {
        this.dutyStartTimestamp = dutyStartTimestamp;
        return this;
    }

    public Long getDutyEndTimestamp() {
        return this.dutyEndTimestamp;
    }

    public LeaseDriverDailyStats setDutyEndTimestamp(Long dutyEndTimestamp) {
        this.dutyEndTimestamp = dutyEndTimestamp;
        return this;
    }

    public Byte getIsDriverPresent() {
        return this.isDriverPresent;
    }

    public LeaseDriverDailyStats setIsDriverPresent(Byte isDriverPresent) {
        this.isDriverPresent = isDriverPresent;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public LeaseDriverDailyStats setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public LeaseDriverDailyStats setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public LeaseDriverDailyStats setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public LeaseDriverDailyStats setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public LeaseDriverDailyStats setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public BigDecimal getCommission() {
        return this.commission;
    }

    public LeaseDriverDailyStats setCommission(BigDecimal commission) {
        this.commission = commission;
        return this;
    }

    public BigDecimal getGst() {
        return this.gst;
    }

    public LeaseDriverDailyStats setGst(BigDecimal gst) {
        this.gst = gst;
        return this;
    }

    public BigDecimal getDriverTakeHome() {
        return this.driverTakeHome;
    }

    public LeaseDriverDailyStats setDriverTakeHome(BigDecimal driverTakeHome) {
        this.driverTakeHome = driverTakeHome;
        return this;
    }

    public UInteger getTotalOvertimeDuration() {
        return this.totalOvertimeDuration;
    }

    public LeaseDriverDailyStats setTotalOvertimeDuration(UInteger totalOvertimeDuration) {
        this.totalOvertimeDuration = totalOvertimeDuration;
        return this;
    }

    public BigDecimal getOvertimeEarnings() {
        return this.overtimeEarnings;
    }

    public LeaseDriverDailyStats setOvertimeEarnings(BigDecimal overtimeEarnings) {
        this.overtimeEarnings = overtimeEarnings;
        return this;
    }

    public Byte getHasOverlappingHappened() {
        return this.hasOverlappingHappened;
    }

    public LeaseDriverDailyStats setHasOverlappingHappened(Byte hasOverlappingHappened) {
        this.hasOverlappingHappened = hasOverlappingHappened;
        return this;
    }

    public Integer getOverlappedId() {
        return this.overlappedId;
    }

    public LeaseDriverDailyStats setOverlappedId(Integer overlappedId) {
        this.overlappedId = overlappedId;
        return this;
    }

    public Long getOfficialDutyEndTimestamp() {
        return this.officialDutyEndTimestamp;
    }

    public LeaseDriverDailyStats setOfficialDutyEndTimestamp(Long officialDutyEndTimestamp) {
        this.officialDutyEndTimestamp = officialDutyEndTimestamp;
        return this;
    }

    public Long getLatestHubReachTimestamp() {
        return this.latestHubReachTimestamp;
    }

    public LeaseDriverDailyStats setLatestHubReachTimestamp(Long latestHubReachTimestamp) {
        this.latestHubReachTimestamp = latestHubReachTimestamp;
        return this;
    }

    public UInteger getPayoutId() {
        return this.payoutId;
    }

    public LeaseDriverDailyStats setPayoutId(UInteger payoutId) {
        this.payoutId = payoutId;
        return this;
    }

    public String getTotalPausedBreakupDuration() {
        return this.totalPausedBreakupDuration;
    }

    public LeaseDriverDailyStats setTotalPausedBreakupDuration(String totalPausedBreakupDuration) {
        this.totalPausedBreakupDuration = totalPausedBreakupDuration;
        return this;
    }

    public UInteger getDutyDay() {
        return this.dutyDay;
    }

    public LeaseDriverDailyStats setDutyDay(UInteger dutyDay) {
        this.dutyDay = dutyDay;
        return this;
    }

    public Long getCheckInTimestamp() {
        return this.checkInTimestamp;
    }

    public LeaseDriverDailyStats setCheckInTimestamp(Long checkInTimestamp) {
        this.checkInTimestamp = checkInTimestamp;
        return this;
    }

    public String getCheckInHub() {
        return this.checkInHub;
    }

    public LeaseDriverDailyStats setCheckInHub(String checkInHub) {
        this.checkInHub = checkInHub;
        return this;
    }

    public String getVehicleHandoverEpochs() {
        return this.vehicleHandoverEpochs;
    }

    public LeaseDriverDailyStats setVehicleHandoverEpochs(String vehicleHandoverEpochs) {
        this.vehicleHandoverEpochs = vehicleHandoverEpochs;
        return this;
    }

    public Long getOfficialDutyStartTimestamp() {
        return this.officialDutyStartTimestamp;
    }

    public LeaseDriverDailyStats setOfficialDutyStartTimestamp(Long officialDutyStartTimestamp) {
        this.officialDutyStartTimestamp = officialDutyStartTimestamp;
        return this;
    }

    public UInteger getTotalPreOvertimeDuration() {
        return this.totalPreOvertimeDuration;
    }

    public LeaseDriverDailyStats setTotalPreOvertimeDuration(UInteger totalPreOvertimeDuration) {
        this.totalPreOvertimeDuration = totalPreOvertimeDuration;
        return this;
    }

    public UInteger getTotalPostOvertimeDuration() {
        return this.totalPostOvertimeDuration;
    }

    public LeaseDriverDailyStats setTotalPostOvertimeDuration(UInteger totalPostOvertimeDuration) {
        this.totalPostOvertimeDuration = totalPostOvertimeDuration;
        return this;
    }

    public BigDecimal getPreOvertimeEarnings() {
        return this.preOvertimeEarnings;
    }

    public LeaseDriverDailyStats setPreOvertimeEarnings(BigDecimal preOvertimeEarnings) {
        this.preOvertimeEarnings = preOvertimeEarnings;
        return this;
    }

    public BigDecimal getPostOvertimeEarnings() {
        return this.postOvertimeEarnings;
    }

    public LeaseDriverDailyStats setPostOvertimeEarnings(BigDecimal postOvertimeEarnings) {
        this.postOvertimeEarnings = postOvertimeEarnings;
        return this;
    }

    public Integer getSlot() {
        return this.slot;
    }

    public LeaseDriverDailyStats setSlot(Integer slot) {
        this.slot = slot;
        return this;
    }

    public Integer getSlotWisePayoutId() {
        return this.slotWisePayoutId;
    }

    public LeaseDriverDailyStats setSlotWisePayoutId(Integer slotWisePayoutId) {
        this.slotWisePayoutId = slotWisePayoutId;
        return this;
    }

    public String getAttendanceState() {
        return this.attendanceState;
    }

    public LeaseDriverDailyStats setAttendanceState(String attendanceState) {
        this.attendanceState = attendanceState;
        return this;
    }

    public String getOtherFlags() {
        return this.otherFlags;
    }

    public LeaseDriverDailyStats setOtherFlags(String otherFlags) {
        this.otherFlags = otherFlags;
        return this;
    }

    public UInteger getTotalPlannedMbgDuration() {
        return this.totalPlannedMbgDuration;
    }

    public LeaseDriverDailyStats setTotalPlannedMbgDuration(UInteger totalPlannedMbgDuration) {
        this.totalPlannedMbgDuration = totalPlannedMbgDuration;
        return this;
    }

    public UInteger getTotalActualMbgDuration() {
        return this.totalActualMbgDuration;
    }

    public LeaseDriverDailyStats setTotalActualMbgDuration(UInteger totalActualMbgDuration) {
        this.totalActualMbgDuration = totalActualMbgDuration;
        return this;
    }

    public UInteger getTotalPaidMbgDuration() {
        return this.totalPaidMbgDuration;
    }

    public LeaseDriverDailyStats setTotalPaidMbgDuration(UInteger totalPaidMbgDuration) {
        this.totalPaidMbgDuration = totalPaidMbgDuration;
        return this;
    }

    public UInteger getTotalActualSupplyDuration() {
        return this.totalActualSupplyDuration;
    }

    public LeaseDriverDailyStats setTotalActualSupplyDuration(UInteger totalActualSupplyDuration) {
        this.totalActualSupplyDuration = totalActualSupplyDuration;
        return this;
    }

    public UInteger getTotalPaidSupplyDuration() {
        return this.totalPaidSupplyDuration;
    }

    public LeaseDriverDailyStats setTotalPaidSupplyDuration(UInteger totalPaidSupplyDuration) {
        this.totalPaidSupplyDuration = totalPaidSupplyDuration;
        return this;
    }

    public UInteger getTotalEarlyDutyStartDuration() {
        return this.totalEarlyDutyStartDuration;
    }

    public LeaseDriverDailyStats setTotalEarlyDutyStartDuration(UInteger totalEarlyDutyStartDuration) {
        this.totalEarlyDutyStartDuration = totalEarlyDutyStartDuration;
        return this;
    }

    public UInteger getTotalLateDutyStartDuration() {
        return this.totalLateDutyStartDuration;
    }

    public LeaseDriverDailyStats setTotalLateDutyStartDuration(UInteger totalLateDutyStartDuration) {
        this.totalLateDutyStartDuration = totalLateDutyStartDuration;
        return this;
    }

    public UInteger getTotalEarlyDutyEndDuration() {
        return this.totalEarlyDutyEndDuration;
    }

    public LeaseDriverDailyStats setTotalEarlyDutyEndDuration(UInteger totalEarlyDutyEndDuration) {
        this.totalEarlyDutyEndDuration = totalEarlyDutyEndDuration;
        return this;
    }

    public UInteger getTotalLateDutyEndDuration() {
        return this.totalLateDutyEndDuration;
    }

    public LeaseDriverDailyStats setTotalLateDutyEndDuration(UInteger totalLateDutyEndDuration) {
        this.totalLateDutyEndDuration = totalLateDutyEndDuration;
        return this;
    }

    public UInteger getTotalPaidBuffer() {
        return this.totalPaidBuffer;
    }

    public LeaseDriverDailyStats setTotalPaidBuffer(UInteger totalPaidBuffer) {
        this.totalPaidBuffer = totalPaidBuffer;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LeaseDriverDailyStats other = (LeaseDriverDailyStats) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (leaseId == null) {
            if (other.leaseId != null)
                return false;
        }
        else if (!leaseId.equals(other.leaseId))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (recordDate == null) {
            if (other.recordDate != null)
                return false;
        }
        else if (!recordDate.equals(other.recordDate))
            return false;
        if (leaseDriverDailyStatsState == null) {
            if (other.leaseDriverDailyStatsState != null)
                return false;
        }
        else if (!leaseDriverDailyStatsState.equals(other.leaseDriverDailyStatsState))
            return false;
        if (totalOnlineDuration == null) {
            if (other.totalOnlineDuration != null)
                return false;
        }
        else if (!totalOnlineDuration.equals(other.totalOnlineDuration))
            return false;
        if (totalPausedDuration == null) {
            if (other.totalPausedDuration != null)
                return false;
        }
        else if (!totalPausedDuration.equals(other.totalPausedDuration))
            return false;
        if (totalDutyDuration == null) {
            if (other.totalDutyDuration != null)
                return false;
        }
        else if (!totalDutyDuration.equals(other.totalDutyDuration))
            return false;
        if (totalTripDuration == null) {
            if (other.totalTripDuration != null)
                return false;
        }
        else if (!totalTripDuration.equals(other.totalTripDuration))
            return false;
        if (checkinCheckoutIds == null) {
            if (other.checkinCheckoutIds != null)
                return false;
        }
        else if (!checkinCheckoutIds.equals(other.checkinCheckoutIds))
            return false;
        if (rideIds == null) {
            if (other.rideIds != null)
                return false;
        }
        else if (!rideIds.equals(other.rideIds))
            return false;
        if (tripsCount == null) {
            if (other.tripsCount != null)
                return false;
        }
        else if (!tripsCount.equals(other.tripsCount))
            return false;
        if (vehiclesCount == null) {
            if (other.vehiclesCount != null)
                return false;
        }
        else if (!vehiclesCount.equals(other.vehiclesCount))
            return false;
        if (vehiclesNumber == null) {
            if (other.vehiclesNumber != null)
                return false;
        }
        else if (!vehiclesNumber.equals(other.vehiclesNumber))
            return false;
        if (sumOfFeedback == null) {
            if (other.sumOfFeedback != null)
                return false;
        }
        else if (!sumOfFeedback.equals(other.sumOfFeedback))
            return false;
        if (numberOfRatedRides == null) {
            if (other.numberOfRatedRides != null)
                return false;
        }
        else if (!numberOfRatedRides.equals(other.numberOfRatedRides))
            return false;
        if (tripEarnings == null) {
            if (other.tripEarnings != null)
                return false;
        }
        else if (!tripEarnings.equals(other.tripEarnings))
            return false;
        if (estimatedLeaseCost == null) {
            if (other.estimatedLeaseCost != null)
                return false;
        }
        else if (!estimatedLeaseCost.equals(other.estimatedLeaseCost))
            return false;
        if (actualLeaseCost == null) {
            if (other.actualLeaseCost != null)
                return false;
        }
        else if (!actualLeaseCost.equals(other.actualLeaseCost))
            return false;
        if (estimatedMinimumGuarantee == null) {
            if (other.estimatedMinimumGuarantee != null)
                return false;
        }
        else if (!estimatedMinimumGuarantee.equals(other.estimatedMinimumGuarantee))
            return false;
        if (actualMinimumGuarantee == null) {
            if (other.actualMinimumGuarantee != null)
                return false;
        }
        else if (!actualMinimumGuarantee.equals(other.actualMinimumGuarantee))
            return false;
        if (driverEarnings == null) {
            if (other.driverEarnings != null)
                return false;
        }
        else if (!driverEarnings.equals(other.driverEarnings))
            return false;
        if (leaseCostPenalty == null) {
            if (other.leaseCostPenalty != null)
                return false;
        }
        else if (!leaseCostPenalty.equals(other.leaseCostPenalty))
            return false;
        if (leaseCostPenaltyBreakup == null) {
            if (other.leaseCostPenaltyBreakup != null)
                return false;
        }
        else if (!leaseCostPenaltyBreakup.equals(other.leaseCostPenaltyBreakup))
            return false;
        if (minimumGuaranteePenalty == null) {
            if (other.minimumGuaranteePenalty != null)
                return false;
        }
        else if (!minimumGuaranteePenalty.equals(other.minimumGuaranteePenalty))
            return false;
        if (minimumGuaranteePenaltyBreakup == null) {
            if (other.minimumGuaranteePenaltyBreakup != null)
                return false;
        }
        else if (!minimumGuaranteePenaltyBreakup.equals(other.minimumGuaranteePenaltyBreakup))
            return false;
        if (dutyStartTimestamp == null) {
            if (other.dutyStartTimestamp != null)
                return false;
        }
        else if (!dutyStartTimestamp.equals(other.dutyStartTimestamp))
            return false;
        if (dutyEndTimestamp == null) {
            if (other.dutyEndTimestamp != null)
                return false;
        }
        else if (!dutyEndTimestamp.equals(other.dutyEndTimestamp))
            return false;
        if (isDriverPresent == null) {
            if (other.isDriverPresent != null)
                return false;
        }
        else if (!isDriverPresent.equals(other.isDriverPresent))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (commission == null) {
            if (other.commission != null)
                return false;
        }
        else if (!commission.equals(other.commission))
            return false;
        if (gst == null) {
            if (other.gst != null)
                return false;
        }
        else if (!gst.equals(other.gst))
            return false;
        if (driverTakeHome == null) {
            if (other.driverTakeHome != null)
                return false;
        }
        else if (!driverTakeHome.equals(other.driverTakeHome))
            return false;
        if (totalOvertimeDuration == null) {
            if (other.totalOvertimeDuration != null)
                return false;
        }
        else if (!totalOvertimeDuration.equals(other.totalOvertimeDuration))
            return false;
        if (overtimeEarnings == null) {
            if (other.overtimeEarnings != null)
                return false;
        }
        else if (!overtimeEarnings.equals(other.overtimeEarnings))
            return false;
        if (hasOverlappingHappened == null) {
            if (other.hasOverlappingHappened != null)
                return false;
        }
        else if (!hasOverlappingHappened.equals(other.hasOverlappingHappened))
            return false;
        if (overlappedId == null) {
            if (other.overlappedId != null)
                return false;
        }
        else if (!overlappedId.equals(other.overlappedId))
            return false;
        if (officialDutyEndTimestamp == null) {
            if (other.officialDutyEndTimestamp != null)
                return false;
        }
        else if (!officialDutyEndTimestamp.equals(other.officialDutyEndTimestamp))
            return false;
        if (latestHubReachTimestamp == null) {
            if (other.latestHubReachTimestamp != null)
                return false;
        }
        else if (!latestHubReachTimestamp.equals(other.latestHubReachTimestamp))
            return false;
        if (payoutId == null) {
            if (other.payoutId != null)
                return false;
        }
        else if (!payoutId.equals(other.payoutId))
            return false;
        if (totalPausedBreakupDuration == null) {
            if (other.totalPausedBreakupDuration != null)
                return false;
        }
        else if (!totalPausedBreakupDuration.equals(other.totalPausedBreakupDuration))
            return false;
        if (dutyDay == null) {
            if (other.dutyDay != null)
                return false;
        }
        else if (!dutyDay.equals(other.dutyDay))
            return false;
        if (checkInTimestamp == null) {
            if (other.checkInTimestamp != null)
                return false;
        }
        else if (!checkInTimestamp.equals(other.checkInTimestamp))
            return false;
        if (checkInHub == null) {
            if (other.checkInHub != null)
                return false;
        }
        else if (!checkInHub.equals(other.checkInHub))
            return false;
        if (vehicleHandoverEpochs == null) {
            if (other.vehicleHandoverEpochs != null)
                return false;
        }
        else if (!vehicleHandoverEpochs.equals(other.vehicleHandoverEpochs))
            return false;
        if (officialDutyStartTimestamp == null) {
            if (other.officialDutyStartTimestamp != null)
                return false;
        }
        else if (!officialDutyStartTimestamp.equals(other.officialDutyStartTimestamp))
            return false;
        if (totalPreOvertimeDuration == null) {
            if (other.totalPreOvertimeDuration != null)
                return false;
        }
        else if (!totalPreOvertimeDuration.equals(other.totalPreOvertimeDuration))
            return false;
        if (totalPostOvertimeDuration == null) {
            if (other.totalPostOvertimeDuration != null)
                return false;
        }
        else if (!totalPostOvertimeDuration.equals(other.totalPostOvertimeDuration))
            return false;
        if (preOvertimeEarnings == null) {
            if (other.preOvertimeEarnings != null)
                return false;
        }
        else if (!preOvertimeEarnings.equals(other.preOvertimeEarnings))
            return false;
        if (postOvertimeEarnings == null) {
            if (other.postOvertimeEarnings != null)
                return false;
        }
        else if (!postOvertimeEarnings.equals(other.postOvertimeEarnings))
            return false;
        if (slot == null) {
            if (other.slot != null)
                return false;
        }
        else if (!slot.equals(other.slot))
            return false;
        if (slotWisePayoutId == null) {
            if (other.slotWisePayoutId != null)
                return false;
        }
        else if (!slotWisePayoutId.equals(other.slotWisePayoutId))
            return false;
        if (attendanceState == null) {
            if (other.attendanceState != null)
                return false;
        }
        else if (!attendanceState.equals(other.attendanceState))
            return false;
        if (otherFlags == null) {
            if (other.otherFlags != null)
                return false;
        }
        else if (!otherFlags.equals(other.otherFlags))
            return false;
        if (totalPlannedMbgDuration == null) {
            if (other.totalPlannedMbgDuration != null)
                return false;
        }
        else if (!totalPlannedMbgDuration.equals(other.totalPlannedMbgDuration))
            return false;
        if (totalActualMbgDuration == null) {
            if (other.totalActualMbgDuration != null)
                return false;
        }
        else if (!totalActualMbgDuration.equals(other.totalActualMbgDuration))
            return false;
        if (totalPaidMbgDuration == null) {
            if (other.totalPaidMbgDuration != null)
                return false;
        }
        else if (!totalPaidMbgDuration.equals(other.totalPaidMbgDuration))
            return false;
        if (totalActualSupplyDuration == null) {
            if (other.totalActualSupplyDuration != null)
                return false;
        }
        else if (!totalActualSupplyDuration.equals(other.totalActualSupplyDuration))
            return false;
        if (totalPaidSupplyDuration == null) {
            if (other.totalPaidSupplyDuration != null)
                return false;
        }
        else if (!totalPaidSupplyDuration.equals(other.totalPaidSupplyDuration))
            return false;
        if (totalEarlyDutyStartDuration == null) {
            if (other.totalEarlyDutyStartDuration != null)
                return false;
        }
        else if (!totalEarlyDutyStartDuration.equals(other.totalEarlyDutyStartDuration))
            return false;
        if (totalLateDutyStartDuration == null) {
            if (other.totalLateDutyStartDuration != null)
                return false;
        }
        else if (!totalLateDutyStartDuration.equals(other.totalLateDutyStartDuration))
            return false;
        if (totalEarlyDutyEndDuration == null) {
            if (other.totalEarlyDutyEndDuration != null)
                return false;
        }
        else if (!totalEarlyDutyEndDuration.equals(other.totalEarlyDutyEndDuration))
            return false;
        if (totalLateDutyEndDuration == null) {
            if (other.totalLateDutyEndDuration != null)
                return false;
        }
        else if (!totalLateDutyEndDuration.equals(other.totalLateDutyEndDuration))
            return false;
        if (totalPaidBuffer == null) {
            if (other.totalPaidBuffer != null)
                return false;
        }
        else if (!totalPaidBuffer.equals(other.totalPaidBuffer))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.leaseId == null) ? 0 : this.leaseId.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.recordDate == null) ? 0 : this.recordDate.hashCode());
        result = prime * result + ((this.leaseDriverDailyStatsState == null) ? 0 : this.leaseDriverDailyStatsState.hashCode());
        result = prime * result + ((this.totalOnlineDuration == null) ? 0 : this.totalOnlineDuration.hashCode());
        result = prime * result + ((this.totalPausedDuration == null) ? 0 : this.totalPausedDuration.hashCode());
        result = prime * result + ((this.totalDutyDuration == null) ? 0 : this.totalDutyDuration.hashCode());
        result = prime * result + ((this.totalTripDuration == null) ? 0 : this.totalTripDuration.hashCode());
        result = prime * result + ((this.checkinCheckoutIds == null) ? 0 : this.checkinCheckoutIds.hashCode());
        result = prime * result + ((this.rideIds == null) ? 0 : this.rideIds.hashCode());
        result = prime * result + ((this.tripsCount == null) ? 0 : this.tripsCount.hashCode());
        result = prime * result + ((this.vehiclesCount == null) ? 0 : this.vehiclesCount.hashCode());
        result = prime * result + ((this.vehiclesNumber == null) ? 0 : this.vehiclesNumber.hashCode());
        result = prime * result + ((this.sumOfFeedback == null) ? 0 : this.sumOfFeedback.hashCode());
        result = prime * result + ((this.numberOfRatedRides == null) ? 0 : this.numberOfRatedRides.hashCode());
        result = prime * result + ((this.tripEarnings == null) ? 0 : this.tripEarnings.hashCode());
        result = prime * result + ((this.estimatedLeaseCost == null) ? 0 : this.estimatedLeaseCost.hashCode());
        result = prime * result + ((this.actualLeaseCost == null) ? 0 : this.actualLeaseCost.hashCode());
        result = prime * result + ((this.estimatedMinimumGuarantee == null) ? 0 : this.estimatedMinimumGuarantee.hashCode());
        result = prime * result + ((this.actualMinimumGuarantee == null) ? 0 : this.actualMinimumGuarantee.hashCode());
        result = prime * result + ((this.driverEarnings == null) ? 0 : this.driverEarnings.hashCode());
        result = prime * result + ((this.leaseCostPenalty == null) ? 0 : this.leaseCostPenalty.hashCode());
        result = prime * result + ((this.leaseCostPenaltyBreakup == null) ? 0 : this.leaseCostPenaltyBreakup.hashCode());
        result = prime * result + ((this.minimumGuaranteePenalty == null) ? 0 : this.minimumGuaranteePenalty.hashCode());
        result = prime * result + ((this.minimumGuaranteePenaltyBreakup == null) ? 0 : this.minimumGuaranteePenaltyBreakup.hashCode());
        result = prime * result + ((this.dutyStartTimestamp == null) ? 0 : this.dutyStartTimestamp.hashCode());
        result = prime * result + ((this.dutyEndTimestamp == null) ? 0 : this.dutyEndTimestamp.hashCode());
        result = prime * result + ((this.isDriverPresent == null) ? 0 : this.isDriverPresent.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.commission == null) ? 0 : this.commission.hashCode());
        result = prime * result + ((this.gst == null) ? 0 : this.gst.hashCode());
        result = prime * result + ((this.driverTakeHome == null) ? 0 : this.driverTakeHome.hashCode());
        result = prime * result + ((this.totalOvertimeDuration == null) ? 0 : this.totalOvertimeDuration.hashCode());
        result = prime * result + ((this.overtimeEarnings == null) ? 0 : this.overtimeEarnings.hashCode());
        result = prime * result + ((this.hasOverlappingHappened == null) ? 0 : this.hasOverlappingHappened.hashCode());
        result = prime * result + ((this.overlappedId == null) ? 0 : this.overlappedId.hashCode());
        result = prime * result + ((this.officialDutyEndTimestamp == null) ? 0 : this.officialDutyEndTimestamp.hashCode());
        result = prime * result + ((this.latestHubReachTimestamp == null) ? 0 : this.latestHubReachTimestamp.hashCode());
        result = prime * result + ((this.payoutId == null) ? 0 : this.payoutId.hashCode());
        result = prime * result + ((this.totalPausedBreakupDuration == null) ? 0 : this.totalPausedBreakupDuration.hashCode());
        result = prime * result + ((this.dutyDay == null) ? 0 : this.dutyDay.hashCode());
        result = prime * result + ((this.checkInTimestamp == null) ? 0 : this.checkInTimestamp.hashCode());
        result = prime * result + ((this.checkInHub == null) ? 0 : this.checkInHub.hashCode());
        result = prime * result + ((this.vehicleHandoverEpochs == null) ? 0 : this.vehicleHandoverEpochs.hashCode());
        result = prime * result + ((this.officialDutyStartTimestamp == null) ? 0 : this.officialDutyStartTimestamp.hashCode());
        result = prime * result + ((this.totalPreOvertimeDuration == null) ? 0 : this.totalPreOvertimeDuration.hashCode());
        result = prime * result + ((this.totalPostOvertimeDuration == null) ? 0 : this.totalPostOvertimeDuration.hashCode());
        result = prime * result + ((this.preOvertimeEarnings == null) ? 0 : this.preOvertimeEarnings.hashCode());
        result = prime * result + ((this.postOvertimeEarnings == null) ? 0 : this.postOvertimeEarnings.hashCode());
        result = prime * result + ((this.slot == null) ? 0 : this.slot.hashCode());
        result = prime * result + ((this.slotWisePayoutId == null) ? 0 : this.slotWisePayoutId.hashCode());
        result = prime * result + ((this.attendanceState == null) ? 0 : this.attendanceState.hashCode());
        result = prime * result + ((this.otherFlags == null) ? 0 : this.otherFlags.hashCode());
        result = prime * result + ((this.totalPlannedMbgDuration == null) ? 0 : this.totalPlannedMbgDuration.hashCode());
        result = prime * result + ((this.totalActualMbgDuration == null) ? 0 : this.totalActualMbgDuration.hashCode());
        result = prime * result + ((this.totalPaidMbgDuration == null) ? 0 : this.totalPaidMbgDuration.hashCode());
        result = prime * result + ((this.totalActualSupplyDuration == null) ? 0 : this.totalActualSupplyDuration.hashCode());
        result = prime * result + ((this.totalPaidSupplyDuration == null) ? 0 : this.totalPaidSupplyDuration.hashCode());
        result = prime * result + ((this.totalEarlyDutyStartDuration == null) ? 0 : this.totalEarlyDutyStartDuration.hashCode());
        result = prime * result + ((this.totalLateDutyStartDuration == null) ? 0 : this.totalLateDutyStartDuration.hashCode());
        result = prime * result + ((this.totalEarlyDutyEndDuration == null) ? 0 : this.totalEarlyDutyEndDuration.hashCode());
        result = prime * result + ((this.totalLateDutyEndDuration == null) ? 0 : this.totalLateDutyEndDuration.hashCode());
        result = prime * result + ((this.totalPaidBuffer == null) ? 0 : this.totalPaidBuffer.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("LeaseDriverDailyStats (");

        sb.append(id);
        sb.append(", ").append(leaseId);
        sb.append(", ").append(driverId);
        sb.append(", ").append(recordDate);
        sb.append(", ").append(leaseDriverDailyStatsState);
        sb.append(", ").append(totalOnlineDuration);
        sb.append(", ").append(totalPausedDuration);
        sb.append(", ").append(totalDutyDuration);
        sb.append(", ").append(totalTripDuration);
        sb.append(", ").append(checkinCheckoutIds);
        sb.append(", ").append(rideIds);
        sb.append(", ").append(tripsCount);
        sb.append(", ").append(vehiclesCount);
        sb.append(", ").append(vehiclesNumber);
        sb.append(", ").append(sumOfFeedback);
        sb.append(", ").append(numberOfRatedRides);
        sb.append(", ").append(tripEarnings);
        sb.append(", ").append(estimatedLeaseCost);
        sb.append(", ").append(actualLeaseCost);
        sb.append(", ").append(estimatedMinimumGuarantee);
        sb.append(", ").append(actualMinimumGuarantee);
        sb.append(", ").append(driverEarnings);
        sb.append(", ").append(leaseCostPenalty);
        sb.append(", ").append(leaseCostPenaltyBreakup);
        sb.append(", ").append(minimumGuaranteePenalty);
        sb.append(", ").append(minimumGuaranteePenaltyBreakup);
        sb.append(", ").append(dutyStartTimestamp);
        sb.append(", ").append(dutyEndTimestamp);
        sb.append(", ").append(isDriverPresent);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(commission);
        sb.append(", ").append(gst);
        sb.append(", ").append(driverTakeHome);
        sb.append(", ").append(totalOvertimeDuration);
        sb.append(", ").append(overtimeEarnings);
        sb.append(", ").append(hasOverlappingHappened);
        sb.append(", ").append(overlappedId);
        sb.append(", ").append(officialDutyEndTimestamp);
        sb.append(", ").append(latestHubReachTimestamp);
        sb.append(", ").append(payoutId);
        sb.append(", ").append(totalPausedBreakupDuration);
        sb.append(", ").append(dutyDay);
        sb.append(", ").append(checkInTimestamp);
        sb.append(", ").append(checkInHub);
        sb.append(", ").append(vehicleHandoverEpochs);
        sb.append(", ").append(officialDutyStartTimestamp);
        sb.append(", ").append(totalPreOvertimeDuration);
        sb.append(", ").append(totalPostOvertimeDuration);
        sb.append(", ").append(preOvertimeEarnings);
        sb.append(", ").append(postOvertimeEarnings);
        sb.append(", ").append(slot);
        sb.append(", ").append(slotWisePayoutId);
        sb.append(", ").append(attendanceState);
        sb.append(", ").append(otherFlags);
        sb.append(", ").append(totalPlannedMbgDuration);
        sb.append(", ").append(totalActualMbgDuration);
        sb.append(", ").append(totalPaidMbgDuration);
        sb.append(", ").append(totalActualSupplyDuration);
        sb.append(", ").append(totalPaidSupplyDuration);
        sb.append(", ").append(totalEarlyDutyStartDuration);
        sb.append(", ").append(totalLateDutyStartDuration);
        sb.append(", ").append(totalEarlyDutyEndDuration);
        sb.append(", ").append(totalLateDutyEndDuration);
        sb.append(", ").append(totalPaidBuffer);

        sb.append(")");
        return sb.toString();
    }
}
