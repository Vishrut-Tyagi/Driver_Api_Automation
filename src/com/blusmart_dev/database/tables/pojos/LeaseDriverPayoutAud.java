/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaseDriverPayoutAud implements Serializable {

    private static final long serialVersionUID = 413038250;

    private UInteger   audId;
    private UInteger   id;
    private UInteger   driverId;
    private UInteger   leaseId;
    private String     leaseDriverPayoutState;
    private BigDecimal totalEstimatedLeaseCost;
    private BigDecimal totalActualLeaseCost;
    private BigDecimal totalEstimatedMinimumGuarantee;
    private BigDecimal totalActualMinimumGuarantee;
    private BigDecimal totalDriverEarnings;
    private BigDecimal totalLeaseCostPenalty;
    private BigDecimal totalMinimumGuaranteePenalty;
    private BigDecimal totalCommission;
    private BigDecimal totalGst;
    private BigDecimal totalTripEarnings;
    private BigDecimal totalTripIncentive;
    private BigDecimal totalFeedbackIncentive;
    private BigDecimal totalDriverTakeHome;
    private UInteger   overallOnlineDuration;
    private UInteger   overallPausedDuration;
    private UInteger   overallDutyDuration;
    private UInteger   overallTripDuration;
    private UInteger   totalTrips;
    private UInteger   totalSumOfFeedback;
    private UInteger   totalNumberOfRatedRides;
    private UInteger   totalLateDutyStartCount;
    private UInteger   totalEarlyDutyEndCount;
    private UInteger   totalLateDutyEndCount;
    private UInteger   totalAbsentDays;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private UInteger   overallOvertimeDuration;
    private BigDecimal totalOvertimeEarnings;
    private BigDecimal totalTripEarningIncentive;
    private Byte       leaseAgreementStatus;
    private String     signedLeaseAgreement;
    private UInteger   slot;
    private String     overallPausedBreakupDuration;
    private UInteger   overallPreOvertimeDuration;
    private UInteger   overallPostOvertimeDuration;
    private BigDecimal totalPreOvertimeEarnings;
    private BigDecimal totalPostOvertimeEarnings;
    private UInteger   overallPlannedMbgDuration;
    private UInteger   overallActualMbgDuration;
    private UInteger   overallPaidMbgDuration;
    private UInteger   overallActualSupplyDuration;
    private UInteger   overallPaidSupplyDuration;
    private UInteger   overallEarlyDutyStartDuration;
    private UInteger   overallLateDutyStartDuration;
    private UInteger   overallEarlyDutyEndDuration;
    private UInteger   overallLateDutyEndDuration;
    private UInteger   overallPaidBuffer;

    public LeaseDriverPayoutAud() {}

    public LeaseDriverPayoutAud(LeaseDriverPayoutAud value) {
        this.audId = value.audId;
        this.id = value.id;
        this.driverId = value.driverId;
        this.leaseId = value.leaseId;
        this.leaseDriverPayoutState = value.leaseDriverPayoutState;
        this.totalEstimatedLeaseCost = value.totalEstimatedLeaseCost;
        this.totalActualLeaseCost = value.totalActualLeaseCost;
        this.totalEstimatedMinimumGuarantee = value.totalEstimatedMinimumGuarantee;
        this.totalActualMinimumGuarantee = value.totalActualMinimumGuarantee;
        this.totalDriverEarnings = value.totalDriverEarnings;
        this.totalLeaseCostPenalty = value.totalLeaseCostPenalty;
        this.totalMinimumGuaranteePenalty = value.totalMinimumGuaranteePenalty;
        this.totalCommission = value.totalCommission;
        this.totalGst = value.totalGst;
        this.totalTripEarnings = value.totalTripEarnings;
        this.totalTripIncentive = value.totalTripIncentive;
        this.totalFeedbackIncentive = value.totalFeedbackIncentive;
        this.totalDriverTakeHome = value.totalDriverTakeHome;
        this.overallOnlineDuration = value.overallOnlineDuration;
        this.overallPausedDuration = value.overallPausedDuration;
        this.overallDutyDuration = value.overallDutyDuration;
        this.overallTripDuration = value.overallTripDuration;
        this.totalTrips = value.totalTrips;
        this.totalSumOfFeedback = value.totalSumOfFeedback;
        this.totalNumberOfRatedRides = value.totalNumberOfRatedRides;
        this.totalLateDutyStartCount = value.totalLateDutyStartCount;
        this.totalEarlyDutyEndCount = value.totalEarlyDutyEndCount;
        this.totalLateDutyEndCount = value.totalLateDutyEndCount;
        this.totalAbsentDays = value.totalAbsentDays;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.overallOvertimeDuration = value.overallOvertimeDuration;
        this.totalOvertimeEarnings = value.totalOvertimeEarnings;
        this.totalTripEarningIncentive = value.totalTripEarningIncentive;
        this.leaseAgreementStatus = value.leaseAgreementStatus;
        this.signedLeaseAgreement = value.signedLeaseAgreement;
        this.slot = value.slot;
        this.overallPausedBreakupDuration = value.overallPausedBreakupDuration;
        this.overallPreOvertimeDuration = value.overallPreOvertimeDuration;
        this.overallPostOvertimeDuration = value.overallPostOvertimeDuration;
        this.totalPreOvertimeEarnings = value.totalPreOvertimeEarnings;
        this.totalPostOvertimeEarnings = value.totalPostOvertimeEarnings;
        this.overallPlannedMbgDuration = value.overallPlannedMbgDuration;
        this.overallActualMbgDuration = value.overallActualMbgDuration;
        this.overallPaidMbgDuration = value.overallPaidMbgDuration;
        this.overallActualSupplyDuration = value.overallActualSupplyDuration;
        this.overallPaidSupplyDuration = value.overallPaidSupplyDuration;
        this.overallEarlyDutyStartDuration = value.overallEarlyDutyStartDuration;
        this.overallLateDutyStartDuration = value.overallLateDutyStartDuration;
        this.overallEarlyDutyEndDuration = value.overallEarlyDutyEndDuration;
        this.overallLateDutyEndDuration = value.overallLateDutyEndDuration;
        this.overallPaidBuffer = value.overallPaidBuffer;
    }

    public LeaseDriverPayoutAud(
        UInteger   audId,
        UInteger   id,
        UInteger   driverId,
        UInteger   leaseId,
        String     leaseDriverPayoutState,
        BigDecimal totalEstimatedLeaseCost,
        BigDecimal totalActualLeaseCost,
        BigDecimal totalEstimatedMinimumGuarantee,
        BigDecimal totalActualMinimumGuarantee,
        BigDecimal totalDriverEarnings,
        BigDecimal totalLeaseCostPenalty,
        BigDecimal totalMinimumGuaranteePenalty,
        BigDecimal totalCommission,
        BigDecimal totalGst,
        BigDecimal totalTripEarnings,
        BigDecimal totalTripIncentive,
        BigDecimal totalFeedbackIncentive,
        BigDecimal totalDriverTakeHome,
        UInteger   overallOnlineDuration,
        UInteger   overallPausedDuration,
        UInteger   overallDutyDuration,
        UInteger   overallTripDuration,
        UInteger   totalTrips,
        UInteger   totalSumOfFeedback,
        UInteger   totalNumberOfRatedRides,
        UInteger   totalLateDutyStartCount,
        UInteger   totalEarlyDutyEndCount,
        UInteger   totalLateDutyEndCount,
        UInteger   totalAbsentDays,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        UInteger   overallOvertimeDuration,
        BigDecimal totalOvertimeEarnings,
        BigDecimal totalTripEarningIncentive,
        Byte       leaseAgreementStatus,
        String     signedLeaseAgreement,
        UInteger   slot,
        String     overallPausedBreakupDuration,
        UInteger   overallPreOvertimeDuration,
        UInteger   overallPostOvertimeDuration,
        BigDecimal totalPreOvertimeEarnings,
        BigDecimal totalPostOvertimeEarnings,
        UInteger   overallPlannedMbgDuration,
        UInteger   overallActualMbgDuration,
        UInteger   overallPaidMbgDuration,
        UInteger   overallActualSupplyDuration,
        UInteger   overallPaidSupplyDuration,
        UInteger   overallEarlyDutyStartDuration,
        UInteger   overallLateDutyStartDuration,
        UInteger   overallEarlyDutyEndDuration,
        UInteger   overallLateDutyEndDuration,
        UInteger   overallPaidBuffer
    ) {
        this.audId = audId;
        this.id = id;
        this.driverId = driverId;
        this.leaseId = leaseId;
        this.leaseDriverPayoutState = leaseDriverPayoutState;
        this.totalEstimatedLeaseCost = totalEstimatedLeaseCost;
        this.totalActualLeaseCost = totalActualLeaseCost;
        this.totalEstimatedMinimumGuarantee = totalEstimatedMinimumGuarantee;
        this.totalActualMinimumGuarantee = totalActualMinimumGuarantee;
        this.totalDriverEarnings = totalDriverEarnings;
        this.totalLeaseCostPenalty = totalLeaseCostPenalty;
        this.totalMinimumGuaranteePenalty = totalMinimumGuaranteePenalty;
        this.totalCommission = totalCommission;
        this.totalGst = totalGst;
        this.totalTripEarnings = totalTripEarnings;
        this.totalTripIncentive = totalTripIncentive;
        this.totalFeedbackIncentive = totalFeedbackIncentive;
        this.totalDriverTakeHome = totalDriverTakeHome;
        this.overallOnlineDuration = overallOnlineDuration;
        this.overallPausedDuration = overallPausedDuration;
        this.overallDutyDuration = overallDutyDuration;
        this.overallTripDuration = overallTripDuration;
        this.totalTrips = totalTrips;
        this.totalSumOfFeedback = totalSumOfFeedback;
        this.totalNumberOfRatedRides = totalNumberOfRatedRides;
        this.totalLateDutyStartCount = totalLateDutyStartCount;
        this.totalEarlyDutyEndCount = totalEarlyDutyEndCount;
        this.totalLateDutyEndCount = totalLateDutyEndCount;
        this.totalAbsentDays = totalAbsentDays;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.overallOvertimeDuration = overallOvertimeDuration;
        this.totalOvertimeEarnings = totalOvertimeEarnings;
        this.totalTripEarningIncentive = totalTripEarningIncentive;
        this.leaseAgreementStatus = leaseAgreementStatus;
        this.signedLeaseAgreement = signedLeaseAgreement;
        this.slot = slot;
        this.overallPausedBreakupDuration = overallPausedBreakupDuration;
        this.overallPreOvertimeDuration = overallPreOvertimeDuration;
        this.overallPostOvertimeDuration = overallPostOvertimeDuration;
        this.totalPreOvertimeEarnings = totalPreOvertimeEarnings;
        this.totalPostOvertimeEarnings = totalPostOvertimeEarnings;
        this.overallPlannedMbgDuration = overallPlannedMbgDuration;
        this.overallActualMbgDuration = overallActualMbgDuration;
        this.overallPaidMbgDuration = overallPaidMbgDuration;
        this.overallActualSupplyDuration = overallActualSupplyDuration;
        this.overallPaidSupplyDuration = overallPaidSupplyDuration;
        this.overallEarlyDutyStartDuration = overallEarlyDutyStartDuration;
        this.overallLateDutyStartDuration = overallLateDutyStartDuration;
        this.overallEarlyDutyEndDuration = overallEarlyDutyEndDuration;
        this.overallLateDutyEndDuration = overallLateDutyEndDuration;
        this.overallPaidBuffer = overallPaidBuffer;
    }

    public UInteger getAudId() {
        return this.audId;
    }

    public LeaseDriverPayoutAud setAudId(UInteger audId) {
        this.audId = audId;
        return this;
    }

    public UInteger getId() {
        return this.id;
    }

    public LeaseDriverPayoutAud setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public LeaseDriverPayoutAud setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public UInteger getLeaseId() {
        return this.leaseId;
    }

    public LeaseDriverPayoutAud setLeaseId(UInteger leaseId) {
        this.leaseId = leaseId;
        return this;
    }

    public String getLeaseDriverPayoutState() {
        return this.leaseDriverPayoutState;
    }

    public LeaseDriverPayoutAud setLeaseDriverPayoutState(String leaseDriverPayoutState) {
        this.leaseDriverPayoutState = leaseDriverPayoutState;
        return this;
    }

    public BigDecimal getTotalEstimatedLeaseCost() {
        return this.totalEstimatedLeaseCost;
    }

    public LeaseDriverPayoutAud setTotalEstimatedLeaseCost(BigDecimal totalEstimatedLeaseCost) {
        this.totalEstimatedLeaseCost = totalEstimatedLeaseCost;
        return this;
    }

    public BigDecimal getTotalActualLeaseCost() {
        return this.totalActualLeaseCost;
    }

    public LeaseDriverPayoutAud setTotalActualLeaseCost(BigDecimal totalActualLeaseCost) {
        this.totalActualLeaseCost = totalActualLeaseCost;
        return this;
    }

    public BigDecimal getTotalEstimatedMinimumGuarantee() {
        return this.totalEstimatedMinimumGuarantee;
    }

    public LeaseDriverPayoutAud setTotalEstimatedMinimumGuarantee(BigDecimal totalEstimatedMinimumGuarantee) {
        this.totalEstimatedMinimumGuarantee = totalEstimatedMinimumGuarantee;
        return this;
    }

    public BigDecimal getTotalActualMinimumGuarantee() {
        return this.totalActualMinimumGuarantee;
    }

    public LeaseDriverPayoutAud setTotalActualMinimumGuarantee(BigDecimal totalActualMinimumGuarantee) {
        this.totalActualMinimumGuarantee = totalActualMinimumGuarantee;
        return this;
    }

    public BigDecimal getTotalDriverEarnings() {
        return this.totalDriverEarnings;
    }

    public LeaseDriverPayoutAud setTotalDriverEarnings(BigDecimal totalDriverEarnings) {
        this.totalDriverEarnings = totalDriverEarnings;
        return this;
    }

    public BigDecimal getTotalLeaseCostPenalty() {
        return this.totalLeaseCostPenalty;
    }

    public LeaseDriverPayoutAud setTotalLeaseCostPenalty(BigDecimal totalLeaseCostPenalty) {
        this.totalLeaseCostPenalty = totalLeaseCostPenalty;
        return this;
    }

    public BigDecimal getTotalMinimumGuaranteePenalty() {
        return this.totalMinimumGuaranteePenalty;
    }

    public LeaseDriverPayoutAud setTotalMinimumGuaranteePenalty(BigDecimal totalMinimumGuaranteePenalty) {
        this.totalMinimumGuaranteePenalty = totalMinimumGuaranteePenalty;
        return this;
    }

    public BigDecimal getTotalCommission() {
        return this.totalCommission;
    }

    public LeaseDriverPayoutAud setTotalCommission(BigDecimal totalCommission) {
        this.totalCommission = totalCommission;
        return this;
    }

    public BigDecimal getTotalGst() {
        return this.totalGst;
    }

    public LeaseDriverPayoutAud setTotalGst(BigDecimal totalGst) {
        this.totalGst = totalGst;
        return this;
    }

    public BigDecimal getTotalTripEarnings() {
        return this.totalTripEarnings;
    }

    public LeaseDriverPayoutAud setTotalTripEarnings(BigDecimal totalTripEarnings) {
        this.totalTripEarnings = totalTripEarnings;
        return this;
    }

    public BigDecimal getTotalTripIncentive() {
        return this.totalTripIncentive;
    }

    public LeaseDriverPayoutAud setTotalTripIncentive(BigDecimal totalTripIncentive) {
        this.totalTripIncentive = totalTripIncentive;
        return this;
    }

    public BigDecimal getTotalFeedbackIncentive() {
        return this.totalFeedbackIncentive;
    }

    public LeaseDriverPayoutAud setTotalFeedbackIncentive(BigDecimal totalFeedbackIncentive) {
        this.totalFeedbackIncentive = totalFeedbackIncentive;
        return this;
    }

    public BigDecimal getTotalDriverTakeHome() {
        return this.totalDriverTakeHome;
    }

    public LeaseDriverPayoutAud setTotalDriverTakeHome(BigDecimal totalDriverTakeHome) {
        this.totalDriverTakeHome = totalDriverTakeHome;
        return this;
    }

    public UInteger getOverallOnlineDuration() {
        return this.overallOnlineDuration;
    }

    public LeaseDriverPayoutAud setOverallOnlineDuration(UInteger overallOnlineDuration) {
        this.overallOnlineDuration = overallOnlineDuration;
        return this;
    }

    public UInteger getOverallPausedDuration() {
        return this.overallPausedDuration;
    }

    public LeaseDriverPayoutAud setOverallPausedDuration(UInteger overallPausedDuration) {
        this.overallPausedDuration = overallPausedDuration;
        return this;
    }

    public UInteger getOverallDutyDuration() {
        return this.overallDutyDuration;
    }

    public LeaseDriverPayoutAud setOverallDutyDuration(UInteger overallDutyDuration) {
        this.overallDutyDuration = overallDutyDuration;
        return this;
    }

    public UInteger getOverallTripDuration() {
        return this.overallTripDuration;
    }

    public LeaseDriverPayoutAud setOverallTripDuration(UInteger overallTripDuration) {
        this.overallTripDuration = overallTripDuration;
        return this;
    }

    public UInteger getTotalTrips() {
        return this.totalTrips;
    }

    public LeaseDriverPayoutAud setTotalTrips(UInteger totalTrips) {
        this.totalTrips = totalTrips;
        return this;
    }

    public UInteger getTotalSumOfFeedback() {
        return this.totalSumOfFeedback;
    }

    public LeaseDriverPayoutAud setTotalSumOfFeedback(UInteger totalSumOfFeedback) {
        this.totalSumOfFeedback = totalSumOfFeedback;
        return this;
    }

    public UInteger getTotalNumberOfRatedRides() {
        return this.totalNumberOfRatedRides;
    }

    public LeaseDriverPayoutAud setTotalNumberOfRatedRides(UInteger totalNumberOfRatedRides) {
        this.totalNumberOfRatedRides = totalNumberOfRatedRides;
        return this;
    }

    public UInteger getTotalLateDutyStartCount() {
        return this.totalLateDutyStartCount;
    }

    public LeaseDriverPayoutAud setTotalLateDutyStartCount(UInteger totalLateDutyStartCount) {
        this.totalLateDutyStartCount = totalLateDutyStartCount;
        return this;
    }

    public UInteger getTotalEarlyDutyEndCount() {
        return this.totalEarlyDutyEndCount;
    }

    public LeaseDriverPayoutAud setTotalEarlyDutyEndCount(UInteger totalEarlyDutyEndCount) {
        this.totalEarlyDutyEndCount = totalEarlyDutyEndCount;
        return this;
    }

    public UInteger getTotalLateDutyEndCount() {
        return this.totalLateDutyEndCount;
    }

    public LeaseDriverPayoutAud setTotalLateDutyEndCount(UInteger totalLateDutyEndCount) {
        this.totalLateDutyEndCount = totalLateDutyEndCount;
        return this;
    }

    public UInteger getTotalAbsentDays() {
        return this.totalAbsentDays;
    }

    public LeaseDriverPayoutAud setTotalAbsentDays(UInteger totalAbsentDays) {
        this.totalAbsentDays = totalAbsentDays;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public LeaseDriverPayoutAud setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public LeaseDriverPayoutAud setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public LeaseDriverPayoutAud setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public LeaseDriverPayoutAud setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public LeaseDriverPayoutAud setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public UInteger getOverallOvertimeDuration() {
        return this.overallOvertimeDuration;
    }

    public LeaseDriverPayoutAud setOverallOvertimeDuration(UInteger overallOvertimeDuration) {
        this.overallOvertimeDuration = overallOvertimeDuration;
        return this;
    }

    public BigDecimal getTotalOvertimeEarnings() {
        return this.totalOvertimeEarnings;
    }

    public LeaseDriverPayoutAud setTotalOvertimeEarnings(BigDecimal totalOvertimeEarnings) {
        this.totalOvertimeEarnings = totalOvertimeEarnings;
        return this;
    }

    public BigDecimal getTotalTripEarningIncentive() {
        return this.totalTripEarningIncentive;
    }

    public LeaseDriverPayoutAud setTotalTripEarningIncentive(BigDecimal totalTripEarningIncentive) {
        this.totalTripEarningIncentive = totalTripEarningIncentive;
        return this;
    }

    public Byte getLeaseAgreementStatus() {
        return this.leaseAgreementStatus;
    }

    public LeaseDriverPayoutAud setLeaseAgreementStatus(Byte leaseAgreementStatus) {
        this.leaseAgreementStatus = leaseAgreementStatus;
        return this;
    }

    public String getSignedLeaseAgreement() {
        return this.signedLeaseAgreement;
    }

    public LeaseDriverPayoutAud setSignedLeaseAgreement(String signedLeaseAgreement) {
        this.signedLeaseAgreement = signedLeaseAgreement;
        return this;
    }

    public UInteger getSlot() {
        return this.slot;
    }

    public LeaseDriverPayoutAud setSlot(UInteger slot) {
        this.slot = slot;
        return this;
    }

    public String getOverallPausedBreakupDuration() {
        return this.overallPausedBreakupDuration;
    }

    public LeaseDriverPayoutAud setOverallPausedBreakupDuration(String overallPausedBreakupDuration) {
        this.overallPausedBreakupDuration = overallPausedBreakupDuration;
        return this;
    }

    public UInteger getOverallPreOvertimeDuration() {
        return this.overallPreOvertimeDuration;
    }

    public LeaseDriverPayoutAud setOverallPreOvertimeDuration(UInteger overallPreOvertimeDuration) {
        this.overallPreOvertimeDuration = overallPreOvertimeDuration;
        return this;
    }

    public UInteger getOverallPostOvertimeDuration() {
        return this.overallPostOvertimeDuration;
    }

    public LeaseDriverPayoutAud setOverallPostOvertimeDuration(UInteger overallPostOvertimeDuration) {
        this.overallPostOvertimeDuration = overallPostOvertimeDuration;
        return this;
    }

    public BigDecimal getTotalPreOvertimeEarnings() {
        return this.totalPreOvertimeEarnings;
    }

    public LeaseDriverPayoutAud setTotalPreOvertimeEarnings(BigDecimal totalPreOvertimeEarnings) {
        this.totalPreOvertimeEarnings = totalPreOvertimeEarnings;
        return this;
    }

    public BigDecimal getTotalPostOvertimeEarnings() {
        return this.totalPostOvertimeEarnings;
    }

    public LeaseDriverPayoutAud setTotalPostOvertimeEarnings(BigDecimal totalPostOvertimeEarnings) {
        this.totalPostOvertimeEarnings = totalPostOvertimeEarnings;
        return this;
    }

    public UInteger getOverallPlannedMbgDuration() {
        return this.overallPlannedMbgDuration;
    }

    public LeaseDriverPayoutAud setOverallPlannedMbgDuration(UInteger overallPlannedMbgDuration) {
        this.overallPlannedMbgDuration = overallPlannedMbgDuration;
        return this;
    }

    public UInteger getOverallActualMbgDuration() {
        return this.overallActualMbgDuration;
    }

    public LeaseDriverPayoutAud setOverallActualMbgDuration(UInteger overallActualMbgDuration) {
        this.overallActualMbgDuration = overallActualMbgDuration;
        return this;
    }

    public UInteger getOverallPaidMbgDuration() {
        return this.overallPaidMbgDuration;
    }

    public LeaseDriverPayoutAud setOverallPaidMbgDuration(UInteger overallPaidMbgDuration) {
        this.overallPaidMbgDuration = overallPaidMbgDuration;
        return this;
    }

    public UInteger getOverallActualSupplyDuration() {
        return this.overallActualSupplyDuration;
    }

    public LeaseDriverPayoutAud setOverallActualSupplyDuration(UInteger overallActualSupplyDuration) {
        this.overallActualSupplyDuration = overallActualSupplyDuration;
        return this;
    }

    public UInteger getOverallPaidSupplyDuration() {
        return this.overallPaidSupplyDuration;
    }

    public LeaseDriverPayoutAud setOverallPaidSupplyDuration(UInteger overallPaidSupplyDuration) {
        this.overallPaidSupplyDuration = overallPaidSupplyDuration;
        return this;
    }

    public UInteger getOverallEarlyDutyStartDuration() {
        return this.overallEarlyDutyStartDuration;
    }

    public LeaseDriverPayoutAud setOverallEarlyDutyStartDuration(UInteger overallEarlyDutyStartDuration) {
        this.overallEarlyDutyStartDuration = overallEarlyDutyStartDuration;
        return this;
    }

    public UInteger getOverallLateDutyStartDuration() {
        return this.overallLateDutyStartDuration;
    }

    public LeaseDriverPayoutAud setOverallLateDutyStartDuration(UInteger overallLateDutyStartDuration) {
        this.overallLateDutyStartDuration = overallLateDutyStartDuration;
        return this;
    }

    public UInteger getOverallEarlyDutyEndDuration() {
        return this.overallEarlyDutyEndDuration;
    }

    public LeaseDriverPayoutAud setOverallEarlyDutyEndDuration(UInteger overallEarlyDutyEndDuration) {
        this.overallEarlyDutyEndDuration = overallEarlyDutyEndDuration;
        return this;
    }

    public UInteger getOverallLateDutyEndDuration() {
        return this.overallLateDutyEndDuration;
    }

    public LeaseDriverPayoutAud setOverallLateDutyEndDuration(UInteger overallLateDutyEndDuration) {
        this.overallLateDutyEndDuration = overallLateDutyEndDuration;
        return this;
    }

    public UInteger getOverallPaidBuffer() {
        return this.overallPaidBuffer;
    }

    public LeaseDriverPayoutAud setOverallPaidBuffer(UInteger overallPaidBuffer) {
        this.overallPaidBuffer = overallPaidBuffer;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LeaseDriverPayoutAud other = (LeaseDriverPayoutAud) obj;
        if (audId == null) {
            if (other.audId != null)
                return false;
        }
        else if (!audId.equals(other.audId))
            return false;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (leaseId == null) {
            if (other.leaseId != null)
                return false;
        }
        else if (!leaseId.equals(other.leaseId))
            return false;
        if (leaseDriverPayoutState == null) {
            if (other.leaseDriverPayoutState != null)
                return false;
        }
        else if (!leaseDriverPayoutState.equals(other.leaseDriverPayoutState))
            return false;
        if (totalEstimatedLeaseCost == null) {
            if (other.totalEstimatedLeaseCost != null)
                return false;
        }
        else if (!totalEstimatedLeaseCost.equals(other.totalEstimatedLeaseCost))
            return false;
        if (totalActualLeaseCost == null) {
            if (other.totalActualLeaseCost != null)
                return false;
        }
        else if (!totalActualLeaseCost.equals(other.totalActualLeaseCost))
            return false;
        if (totalEstimatedMinimumGuarantee == null) {
            if (other.totalEstimatedMinimumGuarantee != null)
                return false;
        }
        else if (!totalEstimatedMinimumGuarantee.equals(other.totalEstimatedMinimumGuarantee))
            return false;
        if (totalActualMinimumGuarantee == null) {
            if (other.totalActualMinimumGuarantee != null)
                return false;
        }
        else if (!totalActualMinimumGuarantee.equals(other.totalActualMinimumGuarantee))
            return false;
        if (totalDriverEarnings == null) {
            if (other.totalDriverEarnings != null)
                return false;
        }
        else if (!totalDriverEarnings.equals(other.totalDriverEarnings))
            return false;
        if (totalLeaseCostPenalty == null) {
            if (other.totalLeaseCostPenalty != null)
                return false;
        }
        else if (!totalLeaseCostPenalty.equals(other.totalLeaseCostPenalty))
            return false;
        if (totalMinimumGuaranteePenalty == null) {
            if (other.totalMinimumGuaranteePenalty != null)
                return false;
        }
        else if (!totalMinimumGuaranteePenalty.equals(other.totalMinimumGuaranteePenalty))
            return false;
        if (totalCommission == null) {
            if (other.totalCommission != null)
                return false;
        }
        else if (!totalCommission.equals(other.totalCommission))
            return false;
        if (totalGst == null) {
            if (other.totalGst != null)
                return false;
        }
        else if (!totalGst.equals(other.totalGst))
            return false;
        if (totalTripEarnings == null) {
            if (other.totalTripEarnings != null)
                return false;
        }
        else if (!totalTripEarnings.equals(other.totalTripEarnings))
            return false;
        if (totalTripIncentive == null) {
            if (other.totalTripIncentive != null)
                return false;
        }
        else if (!totalTripIncentive.equals(other.totalTripIncentive))
            return false;
        if (totalFeedbackIncentive == null) {
            if (other.totalFeedbackIncentive != null)
                return false;
        }
        else if (!totalFeedbackIncentive.equals(other.totalFeedbackIncentive))
            return false;
        if (totalDriverTakeHome == null) {
            if (other.totalDriverTakeHome != null)
                return false;
        }
        else if (!totalDriverTakeHome.equals(other.totalDriverTakeHome))
            return false;
        if (overallOnlineDuration == null) {
            if (other.overallOnlineDuration != null)
                return false;
        }
        else if (!overallOnlineDuration.equals(other.overallOnlineDuration))
            return false;
        if (overallPausedDuration == null) {
            if (other.overallPausedDuration != null)
                return false;
        }
        else if (!overallPausedDuration.equals(other.overallPausedDuration))
            return false;
        if (overallDutyDuration == null) {
            if (other.overallDutyDuration != null)
                return false;
        }
        else if (!overallDutyDuration.equals(other.overallDutyDuration))
            return false;
        if (overallTripDuration == null) {
            if (other.overallTripDuration != null)
                return false;
        }
        else if (!overallTripDuration.equals(other.overallTripDuration))
            return false;
        if (totalTrips == null) {
            if (other.totalTrips != null)
                return false;
        }
        else if (!totalTrips.equals(other.totalTrips))
            return false;
        if (totalSumOfFeedback == null) {
            if (other.totalSumOfFeedback != null)
                return false;
        }
        else if (!totalSumOfFeedback.equals(other.totalSumOfFeedback))
            return false;
        if (totalNumberOfRatedRides == null) {
            if (other.totalNumberOfRatedRides != null)
                return false;
        }
        else if (!totalNumberOfRatedRides.equals(other.totalNumberOfRatedRides))
            return false;
        if (totalLateDutyStartCount == null) {
            if (other.totalLateDutyStartCount != null)
                return false;
        }
        else if (!totalLateDutyStartCount.equals(other.totalLateDutyStartCount))
            return false;
        if (totalEarlyDutyEndCount == null) {
            if (other.totalEarlyDutyEndCount != null)
                return false;
        }
        else if (!totalEarlyDutyEndCount.equals(other.totalEarlyDutyEndCount))
            return false;
        if (totalLateDutyEndCount == null) {
            if (other.totalLateDutyEndCount != null)
                return false;
        }
        else if (!totalLateDutyEndCount.equals(other.totalLateDutyEndCount))
            return false;
        if (totalAbsentDays == null) {
            if (other.totalAbsentDays != null)
                return false;
        }
        else if (!totalAbsentDays.equals(other.totalAbsentDays))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (overallOvertimeDuration == null) {
            if (other.overallOvertimeDuration != null)
                return false;
        }
        else if (!overallOvertimeDuration.equals(other.overallOvertimeDuration))
            return false;
        if (totalOvertimeEarnings == null) {
            if (other.totalOvertimeEarnings != null)
                return false;
        }
        else if (!totalOvertimeEarnings.equals(other.totalOvertimeEarnings))
            return false;
        if (totalTripEarningIncentive == null) {
            if (other.totalTripEarningIncentive != null)
                return false;
        }
        else if (!totalTripEarningIncentive.equals(other.totalTripEarningIncentive))
            return false;
        if (leaseAgreementStatus == null) {
            if (other.leaseAgreementStatus != null)
                return false;
        }
        else if (!leaseAgreementStatus.equals(other.leaseAgreementStatus))
            return false;
        if (signedLeaseAgreement == null) {
            if (other.signedLeaseAgreement != null)
                return false;
        }
        else if (!signedLeaseAgreement.equals(other.signedLeaseAgreement))
            return false;
        if (slot == null) {
            if (other.slot != null)
                return false;
        }
        else if (!slot.equals(other.slot))
            return false;
        if (overallPausedBreakupDuration == null) {
            if (other.overallPausedBreakupDuration != null)
                return false;
        }
        else if (!overallPausedBreakupDuration.equals(other.overallPausedBreakupDuration))
            return false;
        if (overallPreOvertimeDuration == null) {
            if (other.overallPreOvertimeDuration != null)
                return false;
        }
        else if (!overallPreOvertimeDuration.equals(other.overallPreOvertimeDuration))
            return false;
        if (overallPostOvertimeDuration == null) {
            if (other.overallPostOvertimeDuration != null)
                return false;
        }
        else if (!overallPostOvertimeDuration.equals(other.overallPostOvertimeDuration))
            return false;
        if (totalPreOvertimeEarnings == null) {
            if (other.totalPreOvertimeEarnings != null)
                return false;
        }
        else if (!totalPreOvertimeEarnings.equals(other.totalPreOvertimeEarnings))
            return false;
        if (totalPostOvertimeEarnings == null) {
            if (other.totalPostOvertimeEarnings != null)
                return false;
        }
        else if (!totalPostOvertimeEarnings.equals(other.totalPostOvertimeEarnings))
            return false;
        if (overallPlannedMbgDuration == null) {
            if (other.overallPlannedMbgDuration != null)
                return false;
        }
        else if (!overallPlannedMbgDuration.equals(other.overallPlannedMbgDuration))
            return false;
        if (overallActualMbgDuration == null) {
            if (other.overallActualMbgDuration != null)
                return false;
        }
        else if (!overallActualMbgDuration.equals(other.overallActualMbgDuration))
            return false;
        if (overallPaidMbgDuration == null) {
            if (other.overallPaidMbgDuration != null)
                return false;
        }
        else if (!overallPaidMbgDuration.equals(other.overallPaidMbgDuration))
            return false;
        if (overallActualSupplyDuration == null) {
            if (other.overallActualSupplyDuration != null)
                return false;
        }
        else if (!overallActualSupplyDuration.equals(other.overallActualSupplyDuration))
            return false;
        if (overallPaidSupplyDuration == null) {
            if (other.overallPaidSupplyDuration != null)
                return false;
        }
        else if (!overallPaidSupplyDuration.equals(other.overallPaidSupplyDuration))
            return false;
        if (overallEarlyDutyStartDuration == null) {
            if (other.overallEarlyDutyStartDuration != null)
                return false;
        }
        else if (!overallEarlyDutyStartDuration.equals(other.overallEarlyDutyStartDuration))
            return false;
        if (overallLateDutyStartDuration == null) {
            if (other.overallLateDutyStartDuration != null)
                return false;
        }
        else if (!overallLateDutyStartDuration.equals(other.overallLateDutyStartDuration))
            return false;
        if (overallEarlyDutyEndDuration == null) {
            if (other.overallEarlyDutyEndDuration != null)
                return false;
        }
        else if (!overallEarlyDutyEndDuration.equals(other.overallEarlyDutyEndDuration))
            return false;
        if (overallLateDutyEndDuration == null) {
            if (other.overallLateDutyEndDuration != null)
                return false;
        }
        else if (!overallLateDutyEndDuration.equals(other.overallLateDutyEndDuration))
            return false;
        if (overallPaidBuffer == null) {
            if (other.overallPaidBuffer != null)
                return false;
        }
        else if (!overallPaidBuffer.equals(other.overallPaidBuffer))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.audId == null) ? 0 : this.audId.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.leaseId == null) ? 0 : this.leaseId.hashCode());
        result = prime * result + ((this.leaseDriverPayoutState == null) ? 0 : this.leaseDriverPayoutState.hashCode());
        result = prime * result + ((this.totalEstimatedLeaseCost == null) ? 0 : this.totalEstimatedLeaseCost.hashCode());
        result = prime * result + ((this.totalActualLeaseCost == null) ? 0 : this.totalActualLeaseCost.hashCode());
        result = prime * result + ((this.totalEstimatedMinimumGuarantee == null) ? 0 : this.totalEstimatedMinimumGuarantee.hashCode());
        result = prime * result + ((this.totalActualMinimumGuarantee == null) ? 0 : this.totalActualMinimumGuarantee.hashCode());
        result = prime * result + ((this.totalDriverEarnings == null) ? 0 : this.totalDriverEarnings.hashCode());
        result = prime * result + ((this.totalLeaseCostPenalty == null) ? 0 : this.totalLeaseCostPenalty.hashCode());
        result = prime * result + ((this.totalMinimumGuaranteePenalty == null) ? 0 : this.totalMinimumGuaranteePenalty.hashCode());
        result = prime * result + ((this.totalCommission == null) ? 0 : this.totalCommission.hashCode());
        result = prime * result + ((this.totalGst == null) ? 0 : this.totalGst.hashCode());
        result = prime * result + ((this.totalTripEarnings == null) ? 0 : this.totalTripEarnings.hashCode());
        result = prime * result + ((this.totalTripIncentive == null) ? 0 : this.totalTripIncentive.hashCode());
        result = prime * result + ((this.totalFeedbackIncentive == null) ? 0 : this.totalFeedbackIncentive.hashCode());
        result = prime * result + ((this.totalDriverTakeHome == null) ? 0 : this.totalDriverTakeHome.hashCode());
        result = prime * result + ((this.overallOnlineDuration == null) ? 0 : this.overallOnlineDuration.hashCode());
        result = prime * result + ((this.overallPausedDuration == null) ? 0 : this.overallPausedDuration.hashCode());
        result = prime * result + ((this.overallDutyDuration == null) ? 0 : this.overallDutyDuration.hashCode());
        result = prime * result + ((this.overallTripDuration == null) ? 0 : this.overallTripDuration.hashCode());
        result = prime * result + ((this.totalTrips == null) ? 0 : this.totalTrips.hashCode());
        result = prime * result + ((this.totalSumOfFeedback == null) ? 0 : this.totalSumOfFeedback.hashCode());
        result = prime * result + ((this.totalNumberOfRatedRides == null) ? 0 : this.totalNumberOfRatedRides.hashCode());
        result = prime * result + ((this.totalLateDutyStartCount == null) ? 0 : this.totalLateDutyStartCount.hashCode());
        result = prime * result + ((this.totalEarlyDutyEndCount == null) ? 0 : this.totalEarlyDutyEndCount.hashCode());
        result = prime * result + ((this.totalLateDutyEndCount == null) ? 0 : this.totalLateDutyEndCount.hashCode());
        result = prime * result + ((this.totalAbsentDays == null) ? 0 : this.totalAbsentDays.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.overallOvertimeDuration == null) ? 0 : this.overallOvertimeDuration.hashCode());
        result = prime * result + ((this.totalOvertimeEarnings == null) ? 0 : this.totalOvertimeEarnings.hashCode());
        result = prime * result + ((this.totalTripEarningIncentive == null) ? 0 : this.totalTripEarningIncentive.hashCode());
        result = prime * result + ((this.leaseAgreementStatus == null) ? 0 : this.leaseAgreementStatus.hashCode());
        result = prime * result + ((this.signedLeaseAgreement == null) ? 0 : this.signedLeaseAgreement.hashCode());
        result = prime * result + ((this.slot == null) ? 0 : this.slot.hashCode());
        result = prime * result + ((this.overallPausedBreakupDuration == null) ? 0 : this.overallPausedBreakupDuration.hashCode());
        result = prime * result + ((this.overallPreOvertimeDuration == null) ? 0 : this.overallPreOvertimeDuration.hashCode());
        result = prime * result + ((this.overallPostOvertimeDuration == null) ? 0 : this.overallPostOvertimeDuration.hashCode());
        result = prime * result + ((this.totalPreOvertimeEarnings == null) ? 0 : this.totalPreOvertimeEarnings.hashCode());
        result = prime * result + ((this.totalPostOvertimeEarnings == null) ? 0 : this.totalPostOvertimeEarnings.hashCode());
        result = prime * result + ((this.overallPlannedMbgDuration == null) ? 0 : this.overallPlannedMbgDuration.hashCode());
        result = prime * result + ((this.overallActualMbgDuration == null) ? 0 : this.overallActualMbgDuration.hashCode());
        result = prime * result + ((this.overallPaidMbgDuration == null) ? 0 : this.overallPaidMbgDuration.hashCode());
        result = prime * result + ((this.overallActualSupplyDuration == null) ? 0 : this.overallActualSupplyDuration.hashCode());
        result = prime * result + ((this.overallPaidSupplyDuration == null) ? 0 : this.overallPaidSupplyDuration.hashCode());
        result = prime * result + ((this.overallEarlyDutyStartDuration == null) ? 0 : this.overallEarlyDutyStartDuration.hashCode());
        result = prime * result + ((this.overallLateDutyStartDuration == null) ? 0 : this.overallLateDutyStartDuration.hashCode());
        result = prime * result + ((this.overallEarlyDutyEndDuration == null) ? 0 : this.overallEarlyDutyEndDuration.hashCode());
        result = prime * result + ((this.overallLateDutyEndDuration == null) ? 0 : this.overallLateDutyEndDuration.hashCode());
        result = prime * result + ((this.overallPaidBuffer == null) ? 0 : this.overallPaidBuffer.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("LeaseDriverPayoutAud (");

        sb.append(audId);
        sb.append(", ").append(id);
        sb.append(", ").append(driverId);
        sb.append(", ").append(leaseId);
        sb.append(", ").append(leaseDriverPayoutState);
        sb.append(", ").append(totalEstimatedLeaseCost);
        sb.append(", ").append(totalActualLeaseCost);
        sb.append(", ").append(totalEstimatedMinimumGuarantee);
        sb.append(", ").append(totalActualMinimumGuarantee);
        sb.append(", ").append(totalDriverEarnings);
        sb.append(", ").append(totalLeaseCostPenalty);
        sb.append(", ").append(totalMinimumGuaranteePenalty);
        sb.append(", ").append(totalCommission);
        sb.append(", ").append(totalGst);
        sb.append(", ").append(totalTripEarnings);
        sb.append(", ").append(totalTripIncentive);
        sb.append(", ").append(totalFeedbackIncentive);
        sb.append(", ").append(totalDriverTakeHome);
        sb.append(", ").append(overallOnlineDuration);
        sb.append(", ").append(overallPausedDuration);
        sb.append(", ").append(overallDutyDuration);
        sb.append(", ").append(overallTripDuration);
        sb.append(", ").append(totalTrips);
        sb.append(", ").append(totalSumOfFeedback);
        sb.append(", ").append(totalNumberOfRatedRides);
        sb.append(", ").append(totalLateDutyStartCount);
        sb.append(", ").append(totalEarlyDutyEndCount);
        sb.append(", ").append(totalLateDutyEndCount);
        sb.append(", ").append(totalAbsentDays);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(overallOvertimeDuration);
        sb.append(", ").append(totalOvertimeEarnings);
        sb.append(", ").append(totalTripEarningIncentive);
        sb.append(", ").append(leaseAgreementStatus);
        sb.append(", ").append(signedLeaseAgreement);
        sb.append(", ").append(slot);
        sb.append(", ").append(overallPausedBreakupDuration);
        sb.append(", ").append(overallPreOvertimeDuration);
        sb.append(", ").append(overallPostOvertimeDuration);
        sb.append(", ").append(totalPreOvertimeEarnings);
        sb.append(", ").append(totalPostOvertimeEarnings);
        sb.append(", ").append(overallPlannedMbgDuration);
        sb.append(", ").append(overallActualMbgDuration);
        sb.append(", ").append(overallPaidMbgDuration);
        sb.append(", ").append(overallActualSupplyDuration);
        sb.append(", ").append(overallPaidSupplyDuration);
        sb.append(", ").append(overallEarlyDutyStartDuration);
        sb.append(", ").append(overallLateDutyStartDuration);
        sb.append(", ").append(overallEarlyDutyEndDuration);
        sb.append(", ").append(overallLateDutyEndDuration);
        sb.append(", ").append(overallPaidBuffer);

        sb.append(")");
        return sb.toString();
    }
}
