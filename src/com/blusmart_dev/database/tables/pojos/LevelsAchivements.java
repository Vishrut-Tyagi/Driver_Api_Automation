/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LevelsAchivements implements Serializable {

    private static final long serialVersionUID = 1286519138;

    private Integer id;
    private String  achivementName;
    private String  achivementDetails;
    private Byte    isActive;
    private Long    createdAt;
    private Integer createdBy;
    private Long    lastUpdatedAt;
    private Integer lastUpdatedBy;

    public LevelsAchivements() {}

    public LevelsAchivements(LevelsAchivements value) {
        this.id = value.id;
        this.achivementName = value.achivementName;
        this.achivementDetails = value.achivementDetails;
        this.isActive = value.isActive;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.lastUpdatedAt = value.lastUpdatedAt;
        this.lastUpdatedBy = value.lastUpdatedBy;
    }

    public LevelsAchivements(
        Integer id,
        String  achivementName,
        String  achivementDetails,
        Byte    isActive,
        Long    createdAt,
        Integer createdBy,
        Long    lastUpdatedAt,
        Integer lastUpdatedBy
    ) {
        this.id = id;
        this.achivementName = achivementName;
        this.achivementDetails = achivementDetails;
        this.isActive = isActive;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.lastUpdatedAt = lastUpdatedAt;
        this.lastUpdatedBy = lastUpdatedBy;
    }

    public Integer getId() {
        return this.id;
    }

    public LevelsAchivements setId(Integer id) {
        this.id = id;
        return this;
    }

    public String getAchivementName() {
        return this.achivementName;
    }

    public LevelsAchivements setAchivementName(String achivementName) {
        this.achivementName = achivementName;
        return this;
    }

    public String getAchivementDetails() {
        return this.achivementDetails;
    }

    public LevelsAchivements setAchivementDetails(String achivementDetails) {
        this.achivementDetails = achivementDetails;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public LevelsAchivements setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedAt() {
        return this.createdAt;
    }

    public LevelsAchivements setCreatedAt(Long createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    public Integer getCreatedBy() {
        return this.createdBy;
    }

    public LevelsAchivements setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public Long getLastUpdatedAt() {
        return this.lastUpdatedAt;
    }

    public LevelsAchivements setLastUpdatedAt(Long lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }

    public Integer getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public LevelsAchivements setLastUpdatedBy(Integer lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LevelsAchivements other = (LevelsAchivements) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (achivementName == null) {
            if (other.achivementName != null)
                return false;
        }
        else if (!achivementName.equals(other.achivementName))
            return false;
        if (achivementDetails == null) {
            if (other.achivementDetails != null)
                return false;
        }
        else if (!achivementDetails.equals(other.achivementDetails))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedAt == null) {
            if (other.lastUpdatedAt != null)
                return false;
        }
        else if (!lastUpdatedAt.equals(other.lastUpdatedAt))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.achivementName == null) ? 0 : this.achivementName.hashCode());
        result = prime * result + ((this.achivementDetails == null) ? 0 : this.achivementDetails.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedAt == null) ? 0 : this.lastUpdatedAt.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("LevelsAchivements (");

        sb.append(id);
        sb.append(", ").append(achivementName);
        sb.append(", ").append(achivementDetails);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedAt);
        sb.append(", ").append(lastUpdatedBy);

        sb.append(")");
        return sb.toString();
    }
}
