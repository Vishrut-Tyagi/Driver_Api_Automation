/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LiveRide implements Serializable {

    private static final long serialVersionUID = -647415726;

    private UInteger   id;
    private UInteger   riderId;
    private UInteger   driverId;
    private String     rideState;
    private String     rideType;
    private String     riderType;
    private String     vehicleNumber;
    private Long       pickUpTimestamp;
    private Long       arrivalTimestamp;
    private Long       dropTimestamp;
    private Long       assignTimestamp;
    private Long       noShowTimestamp;
    private String     pickUpLocation;
    private String     arrivalLocation;
    private String     dropLocation;
    private String     assignLocation;
    private String     noShowLocation;
    private BigDecimal pickUpLat;
    private BigDecimal arrivalLat;
    private BigDecimal dropLat;
    private BigDecimal assignLat;
    private BigDecimal noShowLat;
    private BigDecimal pickUpLong;
    private BigDecimal arrivalLong;
    private BigDecimal dropLong;
    private BigDecimal assignLong;
    private BigDecimal noShowLong;
    private Integer    tripStartSoc;
    private Integer    tripCompleteSoc;
    private String     platform;
    private Long       estimatedStartTimestamp;
    private Long       estimatedCompletionTimestamp;
    private Long       actualCompletionTimestamp;
    private BigDecimal estimatedRideDistance;
    private BigDecimal actualRideDistance;
    private BigDecimal estimatedPickupDistance;
    private BigDecimal actualPickupDistance;
    private BigDecimal estimatedDropDistance;
    private BigDecimal actualDropDistance;
    private String     pickupPath;
    private String     dropPath;
    private BigDecimal estimatedAmount;
    private BigDecimal actualAmount;
    private BigDecimal discountAmount;
    private Integer    paymentOrderId;
    private String     paymentMode;
    private UInteger   rideRequestId;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private UInteger   serviceRegionId;
    private Integer    versionId;
    private Integer    tripAssignmentSoc;
    private Integer    tripAssignmentDte;
    private Integer    tripStartDte;
    private Integer    tripCompletionDte;
    private Long       estimatedPickupTimestamp;
    private String     destinationState;
    private Long       actualStartTimestamp;
    private UInteger   assignedBy;
    private String     rejectedBy;
    private Long       cancellationEta;
    private String     promoCode;
    private String     rideCategory;
    private String     otherFlags;
    private BigDecimal actualPickupLat;
    private BigDecimal actualPickupLong;
    private Integer    bookedBy;
    private Long       eta;
    private Long       etd;
    private BigDecimal dta;
    private BigDecimal dtd;
    private Long       driverNotMoving;
    private Long       noGpsPing;
    private Integer    currentSoc;
    private Integer    currentDte;
    private String     vehicleModel;
    private String     requestType;
    private String     bookingSource;
    private String     bookingType;
    private Byte       isPremiumVehicleAssigned;
    private Byte       isPremiumRentalRide;
    private String     rentalBreakupStr;
    private String     stopsListStr;
    private Byte       isBookedForSomeoneElse;
    private String     bookedByRiderDataDtoStr;
    private String     riderStr;
    private String     driverStr;
    private BigDecimal cashToBeCollected;
    private String     bookingReferenceNumber;
    private String     flightNo;
    private String     verificationDetailsStr;
    private Integer    rideId;
    private Long       driverActionTimestamp;
    private Integer    priorityType;
    private Long       priorityOrder;
    private Long       delayTime;
    private String     cantCompleteRide;

    public LiveRide() {}

    public LiveRide(LiveRide value) {
        this.id = value.id;
        this.riderId = value.riderId;
        this.driverId = value.driverId;
        this.rideState = value.rideState;
        this.rideType = value.rideType;
        this.riderType = value.riderType;
        this.vehicleNumber = value.vehicleNumber;
        this.pickUpTimestamp = value.pickUpTimestamp;
        this.arrivalTimestamp = value.arrivalTimestamp;
        this.dropTimestamp = value.dropTimestamp;
        this.assignTimestamp = value.assignTimestamp;
        this.noShowTimestamp = value.noShowTimestamp;
        this.pickUpLocation = value.pickUpLocation;
        this.arrivalLocation = value.arrivalLocation;
        this.dropLocation = value.dropLocation;
        this.assignLocation = value.assignLocation;
        this.noShowLocation = value.noShowLocation;
        this.pickUpLat = value.pickUpLat;
        this.arrivalLat = value.arrivalLat;
        this.dropLat = value.dropLat;
        this.assignLat = value.assignLat;
        this.noShowLat = value.noShowLat;
        this.pickUpLong = value.pickUpLong;
        this.arrivalLong = value.arrivalLong;
        this.dropLong = value.dropLong;
        this.assignLong = value.assignLong;
        this.noShowLong = value.noShowLong;
        this.tripStartSoc = value.tripStartSoc;
        this.tripCompleteSoc = value.tripCompleteSoc;
        this.platform = value.platform;
        this.estimatedStartTimestamp = value.estimatedStartTimestamp;
        this.estimatedCompletionTimestamp = value.estimatedCompletionTimestamp;
        this.actualCompletionTimestamp = value.actualCompletionTimestamp;
        this.estimatedRideDistance = value.estimatedRideDistance;
        this.actualRideDistance = value.actualRideDistance;
        this.estimatedPickupDistance = value.estimatedPickupDistance;
        this.actualPickupDistance = value.actualPickupDistance;
        this.estimatedDropDistance = value.estimatedDropDistance;
        this.actualDropDistance = value.actualDropDistance;
        this.pickupPath = value.pickupPath;
        this.dropPath = value.dropPath;
        this.estimatedAmount = value.estimatedAmount;
        this.actualAmount = value.actualAmount;
        this.discountAmount = value.discountAmount;
        this.paymentOrderId = value.paymentOrderId;
        this.paymentMode = value.paymentMode;
        this.rideRequestId = value.rideRequestId;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.serviceRegionId = value.serviceRegionId;
        this.versionId = value.versionId;
        this.tripAssignmentSoc = value.tripAssignmentSoc;
        this.tripAssignmentDte = value.tripAssignmentDte;
        this.tripStartDte = value.tripStartDte;
        this.tripCompletionDte = value.tripCompletionDte;
        this.estimatedPickupTimestamp = value.estimatedPickupTimestamp;
        this.destinationState = value.destinationState;
        this.actualStartTimestamp = value.actualStartTimestamp;
        this.assignedBy = value.assignedBy;
        this.rejectedBy = value.rejectedBy;
        this.cancellationEta = value.cancellationEta;
        this.promoCode = value.promoCode;
        this.rideCategory = value.rideCategory;
        this.otherFlags = value.otherFlags;
        this.actualPickupLat = value.actualPickupLat;
        this.actualPickupLong = value.actualPickupLong;
        this.bookedBy = value.bookedBy;
        this.eta = value.eta;
        this.etd = value.etd;
        this.dta = value.dta;
        this.dtd = value.dtd;
        this.driverNotMoving = value.driverNotMoving;
        this.noGpsPing = value.noGpsPing;
        this.currentSoc = value.currentSoc;
        this.currentDte = value.currentDte;
        this.vehicleModel = value.vehicleModel;
        this.requestType = value.requestType;
        this.bookingSource = value.bookingSource;
        this.bookingType = value.bookingType;
        this.isPremiumVehicleAssigned = value.isPremiumVehicleAssigned;
        this.isPremiumRentalRide = value.isPremiumRentalRide;
        this.rentalBreakupStr = value.rentalBreakupStr;
        this.stopsListStr = value.stopsListStr;
        this.isBookedForSomeoneElse = value.isBookedForSomeoneElse;
        this.bookedByRiderDataDtoStr = value.bookedByRiderDataDtoStr;
        this.riderStr = value.riderStr;
        this.driverStr = value.driverStr;
        this.cashToBeCollected = value.cashToBeCollected;
        this.bookingReferenceNumber = value.bookingReferenceNumber;
        this.flightNo = value.flightNo;
        this.verificationDetailsStr = value.verificationDetailsStr;
        this.rideId = value.rideId;
        this.driverActionTimestamp = value.driverActionTimestamp;
        this.priorityType = value.priorityType;
        this.priorityOrder = value.priorityOrder;
        this.delayTime = value.delayTime;
        this.cantCompleteRide = value.cantCompleteRide;
    }

    public LiveRide(
        UInteger   id,
        UInteger   riderId,
        UInteger   driverId,
        String     rideState,
        String     rideType,
        String     riderType,
        String     vehicleNumber,
        Long       pickUpTimestamp,
        Long       arrivalTimestamp,
        Long       dropTimestamp,
        Long       assignTimestamp,
        Long       noShowTimestamp,
        String     pickUpLocation,
        String     arrivalLocation,
        String     dropLocation,
        String     assignLocation,
        String     noShowLocation,
        BigDecimal pickUpLat,
        BigDecimal arrivalLat,
        BigDecimal dropLat,
        BigDecimal assignLat,
        BigDecimal noShowLat,
        BigDecimal pickUpLong,
        BigDecimal arrivalLong,
        BigDecimal dropLong,
        BigDecimal assignLong,
        BigDecimal noShowLong,
        Integer    tripStartSoc,
        Integer    tripCompleteSoc,
        String     platform,
        Long       estimatedStartTimestamp,
        Long       estimatedCompletionTimestamp,
        Long       actualCompletionTimestamp,
        BigDecimal estimatedRideDistance,
        BigDecimal actualRideDistance,
        BigDecimal estimatedPickupDistance,
        BigDecimal actualPickupDistance,
        BigDecimal estimatedDropDistance,
        BigDecimal actualDropDistance,
        String     pickupPath,
        String     dropPath,
        BigDecimal estimatedAmount,
        BigDecimal actualAmount,
        BigDecimal discountAmount,
        Integer    paymentOrderId,
        String     paymentMode,
        UInteger   rideRequestId,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        UInteger   serviceRegionId,
        Integer    versionId,
        Integer    tripAssignmentSoc,
        Integer    tripAssignmentDte,
        Integer    tripStartDte,
        Integer    tripCompletionDte,
        Long       estimatedPickupTimestamp,
        String     destinationState,
        Long       actualStartTimestamp,
        UInteger   assignedBy,
        String     rejectedBy,
        Long       cancellationEta,
        String     promoCode,
        String     rideCategory,
        String     otherFlags,
        BigDecimal actualPickupLat,
        BigDecimal actualPickupLong,
        Integer    bookedBy,
        Long       eta,
        Long       etd,
        BigDecimal dta,
        BigDecimal dtd,
        Long       driverNotMoving,
        Long       noGpsPing,
        Integer    currentSoc,
        Integer    currentDte,
        String     vehicleModel,
        String     requestType,
        String     bookingSource,
        String     bookingType,
        Byte       isPremiumVehicleAssigned,
        Byte       isPremiumRentalRide,
        String     rentalBreakupStr,
        String     stopsListStr,
        Byte       isBookedForSomeoneElse,
        String     bookedByRiderDataDtoStr,
        String     riderStr,
        String     driverStr,
        BigDecimal cashToBeCollected,
        String     bookingReferenceNumber,
        String     flightNo,
        String     verificationDetailsStr,
        Integer    rideId,
        Long       driverActionTimestamp,
        Integer    priorityType,
        Long       priorityOrder,
        Long       delayTime,
        String     cantCompleteRide
    ) {
        this.id = id;
        this.riderId = riderId;
        this.driverId = driverId;
        this.rideState = rideState;
        this.rideType = rideType;
        this.riderType = riderType;
        this.vehicleNumber = vehicleNumber;
        this.pickUpTimestamp = pickUpTimestamp;
        this.arrivalTimestamp = arrivalTimestamp;
        this.dropTimestamp = dropTimestamp;
        this.assignTimestamp = assignTimestamp;
        this.noShowTimestamp = noShowTimestamp;
        this.pickUpLocation = pickUpLocation;
        this.arrivalLocation = arrivalLocation;
        this.dropLocation = dropLocation;
        this.assignLocation = assignLocation;
        this.noShowLocation = noShowLocation;
        this.pickUpLat = pickUpLat;
        this.arrivalLat = arrivalLat;
        this.dropLat = dropLat;
        this.assignLat = assignLat;
        this.noShowLat = noShowLat;
        this.pickUpLong = pickUpLong;
        this.arrivalLong = arrivalLong;
        this.dropLong = dropLong;
        this.assignLong = assignLong;
        this.noShowLong = noShowLong;
        this.tripStartSoc = tripStartSoc;
        this.tripCompleteSoc = tripCompleteSoc;
        this.platform = platform;
        this.estimatedStartTimestamp = estimatedStartTimestamp;
        this.estimatedCompletionTimestamp = estimatedCompletionTimestamp;
        this.actualCompletionTimestamp = actualCompletionTimestamp;
        this.estimatedRideDistance = estimatedRideDistance;
        this.actualRideDistance = actualRideDistance;
        this.estimatedPickupDistance = estimatedPickupDistance;
        this.actualPickupDistance = actualPickupDistance;
        this.estimatedDropDistance = estimatedDropDistance;
        this.actualDropDistance = actualDropDistance;
        this.pickupPath = pickupPath;
        this.dropPath = dropPath;
        this.estimatedAmount = estimatedAmount;
        this.actualAmount = actualAmount;
        this.discountAmount = discountAmount;
        this.paymentOrderId = paymentOrderId;
        this.paymentMode = paymentMode;
        this.rideRequestId = rideRequestId;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.serviceRegionId = serviceRegionId;
        this.versionId = versionId;
        this.tripAssignmentSoc = tripAssignmentSoc;
        this.tripAssignmentDte = tripAssignmentDte;
        this.tripStartDte = tripStartDte;
        this.tripCompletionDte = tripCompletionDte;
        this.estimatedPickupTimestamp = estimatedPickupTimestamp;
        this.destinationState = destinationState;
        this.actualStartTimestamp = actualStartTimestamp;
        this.assignedBy = assignedBy;
        this.rejectedBy = rejectedBy;
        this.cancellationEta = cancellationEta;
        this.promoCode = promoCode;
        this.rideCategory = rideCategory;
        this.otherFlags = otherFlags;
        this.actualPickupLat = actualPickupLat;
        this.actualPickupLong = actualPickupLong;
        this.bookedBy = bookedBy;
        this.eta = eta;
        this.etd = etd;
        this.dta = dta;
        this.dtd = dtd;
        this.driverNotMoving = driverNotMoving;
        this.noGpsPing = noGpsPing;
        this.currentSoc = currentSoc;
        this.currentDte = currentDte;
        this.vehicleModel = vehicleModel;
        this.requestType = requestType;
        this.bookingSource = bookingSource;
        this.bookingType = bookingType;
        this.isPremiumVehicleAssigned = isPremiumVehicleAssigned;
        this.isPremiumRentalRide = isPremiumRentalRide;
        this.rentalBreakupStr = rentalBreakupStr;
        this.stopsListStr = stopsListStr;
        this.isBookedForSomeoneElse = isBookedForSomeoneElse;
        this.bookedByRiderDataDtoStr = bookedByRiderDataDtoStr;
        this.riderStr = riderStr;
        this.driverStr = driverStr;
        this.cashToBeCollected = cashToBeCollected;
        this.bookingReferenceNumber = bookingReferenceNumber;
        this.flightNo = flightNo;
        this.verificationDetailsStr = verificationDetailsStr;
        this.rideId = rideId;
        this.driverActionTimestamp = driverActionTimestamp;
        this.priorityType = priorityType;
        this.priorityOrder = priorityOrder;
        this.delayTime = delayTime;
        this.cantCompleteRide = cantCompleteRide;
    }

    public UInteger getId() {
        return this.id;
    }

    public LiveRide setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public LiveRide setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public LiveRide setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public String getRideState() {
        return this.rideState;
    }

    public LiveRide setRideState(String rideState) {
        this.rideState = rideState;
        return this;
    }

    public String getRideType() {
        return this.rideType;
    }

    public LiveRide setRideType(String rideType) {
        this.rideType = rideType;
        return this;
    }

    public String getRiderType() {
        return this.riderType;
    }

    public LiveRide setRiderType(String riderType) {
        this.riderType = riderType;
        return this;
    }

    public String getVehicleNumber() {
        return this.vehicleNumber;
    }

    public LiveRide setVehicleNumber(String vehicleNumber) {
        this.vehicleNumber = vehicleNumber;
        return this;
    }

    public Long getPickUpTimestamp() {
        return this.pickUpTimestamp;
    }

    public LiveRide setPickUpTimestamp(Long pickUpTimestamp) {
        this.pickUpTimestamp = pickUpTimestamp;
        return this;
    }

    public Long getArrivalTimestamp() {
        return this.arrivalTimestamp;
    }

    public LiveRide setArrivalTimestamp(Long arrivalTimestamp) {
        this.arrivalTimestamp = arrivalTimestamp;
        return this;
    }

    public Long getDropTimestamp() {
        return this.dropTimestamp;
    }

    public LiveRide setDropTimestamp(Long dropTimestamp) {
        this.dropTimestamp = dropTimestamp;
        return this;
    }

    public Long getAssignTimestamp() {
        return this.assignTimestamp;
    }

    public LiveRide setAssignTimestamp(Long assignTimestamp) {
        this.assignTimestamp = assignTimestamp;
        return this;
    }

    public Long getNoShowTimestamp() {
        return this.noShowTimestamp;
    }

    public LiveRide setNoShowTimestamp(Long noShowTimestamp) {
        this.noShowTimestamp = noShowTimestamp;
        return this;
    }

    public String getPickUpLocation() {
        return this.pickUpLocation;
    }

    public LiveRide setPickUpLocation(String pickUpLocation) {
        this.pickUpLocation = pickUpLocation;
        return this;
    }

    public String getArrivalLocation() {
        return this.arrivalLocation;
    }

    public LiveRide setArrivalLocation(String arrivalLocation) {
        this.arrivalLocation = arrivalLocation;
        return this;
    }

    public String getDropLocation() {
        return this.dropLocation;
    }

    public LiveRide setDropLocation(String dropLocation) {
        this.dropLocation = dropLocation;
        return this;
    }

    public String getAssignLocation() {
        return this.assignLocation;
    }

    public LiveRide setAssignLocation(String assignLocation) {
        this.assignLocation = assignLocation;
        return this;
    }

    public String getNoShowLocation() {
        return this.noShowLocation;
    }

    public LiveRide setNoShowLocation(String noShowLocation) {
        this.noShowLocation = noShowLocation;
        return this;
    }

    public BigDecimal getPickUpLat() {
        return this.pickUpLat;
    }

    public LiveRide setPickUpLat(BigDecimal pickUpLat) {
        this.pickUpLat = pickUpLat;
        return this;
    }

    public BigDecimal getArrivalLat() {
        return this.arrivalLat;
    }

    public LiveRide setArrivalLat(BigDecimal arrivalLat) {
        this.arrivalLat = arrivalLat;
        return this;
    }

    public BigDecimal getDropLat() {
        return this.dropLat;
    }

    public LiveRide setDropLat(BigDecimal dropLat) {
        this.dropLat = dropLat;
        return this;
    }

    public BigDecimal getAssignLat() {
        return this.assignLat;
    }

    public LiveRide setAssignLat(BigDecimal assignLat) {
        this.assignLat = assignLat;
        return this;
    }

    public BigDecimal getNoShowLat() {
        return this.noShowLat;
    }

    public LiveRide setNoShowLat(BigDecimal noShowLat) {
        this.noShowLat = noShowLat;
        return this;
    }

    public BigDecimal getPickUpLong() {
        return this.pickUpLong;
    }

    public LiveRide setPickUpLong(BigDecimal pickUpLong) {
        this.pickUpLong = pickUpLong;
        return this;
    }

    public BigDecimal getArrivalLong() {
        return this.arrivalLong;
    }

    public LiveRide setArrivalLong(BigDecimal arrivalLong) {
        this.arrivalLong = arrivalLong;
        return this;
    }

    public BigDecimal getDropLong() {
        return this.dropLong;
    }

    public LiveRide setDropLong(BigDecimal dropLong) {
        this.dropLong = dropLong;
        return this;
    }

    public BigDecimal getAssignLong() {
        return this.assignLong;
    }

    public LiveRide setAssignLong(BigDecimal assignLong) {
        this.assignLong = assignLong;
        return this;
    }

    public BigDecimal getNoShowLong() {
        return this.noShowLong;
    }

    public LiveRide setNoShowLong(BigDecimal noShowLong) {
        this.noShowLong = noShowLong;
        return this;
    }

    public Integer getTripStartSoc() {
        return this.tripStartSoc;
    }

    public LiveRide setTripStartSoc(Integer tripStartSoc) {
        this.tripStartSoc = tripStartSoc;
        return this;
    }

    public Integer getTripCompleteSoc() {
        return this.tripCompleteSoc;
    }

    public LiveRide setTripCompleteSoc(Integer tripCompleteSoc) {
        this.tripCompleteSoc = tripCompleteSoc;
        return this;
    }

    public String getPlatform() {
        return this.platform;
    }

    public LiveRide setPlatform(String platform) {
        this.platform = platform;
        return this;
    }

    public Long getEstimatedStartTimestamp() {
        return this.estimatedStartTimestamp;
    }

    public LiveRide setEstimatedStartTimestamp(Long estimatedStartTimestamp) {
        this.estimatedStartTimestamp = estimatedStartTimestamp;
        return this;
    }

    public Long getEstimatedCompletionTimestamp() {
        return this.estimatedCompletionTimestamp;
    }

    public LiveRide setEstimatedCompletionTimestamp(Long estimatedCompletionTimestamp) {
        this.estimatedCompletionTimestamp = estimatedCompletionTimestamp;
        return this;
    }

    public Long getActualCompletionTimestamp() {
        return this.actualCompletionTimestamp;
    }

    public LiveRide setActualCompletionTimestamp(Long actualCompletionTimestamp) {
        this.actualCompletionTimestamp = actualCompletionTimestamp;
        return this;
    }

    public BigDecimal getEstimatedRideDistance() {
        return this.estimatedRideDistance;
    }

    public LiveRide setEstimatedRideDistance(BigDecimal estimatedRideDistance) {
        this.estimatedRideDistance = estimatedRideDistance;
        return this;
    }

    public BigDecimal getActualRideDistance() {
        return this.actualRideDistance;
    }

    public LiveRide setActualRideDistance(BigDecimal actualRideDistance) {
        this.actualRideDistance = actualRideDistance;
        return this;
    }

    public BigDecimal getEstimatedPickupDistance() {
        return this.estimatedPickupDistance;
    }

    public LiveRide setEstimatedPickupDistance(BigDecimal estimatedPickupDistance) {
        this.estimatedPickupDistance = estimatedPickupDistance;
        return this;
    }

    public BigDecimal getActualPickupDistance() {
        return this.actualPickupDistance;
    }

    public LiveRide setActualPickupDistance(BigDecimal actualPickupDistance) {
        this.actualPickupDistance = actualPickupDistance;
        return this;
    }

    public BigDecimal getEstimatedDropDistance() {
        return this.estimatedDropDistance;
    }

    public LiveRide setEstimatedDropDistance(BigDecimal estimatedDropDistance) {
        this.estimatedDropDistance = estimatedDropDistance;
        return this;
    }

    public BigDecimal getActualDropDistance() {
        return this.actualDropDistance;
    }

    public LiveRide setActualDropDistance(BigDecimal actualDropDistance) {
        this.actualDropDistance = actualDropDistance;
        return this;
    }

    public String getPickupPath() {
        return this.pickupPath;
    }

    public LiveRide setPickupPath(String pickupPath) {
        this.pickupPath = pickupPath;
        return this;
    }

    public String getDropPath() {
        return this.dropPath;
    }

    public LiveRide setDropPath(String dropPath) {
        this.dropPath = dropPath;
        return this;
    }

    public BigDecimal getEstimatedAmount() {
        return this.estimatedAmount;
    }

    public LiveRide setEstimatedAmount(BigDecimal estimatedAmount) {
        this.estimatedAmount = estimatedAmount;
        return this;
    }

    public BigDecimal getActualAmount() {
        return this.actualAmount;
    }

    public LiveRide setActualAmount(BigDecimal actualAmount) {
        this.actualAmount = actualAmount;
        return this;
    }

    public BigDecimal getDiscountAmount() {
        return this.discountAmount;
    }

    public LiveRide setDiscountAmount(BigDecimal discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }

    public Integer getPaymentOrderId() {
        return this.paymentOrderId;
    }

    public LiveRide setPaymentOrderId(Integer paymentOrderId) {
        this.paymentOrderId = paymentOrderId;
        return this;
    }

    public String getPaymentMode() {
        return this.paymentMode;
    }

    public LiveRide setPaymentMode(String paymentMode) {
        this.paymentMode = paymentMode;
        return this;
    }

    public UInteger getRideRequestId() {
        return this.rideRequestId;
    }

    public LiveRide setRideRequestId(UInteger rideRequestId) {
        this.rideRequestId = rideRequestId;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public LiveRide setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public LiveRide setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public LiveRide setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public LiveRide setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public LiveRide setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public UInteger getServiceRegionId() {
        return this.serviceRegionId;
    }

    public LiveRide setServiceRegionId(UInteger serviceRegionId) {
        this.serviceRegionId = serviceRegionId;
        return this;
    }

    public Integer getVersionId() {
        return this.versionId;
    }

    public LiveRide setVersionId(Integer versionId) {
        this.versionId = versionId;
        return this;
    }

    public Integer getTripAssignmentSoc() {
        return this.tripAssignmentSoc;
    }

    public LiveRide setTripAssignmentSoc(Integer tripAssignmentSoc) {
        this.tripAssignmentSoc = tripAssignmentSoc;
        return this;
    }

    public Integer getTripAssignmentDte() {
        return this.tripAssignmentDte;
    }

    public LiveRide setTripAssignmentDte(Integer tripAssignmentDte) {
        this.tripAssignmentDte = tripAssignmentDte;
        return this;
    }

    public Integer getTripStartDte() {
        return this.tripStartDte;
    }

    public LiveRide setTripStartDte(Integer tripStartDte) {
        this.tripStartDte = tripStartDte;
        return this;
    }

    public Integer getTripCompletionDte() {
        return this.tripCompletionDte;
    }

    public LiveRide setTripCompletionDte(Integer tripCompletionDte) {
        this.tripCompletionDte = tripCompletionDte;
        return this;
    }

    public Long getEstimatedPickupTimestamp() {
        return this.estimatedPickupTimestamp;
    }

    public LiveRide setEstimatedPickupTimestamp(Long estimatedPickupTimestamp) {
        this.estimatedPickupTimestamp = estimatedPickupTimestamp;
        return this;
    }

    public String getDestinationState() {
        return this.destinationState;
    }

    public LiveRide setDestinationState(String destinationState) {
        this.destinationState = destinationState;
        return this;
    }

    public Long getActualStartTimestamp() {
        return this.actualStartTimestamp;
    }

    public LiveRide setActualStartTimestamp(Long actualStartTimestamp) {
        this.actualStartTimestamp = actualStartTimestamp;
        return this;
    }

    public UInteger getAssignedBy() {
        return this.assignedBy;
    }

    public LiveRide setAssignedBy(UInteger assignedBy) {
        this.assignedBy = assignedBy;
        return this;
    }

    public String getRejectedBy() {
        return this.rejectedBy;
    }

    public LiveRide setRejectedBy(String rejectedBy) {
        this.rejectedBy = rejectedBy;
        return this;
    }

    public Long getCancellationEta() {
        return this.cancellationEta;
    }

    public LiveRide setCancellationEta(Long cancellationEta) {
        this.cancellationEta = cancellationEta;
        return this;
    }

    public String getPromoCode() {
        return this.promoCode;
    }

    public LiveRide setPromoCode(String promoCode) {
        this.promoCode = promoCode;
        return this;
    }

    public String getRideCategory() {
        return this.rideCategory;
    }

    public LiveRide setRideCategory(String rideCategory) {
        this.rideCategory = rideCategory;
        return this;
    }

    public String getOtherFlags() {
        return this.otherFlags;
    }

    public LiveRide setOtherFlags(String otherFlags) {
        this.otherFlags = otherFlags;
        return this;
    }

    public BigDecimal getActualPickupLat() {
        return this.actualPickupLat;
    }

    public LiveRide setActualPickupLat(BigDecimal actualPickupLat) {
        this.actualPickupLat = actualPickupLat;
        return this;
    }

    public BigDecimal getActualPickupLong() {
        return this.actualPickupLong;
    }

    public LiveRide setActualPickupLong(BigDecimal actualPickupLong) {
        this.actualPickupLong = actualPickupLong;
        return this;
    }

    public Integer getBookedBy() {
        return this.bookedBy;
    }

    public LiveRide setBookedBy(Integer bookedBy) {
        this.bookedBy = bookedBy;
        return this;
    }

    public Long getEta() {
        return this.eta;
    }

    public LiveRide setEta(Long eta) {
        this.eta = eta;
        return this;
    }

    public Long getEtd() {
        return this.etd;
    }

    public LiveRide setEtd(Long etd) {
        this.etd = etd;
        return this;
    }

    public BigDecimal getDta() {
        return this.dta;
    }

    public LiveRide setDta(BigDecimal dta) {
        this.dta = dta;
        return this;
    }

    public BigDecimal getDtd() {
        return this.dtd;
    }

    public LiveRide setDtd(BigDecimal dtd) {
        this.dtd = dtd;
        return this;
    }

    public Long getDriverNotMoving() {
        return this.driverNotMoving;
    }

    public LiveRide setDriverNotMoving(Long driverNotMoving) {
        this.driverNotMoving = driverNotMoving;
        return this;
    }

    public Long getNoGpsPing() {
        return this.noGpsPing;
    }

    public LiveRide setNoGpsPing(Long noGpsPing) {
        this.noGpsPing = noGpsPing;
        return this;
    }

    public Integer getCurrentSoc() {
        return this.currentSoc;
    }

    public LiveRide setCurrentSoc(Integer currentSoc) {
        this.currentSoc = currentSoc;
        return this;
    }

    public Integer getCurrentDte() {
        return this.currentDte;
    }

    public LiveRide setCurrentDte(Integer currentDte) {
        this.currentDte = currentDte;
        return this;
    }

    public String getVehicleModel() {
        return this.vehicleModel;
    }

    public LiveRide setVehicleModel(String vehicleModel) {
        this.vehicleModel = vehicleModel;
        return this;
    }

    public String getRequestType() {
        return this.requestType;
    }

    public LiveRide setRequestType(String requestType) {
        this.requestType = requestType;
        return this;
    }

    public String getBookingSource() {
        return this.bookingSource;
    }

    public LiveRide setBookingSource(String bookingSource) {
        this.bookingSource = bookingSource;
        return this;
    }

    public String getBookingType() {
        return this.bookingType;
    }

    public LiveRide setBookingType(String bookingType) {
        this.bookingType = bookingType;
        return this;
    }

    public Byte getIsPremiumVehicleAssigned() {
        return this.isPremiumVehicleAssigned;
    }

    public LiveRide setIsPremiumVehicleAssigned(Byte isPremiumVehicleAssigned) {
        this.isPremiumVehicleAssigned = isPremiumVehicleAssigned;
        return this;
    }

    public Byte getIsPremiumRentalRide() {
        return this.isPremiumRentalRide;
    }

    public LiveRide setIsPremiumRentalRide(Byte isPremiumRentalRide) {
        this.isPremiumRentalRide = isPremiumRentalRide;
        return this;
    }

    public String getRentalBreakupStr() {
        return this.rentalBreakupStr;
    }

    public LiveRide setRentalBreakupStr(String rentalBreakupStr) {
        this.rentalBreakupStr = rentalBreakupStr;
        return this;
    }

    public String getStopsListStr() {
        return this.stopsListStr;
    }

    public LiveRide setStopsListStr(String stopsListStr) {
        this.stopsListStr = stopsListStr;
        return this;
    }

    public Byte getIsBookedForSomeoneElse() {
        return this.isBookedForSomeoneElse;
    }

    public LiveRide setIsBookedForSomeoneElse(Byte isBookedForSomeoneElse) {
        this.isBookedForSomeoneElse = isBookedForSomeoneElse;
        return this;
    }

    public String getBookedByRiderDataDtoStr() {
        return this.bookedByRiderDataDtoStr;
    }

    public LiveRide setBookedByRiderDataDtoStr(String bookedByRiderDataDtoStr) {
        this.bookedByRiderDataDtoStr = bookedByRiderDataDtoStr;
        return this;
    }

    public String getRiderStr() {
        return this.riderStr;
    }

    public LiveRide setRiderStr(String riderStr) {
        this.riderStr = riderStr;
        return this;
    }

    public String getDriverStr() {
        return this.driverStr;
    }

    public LiveRide setDriverStr(String driverStr) {
        this.driverStr = driverStr;
        return this;
    }

    public BigDecimal getCashToBeCollected() {
        return this.cashToBeCollected;
    }

    public LiveRide setCashToBeCollected(BigDecimal cashToBeCollected) {
        this.cashToBeCollected = cashToBeCollected;
        return this;
    }

    public String getBookingReferenceNumber() {
        return this.bookingReferenceNumber;
    }

    public LiveRide setBookingReferenceNumber(String bookingReferenceNumber) {
        this.bookingReferenceNumber = bookingReferenceNumber;
        return this;
    }

    public String getFlightNo() {
        return this.flightNo;
    }

    public LiveRide setFlightNo(String flightNo) {
        this.flightNo = flightNo;
        return this;
    }

    public String getVerificationDetailsStr() {
        return this.verificationDetailsStr;
    }

    public LiveRide setVerificationDetailsStr(String verificationDetailsStr) {
        this.verificationDetailsStr = verificationDetailsStr;
        return this;
    }

    public Integer getRideId() {
        return this.rideId;
    }

    public LiveRide setRideId(Integer rideId) {
        this.rideId = rideId;
        return this;
    }

    public Long getDriverActionTimestamp() {
        return this.driverActionTimestamp;
    }

    public LiveRide setDriverActionTimestamp(Long driverActionTimestamp) {
        this.driverActionTimestamp = driverActionTimestamp;
        return this;
    }

    public Integer getPriorityType() {
        return this.priorityType;
    }

    public LiveRide setPriorityType(Integer priorityType) {
        this.priorityType = priorityType;
        return this;
    }

    public Long getPriorityOrder() {
        return this.priorityOrder;
    }

    public LiveRide setPriorityOrder(Long priorityOrder) {
        this.priorityOrder = priorityOrder;
        return this;
    }

    public Long getDelayTime() {
        return this.delayTime;
    }

    public LiveRide setDelayTime(Long delayTime) {
        this.delayTime = delayTime;
        return this;
    }

    public String getCantCompleteRide() {
        return this.cantCompleteRide;
    }

    public LiveRide setCantCompleteRide(String cantCompleteRide) {
        this.cantCompleteRide = cantCompleteRide;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LiveRide other = (LiveRide) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (rideState == null) {
            if (other.rideState != null)
                return false;
        }
        else if (!rideState.equals(other.rideState))
            return false;
        if (rideType == null) {
            if (other.rideType != null)
                return false;
        }
        else if (!rideType.equals(other.rideType))
            return false;
        if (riderType == null) {
            if (other.riderType != null)
                return false;
        }
        else if (!riderType.equals(other.riderType))
            return false;
        if (vehicleNumber == null) {
            if (other.vehicleNumber != null)
                return false;
        }
        else if (!vehicleNumber.equals(other.vehicleNumber))
            return false;
        if (pickUpTimestamp == null) {
            if (other.pickUpTimestamp != null)
                return false;
        }
        else if (!pickUpTimestamp.equals(other.pickUpTimestamp))
            return false;
        if (arrivalTimestamp == null) {
            if (other.arrivalTimestamp != null)
                return false;
        }
        else if (!arrivalTimestamp.equals(other.arrivalTimestamp))
            return false;
        if (dropTimestamp == null) {
            if (other.dropTimestamp != null)
                return false;
        }
        else if (!dropTimestamp.equals(other.dropTimestamp))
            return false;
        if (assignTimestamp == null) {
            if (other.assignTimestamp != null)
                return false;
        }
        else if (!assignTimestamp.equals(other.assignTimestamp))
            return false;
        if (noShowTimestamp == null) {
            if (other.noShowTimestamp != null)
                return false;
        }
        else if (!noShowTimestamp.equals(other.noShowTimestamp))
            return false;
        if (pickUpLocation == null) {
            if (other.pickUpLocation != null)
                return false;
        }
        else if (!pickUpLocation.equals(other.pickUpLocation))
            return false;
        if (arrivalLocation == null) {
            if (other.arrivalLocation != null)
                return false;
        }
        else if (!arrivalLocation.equals(other.arrivalLocation))
            return false;
        if (dropLocation == null) {
            if (other.dropLocation != null)
                return false;
        }
        else if (!dropLocation.equals(other.dropLocation))
            return false;
        if (assignLocation == null) {
            if (other.assignLocation != null)
                return false;
        }
        else if (!assignLocation.equals(other.assignLocation))
            return false;
        if (noShowLocation == null) {
            if (other.noShowLocation != null)
                return false;
        }
        else if (!noShowLocation.equals(other.noShowLocation))
            return false;
        if (pickUpLat == null) {
            if (other.pickUpLat != null)
                return false;
        }
        else if (!pickUpLat.equals(other.pickUpLat))
            return false;
        if (arrivalLat == null) {
            if (other.arrivalLat != null)
                return false;
        }
        else if (!arrivalLat.equals(other.arrivalLat))
            return false;
        if (dropLat == null) {
            if (other.dropLat != null)
                return false;
        }
        else if (!dropLat.equals(other.dropLat))
            return false;
        if (assignLat == null) {
            if (other.assignLat != null)
                return false;
        }
        else if (!assignLat.equals(other.assignLat))
            return false;
        if (noShowLat == null) {
            if (other.noShowLat != null)
                return false;
        }
        else if (!noShowLat.equals(other.noShowLat))
            return false;
        if (pickUpLong == null) {
            if (other.pickUpLong != null)
                return false;
        }
        else if (!pickUpLong.equals(other.pickUpLong))
            return false;
        if (arrivalLong == null) {
            if (other.arrivalLong != null)
                return false;
        }
        else if (!arrivalLong.equals(other.arrivalLong))
            return false;
        if (dropLong == null) {
            if (other.dropLong != null)
                return false;
        }
        else if (!dropLong.equals(other.dropLong))
            return false;
        if (assignLong == null) {
            if (other.assignLong != null)
                return false;
        }
        else if (!assignLong.equals(other.assignLong))
            return false;
        if (noShowLong == null) {
            if (other.noShowLong != null)
                return false;
        }
        else if (!noShowLong.equals(other.noShowLong))
            return false;
        if (tripStartSoc == null) {
            if (other.tripStartSoc != null)
                return false;
        }
        else if (!tripStartSoc.equals(other.tripStartSoc))
            return false;
        if (tripCompleteSoc == null) {
            if (other.tripCompleteSoc != null)
                return false;
        }
        else if (!tripCompleteSoc.equals(other.tripCompleteSoc))
            return false;
        if (platform == null) {
            if (other.platform != null)
                return false;
        }
        else if (!platform.equals(other.platform))
            return false;
        if (estimatedStartTimestamp == null) {
            if (other.estimatedStartTimestamp != null)
                return false;
        }
        else if (!estimatedStartTimestamp.equals(other.estimatedStartTimestamp))
            return false;
        if (estimatedCompletionTimestamp == null) {
            if (other.estimatedCompletionTimestamp != null)
                return false;
        }
        else if (!estimatedCompletionTimestamp.equals(other.estimatedCompletionTimestamp))
            return false;
        if (actualCompletionTimestamp == null) {
            if (other.actualCompletionTimestamp != null)
                return false;
        }
        else if (!actualCompletionTimestamp.equals(other.actualCompletionTimestamp))
            return false;
        if (estimatedRideDistance == null) {
            if (other.estimatedRideDistance != null)
                return false;
        }
        else if (!estimatedRideDistance.equals(other.estimatedRideDistance))
            return false;
        if (actualRideDistance == null) {
            if (other.actualRideDistance != null)
                return false;
        }
        else if (!actualRideDistance.equals(other.actualRideDistance))
            return false;
        if (estimatedPickupDistance == null) {
            if (other.estimatedPickupDistance != null)
                return false;
        }
        else if (!estimatedPickupDistance.equals(other.estimatedPickupDistance))
            return false;
        if (actualPickupDistance == null) {
            if (other.actualPickupDistance != null)
                return false;
        }
        else if (!actualPickupDistance.equals(other.actualPickupDistance))
            return false;
        if (estimatedDropDistance == null) {
            if (other.estimatedDropDistance != null)
                return false;
        }
        else if (!estimatedDropDistance.equals(other.estimatedDropDistance))
            return false;
        if (actualDropDistance == null) {
            if (other.actualDropDistance != null)
                return false;
        }
        else if (!actualDropDistance.equals(other.actualDropDistance))
            return false;
        if (pickupPath == null) {
            if (other.pickupPath != null)
                return false;
        }
        else if (!pickupPath.equals(other.pickupPath))
            return false;
        if (dropPath == null) {
            if (other.dropPath != null)
                return false;
        }
        else if (!dropPath.equals(other.dropPath))
            return false;
        if (estimatedAmount == null) {
            if (other.estimatedAmount != null)
                return false;
        }
        else if (!estimatedAmount.equals(other.estimatedAmount))
            return false;
        if (actualAmount == null) {
            if (other.actualAmount != null)
                return false;
        }
        else if (!actualAmount.equals(other.actualAmount))
            return false;
        if (discountAmount == null) {
            if (other.discountAmount != null)
                return false;
        }
        else if (!discountAmount.equals(other.discountAmount))
            return false;
        if (paymentOrderId == null) {
            if (other.paymentOrderId != null)
                return false;
        }
        else if (!paymentOrderId.equals(other.paymentOrderId))
            return false;
        if (paymentMode == null) {
            if (other.paymentMode != null)
                return false;
        }
        else if (!paymentMode.equals(other.paymentMode))
            return false;
        if (rideRequestId == null) {
            if (other.rideRequestId != null)
                return false;
        }
        else if (!rideRequestId.equals(other.rideRequestId))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (serviceRegionId == null) {
            if (other.serviceRegionId != null)
                return false;
        }
        else if (!serviceRegionId.equals(other.serviceRegionId))
            return false;
        if (versionId == null) {
            if (other.versionId != null)
                return false;
        }
        else if (!versionId.equals(other.versionId))
            return false;
        if (tripAssignmentSoc == null) {
            if (other.tripAssignmentSoc != null)
                return false;
        }
        else if (!tripAssignmentSoc.equals(other.tripAssignmentSoc))
            return false;
        if (tripAssignmentDte == null) {
            if (other.tripAssignmentDte != null)
                return false;
        }
        else if (!tripAssignmentDte.equals(other.tripAssignmentDte))
            return false;
        if (tripStartDte == null) {
            if (other.tripStartDte != null)
                return false;
        }
        else if (!tripStartDte.equals(other.tripStartDte))
            return false;
        if (tripCompletionDte == null) {
            if (other.tripCompletionDte != null)
                return false;
        }
        else if (!tripCompletionDte.equals(other.tripCompletionDte))
            return false;
        if (estimatedPickupTimestamp == null) {
            if (other.estimatedPickupTimestamp != null)
                return false;
        }
        else if (!estimatedPickupTimestamp.equals(other.estimatedPickupTimestamp))
            return false;
        if (destinationState == null) {
            if (other.destinationState != null)
                return false;
        }
        else if (!destinationState.equals(other.destinationState))
            return false;
        if (actualStartTimestamp == null) {
            if (other.actualStartTimestamp != null)
                return false;
        }
        else if (!actualStartTimestamp.equals(other.actualStartTimestamp))
            return false;
        if (assignedBy == null) {
            if (other.assignedBy != null)
                return false;
        }
        else if (!assignedBy.equals(other.assignedBy))
            return false;
        if (rejectedBy == null) {
            if (other.rejectedBy != null)
                return false;
        }
        else if (!rejectedBy.equals(other.rejectedBy))
            return false;
        if (cancellationEta == null) {
            if (other.cancellationEta != null)
                return false;
        }
        else if (!cancellationEta.equals(other.cancellationEta))
            return false;
        if (promoCode == null) {
            if (other.promoCode != null)
                return false;
        }
        else if (!promoCode.equals(other.promoCode))
            return false;
        if (rideCategory == null) {
            if (other.rideCategory != null)
                return false;
        }
        else if (!rideCategory.equals(other.rideCategory))
            return false;
        if (otherFlags == null) {
            if (other.otherFlags != null)
                return false;
        }
        else if (!otherFlags.equals(other.otherFlags))
            return false;
        if (actualPickupLat == null) {
            if (other.actualPickupLat != null)
                return false;
        }
        else if (!actualPickupLat.equals(other.actualPickupLat))
            return false;
        if (actualPickupLong == null) {
            if (other.actualPickupLong != null)
                return false;
        }
        else if (!actualPickupLong.equals(other.actualPickupLong))
            return false;
        if (bookedBy == null) {
            if (other.bookedBy != null)
                return false;
        }
        else if (!bookedBy.equals(other.bookedBy))
            return false;
        if (eta == null) {
            if (other.eta != null)
                return false;
        }
        else if (!eta.equals(other.eta))
            return false;
        if (etd == null) {
            if (other.etd != null)
                return false;
        }
        else if (!etd.equals(other.etd))
            return false;
        if (dta == null) {
            if (other.dta != null)
                return false;
        }
        else if (!dta.equals(other.dta))
            return false;
        if (dtd == null) {
            if (other.dtd != null)
                return false;
        }
        else if (!dtd.equals(other.dtd))
            return false;
        if (driverNotMoving == null) {
            if (other.driverNotMoving != null)
                return false;
        }
        else if (!driverNotMoving.equals(other.driverNotMoving))
            return false;
        if (noGpsPing == null) {
            if (other.noGpsPing != null)
                return false;
        }
        else if (!noGpsPing.equals(other.noGpsPing))
            return false;
        if (currentSoc == null) {
            if (other.currentSoc != null)
                return false;
        }
        else if (!currentSoc.equals(other.currentSoc))
            return false;
        if (currentDte == null) {
            if (other.currentDte != null)
                return false;
        }
        else if (!currentDte.equals(other.currentDte))
            return false;
        if (vehicleModel == null) {
            if (other.vehicleModel != null)
                return false;
        }
        else if (!vehicleModel.equals(other.vehicleModel))
            return false;
        if (requestType == null) {
            if (other.requestType != null)
                return false;
        }
        else if (!requestType.equals(other.requestType))
            return false;
        if (bookingSource == null) {
            if (other.bookingSource != null)
                return false;
        }
        else if (!bookingSource.equals(other.bookingSource))
            return false;
        if (bookingType == null) {
            if (other.bookingType != null)
                return false;
        }
        else if (!bookingType.equals(other.bookingType))
            return false;
        if (isPremiumVehicleAssigned == null) {
            if (other.isPremiumVehicleAssigned != null)
                return false;
        }
        else if (!isPremiumVehicleAssigned.equals(other.isPremiumVehicleAssigned))
            return false;
        if (isPremiumRentalRide == null) {
            if (other.isPremiumRentalRide != null)
                return false;
        }
        else if (!isPremiumRentalRide.equals(other.isPremiumRentalRide))
            return false;
        if (rentalBreakupStr == null) {
            if (other.rentalBreakupStr != null)
                return false;
        }
        else if (!rentalBreakupStr.equals(other.rentalBreakupStr))
            return false;
        if (stopsListStr == null) {
            if (other.stopsListStr != null)
                return false;
        }
        else if (!stopsListStr.equals(other.stopsListStr))
            return false;
        if (isBookedForSomeoneElse == null) {
            if (other.isBookedForSomeoneElse != null)
                return false;
        }
        else if (!isBookedForSomeoneElse.equals(other.isBookedForSomeoneElse))
            return false;
        if (bookedByRiderDataDtoStr == null) {
            if (other.bookedByRiderDataDtoStr != null)
                return false;
        }
        else if (!bookedByRiderDataDtoStr.equals(other.bookedByRiderDataDtoStr))
            return false;
        if (riderStr == null) {
            if (other.riderStr != null)
                return false;
        }
        else if (!riderStr.equals(other.riderStr))
            return false;
        if (driverStr == null) {
            if (other.driverStr != null)
                return false;
        }
        else if (!driverStr.equals(other.driverStr))
            return false;
        if (cashToBeCollected == null) {
            if (other.cashToBeCollected != null)
                return false;
        }
        else if (!cashToBeCollected.equals(other.cashToBeCollected))
            return false;
        if (bookingReferenceNumber == null) {
            if (other.bookingReferenceNumber != null)
                return false;
        }
        else if (!bookingReferenceNumber.equals(other.bookingReferenceNumber))
            return false;
        if (flightNo == null) {
            if (other.flightNo != null)
                return false;
        }
        else if (!flightNo.equals(other.flightNo))
            return false;
        if (verificationDetailsStr == null) {
            if (other.verificationDetailsStr != null)
                return false;
        }
        else if (!verificationDetailsStr.equals(other.verificationDetailsStr))
            return false;
        if (rideId == null) {
            if (other.rideId != null)
                return false;
        }
        else if (!rideId.equals(other.rideId))
            return false;
        if (driverActionTimestamp == null) {
            if (other.driverActionTimestamp != null)
                return false;
        }
        else if (!driverActionTimestamp.equals(other.driverActionTimestamp))
            return false;
        if (priorityType == null) {
            if (other.priorityType != null)
                return false;
        }
        else if (!priorityType.equals(other.priorityType))
            return false;
        if (priorityOrder == null) {
            if (other.priorityOrder != null)
                return false;
        }
        else if (!priorityOrder.equals(other.priorityOrder))
            return false;
        if (delayTime == null) {
            if (other.delayTime != null)
                return false;
        }
        else if (!delayTime.equals(other.delayTime))
            return false;
        if (cantCompleteRide == null) {
            if (other.cantCompleteRide != null)
                return false;
        }
        else if (!cantCompleteRide.equals(other.cantCompleteRide))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.rideState == null) ? 0 : this.rideState.hashCode());
        result = prime * result + ((this.rideType == null) ? 0 : this.rideType.hashCode());
        result = prime * result + ((this.riderType == null) ? 0 : this.riderType.hashCode());
        result = prime * result + ((this.vehicleNumber == null) ? 0 : this.vehicleNumber.hashCode());
        result = prime * result + ((this.pickUpTimestamp == null) ? 0 : this.pickUpTimestamp.hashCode());
        result = prime * result + ((this.arrivalTimestamp == null) ? 0 : this.arrivalTimestamp.hashCode());
        result = prime * result + ((this.dropTimestamp == null) ? 0 : this.dropTimestamp.hashCode());
        result = prime * result + ((this.assignTimestamp == null) ? 0 : this.assignTimestamp.hashCode());
        result = prime * result + ((this.noShowTimestamp == null) ? 0 : this.noShowTimestamp.hashCode());
        result = prime * result + ((this.pickUpLocation == null) ? 0 : this.pickUpLocation.hashCode());
        result = prime * result + ((this.arrivalLocation == null) ? 0 : this.arrivalLocation.hashCode());
        result = prime * result + ((this.dropLocation == null) ? 0 : this.dropLocation.hashCode());
        result = prime * result + ((this.assignLocation == null) ? 0 : this.assignLocation.hashCode());
        result = prime * result + ((this.noShowLocation == null) ? 0 : this.noShowLocation.hashCode());
        result = prime * result + ((this.pickUpLat == null) ? 0 : this.pickUpLat.hashCode());
        result = prime * result + ((this.arrivalLat == null) ? 0 : this.arrivalLat.hashCode());
        result = prime * result + ((this.dropLat == null) ? 0 : this.dropLat.hashCode());
        result = prime * result + ((this.assignLat == null) ? 0 : this.assignLat.hashCode());
        result = prime * result + ((this.noShowLat == null) ? 0 : this.noShowLat.hashCode());
        result = prime * result + ((this.pickUpLong == null) ? 0 : this.pickUpLong.hashCode());
        result = prime * result + ((this.arrivalLong == null) ? 0 : this.arrivalLong.hashCode());
        result = prime * result + ((this.dropLong == null) ? 0 : this.dropLong.hashCode());
        result = prime * result + ((this.assignLong == null) ? 0 : this.assignLong.hashCode());
        result = prime * result + ((this.noShowLong == null) ? 0 : this.noShowLong.hashCode());
        result = prime * result + ((this.tripStartSoc == null) ? 0 : this.tripStartSoc.hashCode());
        result = prime * result + ((this.tripCompleteSoc == null) ? 0 : this.tripCompleteSoc.hashCode());
        result = prime * result + ((this.platform == null) ? 0 : this.platform.hashCode());
        result = prime * result + ((this.estimatedStartTimestamp == null) ? 0 : this.estimatedStartTimestamp.hashCode());
        result = prime * result + ((this.estimatedCompletionTimestamp == null) ? 0 : this.estimatedCompletionTimestamp.hashCode());
        result = prime * result + ((this.actualCompletionTimestamp == null) ? 0 : this.actualCompletionTimestamp.hashCode());
        result = prime * result + ((this.estimatedRideDistance == null) ? 0 : this.estimatedRideDistance.hashCode());
        result = prime * result + ((this.actualRideDistance == null) ? 0 : this.actualRideDistance.hashCode());
        result = prime * result + ((this.estimatedPickupDistance == null) ? 0 : this.estimatedPickupDistance.hashCode());
        result = prime * result + ((this.actualPickupDistance == null) ? 0 : this.actualPickupDistance.hashCode());
        result = prime * result + ((this.estimatedDropDistance == null) ? 0 : this.estimatedDropDistance.hashCode());
        result = prime * result + ((this.actualDropDistance == null) ? 0 : this.actualDropDistance.hashCode());
        result = prime * result + ((this.pickupPath == null) ? 0 : this.pickupPath.hashCode());
        result = prime * result + ((this.dropPath == null) ? 0 : this.dropPath.hashCode());
        result = prime * result + ((this.estimatedAmount == null) ? 0 : this.estimatedAmount.hashCode());
        result = prime * result + ((this.actualAmount == null) ? 0 : this.actualAmount.hashCode());
        result = prime * result + ((this.discountAmount == null) ? 0 : this.discountAmount.hashCode());
        result = prime * result + ((this.paymentOrderId == null) ? 0 : this.paymentOrderId.hashCode());
        result = prime * result + ((this.paymentMode == null) ? 0 : this.paymentMode.hashCode());
        result = prime * result + ((this.rideRequestId == null) ? 0 : this.rideRequestId.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.serviceRegionId == null) ? 0 : this.serviceRegionId.hashCode());
        result = prime * result + ((this.versionId == null) ? 0 : this.versionId.hashCode());
        result = prime * result + ((this.tripAssignmentSoc == null) ? 0 : this.tripAssignmentSoc.hashCode());
        result = prime * result + ((this.tripAssignmentDte == null) ? 0 : this.tripAssignmentDte.hashCode());
        result = prime * result + ((this.tripStartDte == null) ? 0 : this.tripStartDte.hashCode());
        result = prime * result + ((this.tripCompletionDte == null) ? 0 : this.tripCompletionDte.hashCode());
        result = prime * result + ((this.estimatedPickupTimestamp == null) ? 0 : this.estimatedPickupTimestamp.hashCode());
        result = prime * result + ((this.destinationState == null) ? 0 : this.destinationState.hashCode());
        result = prime * result + ((this.actualStartTimestamp == null) ? 0 : this.actualStartTimestamp.hashCode());
        result = prime * result + ((this.assignedBy == null) ? 0 : this.assignedBy.hashCode());
        result = prime * result + ((this.rejectedBy == null) ? 0 : this.rejectedBy.hashCode());
        result = prime * result + ((this.cancellationEta == null) ? 0 : this.cancellationEta.hashCode());
        result = prime * result + ((this.promoCode == null) ? 0 : this.promoCode.hashCode());
        result = prime * result + ((this.rideCategory == null) ? 0 : this.rideCategory.hashCode());
        result = prime * result + ((this.otherFlags == null) ? 0 : this.otherFlags.hashCode());
        result = prime * result + ((this.actualPickupLat == null) ? 0 : this.actualPickupLat.hashCode());
        result = prime * result + ((this.actualPickupLong == null) ? 0 : this.actualPickupLong.hashCode());
        result = prime * result + ((this.bookedBy == null) ? 0 : this.bookedBy.hashCode());
        result = prime * result + ((this.eta == null) ? 0 : this.eta.hashCode());
        result = prime * result + ((this.etd == null) ? 0 : this.etd.hashCode());
        result = prime * result + ((this.dta == null) ? 0 : this.dta.hashCode());
        result = prime * result + ((this.dtd == null) ? 0 : this.dtd.hashCode());
        result = prime * result + ((this.driverNotMoving == null) ? 0 : this.driverNotMoving.hashCode());
        result = prime * result + ((this.noGpsPing == null) ? 0 : this.noGpsPing.hashCode());
        result = prime * result + ((this.currentSoc == null) ? 0 : this.currentSoc.hashCode());
        result = prime * result + ((this.currentDte == null) ? 0 : this.currentDte.hashCode());
        result = prime * result + ((this.vehicleModel == null) ? 0 : this.vehicleModel.hashCode());
        result = prime * result + ((this.requestType == null) ? 0 : this.requestType.hashCode());
        result = prime * result + ((this.bookingSource == null) ? 0 : this.bookingSource.hashCode());
        result = prime * result + ((this.bookingType == null) ? 0 : this.bookingType.hashCode());
        result = prime * result + ((this.isPremiumVehicleAssigned == null) ? 0 : this.isPremiumVehicleAssigned.hashCode());
        result = prime * result + ((this.isPremiumRentalRide == null) ? 0 : this.isPremiumRentalRide.hashCode());
        result = prime * result + ((this.rentalBreakupStr == null) ? 0 : this.rentalBreakupStr.hashCode());
        result = prime * result + ((this.stopsListStr == null) ? 0 : this.stopsListStr.hashCode());
        result = prime * result + ((this.isBookedForSomeoneElse == null) ? 0 : this.isBookedForSomeoneElse.hashCode());
        result = prime * result + ((this.bookedByRiderDataDtoStr == null) ? 0 : this.bookedByRiderDataDtoStr.hashCode());
        result = prime * result + ((this.riderStr == null) ? 0 : this.riderStr.hashCode());
        result = prime * result + ((this.driverStr == null) ? 0 : this.driverStr.hashCode());
        result = prime * result + ((this.cashToBeCollected == null) ? 0 : this.cashToBeCollected.hashCode());
        result = prime * result + ((this.bookingReferenceNumber == null) ? 0 : this.bookingReferenceNumber.hashCode());
        result = prime * result + ((this.flightNo == null) ? 0 : this.flightNo.hashCode());
        result = prime * result + ((this.verificationDetailsStr == null) ? 0 : this.verificationDetailsStr.hashCode());
        result = prime * result + ((this.rideId == null) ? 0 : this.rideId.hashCode());
        result = prime * result + ((this.driverActionTimestamp == null) ? 0 : this.driverActionTimestamp.hashCode());
        result = prime * result + ((this.priorityType == null) ? 0 : this.priorityType.hashCode());
        result = prime * result + ((this.priorityOrder == null) ? 0 : this.priorityOrder.hashCode());
        result = prime * result + ((this.delayTime == null) ? 0 : this.delayTime.hashCode());
        result = prime * result + ((this.cantCompleteRide == null) ? 0 : this.cantCompleteRide.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("LiveRide (");

        sb.append(id);
        sb.append(", ").append(riderId);
        sb.append(", ").append(driverId);
        sb.append(", ").append(rideState);
        sb.append(", ").append(rideType);
        sb.append(", ").append(riderType);
        sb.append(", ").append(vehicleNumber);
        sb.append(", ").append(pickUpTimestamp);
        sb.append(", ").append(arrivalTimestamp);
        sb.append(", ").append(dropTimestamp);
        sb.append(", ").append(assignTimestamp);
        sb.append(", ").append(noShowTimestamp);
        sb.append(", ").append(pickUpLocation);
        sb.append(", ").append(arrivalLocation);
        sb.append(", ").append(dropLocation);
        sb.append(", ").append(assignLocation);
        sb.append(", ").append(noShowLocation);
        sb.append(", ").append(pickUpLat);
        sb.append(", ").append(arrivalLat);
        sb.append(", ").append(dropLat);
        sb.append(", ").append(assignLat);
        sb.append(", ").append(noShowLat);
        sb.append(", ").append(pickUpLong);
        sb.append(", ").append(arrivalLong);
        sb.append(", ").append(dropLong);
        sb.append(", ").append(assignLong);
        sb.append(", ").append(noShowLong);
        sb.append(", ").append(tripStartSoc);
        sb.append(", ").append(tripCompleteSoc);
        sb.append(", ").append(platform);
        sb.append(", ").append(estimatedStartTimestamp);
        sb.append(", ").append(estimatedCompletionTimestamp);
        sb.append(", ").append(actualCompletionTimestamp);
        sb.append(", ").append(estimatedRideDistance);
        sb.append(", ").append(actualRideDistance);
        sb.append(", ").append(estimatedPickupDistance);
        sb.append(", ").append(actualPickupDistance);
        sb.append(", ").append(estimatedDropDistance);
        sb.append(", ").append(actualDropDistance);
        sb.append(", ").append(pickupPath);
        sb.append(", ").append(dropPath);
        sb.append(", ").append(estimatedAmount);
        sb.append(", ").append(actualAmount);
        sb.append(", ").append(discountAmount);
        sb.append(", ").append(paymentOrderId);
        sb.append(", ").append(paymentMode);
        sb.append(", ").append(rideRequestId);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(serviceRegionId);
        sb.append(", ").append(versionId);
        sb.append(", ").append(tripAssignmentSoc);
        sb.append(", ").append(tripAssignmentDte);
        sb.append(", ").append(tripStartDte);
        sb.append(", ").append(tripCompletionDte);
        sb.append(", ").append(estimatedPickupTimestamp);
        sb.append(", ").append(destinationState);
        sb.append(", ").append(actualStartTimestamp);
        sb.append(", ").append(assignedBy);
        sb.append(", ").append(rejectedBy);
        sb.append(", ").append(cancellationEta);
        sb.append(", ").append(promoCode);
        sb.append(", ").append(rideCategory);
        sb.append(", ").append(otherFlags);
        sb.append(", ").append(actualPickupLat);
        sb.append(", ").append(actualPickupLong);
        sb.append(", ").append(bookedBy);
        sb.append(", ").append(eta);
        sb.append(", ").append(etd);
        sb.append(", ").append(dta);
        sb.append(", ").append(dtd);
        sb.append(", ").append(driverNotMoving);
        sb.append(", ").append(noGpsPing);
        sb.append(", ").append(currentSoc);
        sb.append(", ").append(currentDte);
        sb.append(", ").append(vehicleModel);
        sb.append(", ").append(requestType);
        sb.append(", ").append(bookingSource);
        sb.append(", ").append(bookingType);
        sb.append(", ").append(isPremiumVehicleAssigned);
        sb.append(", ").append(isPremiumRentalRide);
        sb.append(", ").append(rentalBreakupStr);
        sb.append(", ").append(stopsListStr);
        sb.append(", ").append(isBookedForSomeoneElse);
        sb.append(", ").append(bookedByRiderDataDtoStr);
        sb.append(", ").append(riderStr);
        sb.append(", ").append(driverStr);
        sb.append(", ").append(cashToBeCollected);
        sb.append(", ").append(bookingReferenceNumber);
        sb.append(", ").append(flightNo);
        sb.append(", ").append(verificationDetailsStr);
        sb.append(", ").append(rideId);
        sb.append(", ").append(driverActionTimestamp);
        sb.append(", ").append(priorityType);
        sb.append(", ").append(priorityOrder);
        sb.append(", ").append(delayTime);
        sb.append(", ").append(cantCompleteRide);

        sb.append(")");
        return sb.toString();
    }
}
