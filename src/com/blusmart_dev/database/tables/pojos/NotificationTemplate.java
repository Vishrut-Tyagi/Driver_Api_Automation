/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationTemplate implements Serializable {

    private static final long serialVersionUID = 809585067;

    private UInteger id;
    private String   title;
    private String   body;
    private String   templateMetadata;
    private Byte     isActive;
    private Long     createdTimestamp;
    private Long     lastUpdatedTimestamp;
    private UInteger createdBy;
    private UInteger lastUpdatedBy;
    private String   informationType;
    private String   actionType;
    private String   notificationType;
    private String   templateKey;

    public NotificationTemplate() {}

    public NotificationTemplate(NotificationTemplate value) {
        this.id = value.id;
        this.title = value.title;
        this.body = value.body;
        this.templateMetadata = value.templateMetadata;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.informationType = value.informationType;
        this.actionType = value.actionType;
        this.notificationType = value.notificationType;
        this.templateKey = value.templateKey;
    }

    public NotificationTemplate(
        UInteger id,
        String   title,
        String   body,
        String   templateMetadata,
        Byte     isActive,
        Long     createdTimestamp,
        Long     lastUpdatedTimestamp,
        UInteger createdBy,
        UInteger lastUpdatedBy,
        String   informationType,
        String   actionType,
        String   notificationType,
        String   templateKey
    ) {
        this.id = id;
        this.title = title;
        this.body = body;
        this.templateMetadata = templateMetadata;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.informationType = informationType;
        this.actionType = actionType;
        this.notificationType = notificationType;
        this.templateKey = templateKey;
    }

    public UInteger getId() {
        return this.id;
    }

    public NotificationTemplate setId(UInteger id) {
        this.id = id;
        return this;
    }

    public String getTitle() {
        return this.title;
    }

    public NotificationTemplate setTitle(String title) {
        this.title = title;
        return this;
    }

    public String getBody() {
        return this.body;
    }

    public NotificationTemplate setBody(String body) {
        this.body = body;
        return this;
    }

    public String getTemplateMetadata() {
        return this.templateMetadata;
    }

    public NotificationTemplate setTemplateMetadata(String templateMetadata) {
        this.templateMetadata = templateMetadata;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public NotificationTemplate setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public NotificationTemplate setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public NotificationTemplate setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public NotificationTemplate setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public NotificationTemplate setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public String getInformationType() {
        return this.informationType;
    }

    public NotificationTemplate setInformationType(String informationType) {
        this.informationType = informationType;
        return this;
    }

    public String getActionType() {
        return this.actionType;
    }

    public NotificationTemplate setActionType(String actionType) {
        this.actionType = actionType;
        return this;
    }

    public String getNotificationType() {
        return this.notificationType;
    }

    public NotificationTemplate setNotificationType(String notificationType) {
        this.notificationType = notificationType;
        return this;
    }

    public String getTemplateKey() {
        return this.templateKey;
    }

    public NotificationTemplate setTemplateKey(String templateKey) {
        this.templateKey = templateKey;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NotificationTemplate other = (NotificationTemplate) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (title == null) {
            if (other.title != null)
                return false;
        }
        else if (!title.equals(other.title))
            return false;
        if (body == null) {
            if (other.body != null)
                return false;
        }
        else if (!body.equals(other.body))
            return false;
        if (templateMetadata == null) {
            if (other.templateMetadata != null)
                return false;
        }
        else if (!templateMetadata.equals(other.templateMetadata))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (informationType == null) {
            if (other.informationType != null)
                return false;
        }
        else if (!informationType.equals(other.informationType))
            return false;
        if (actionType == null) {
            if (other.actionType != null)
                return false;
        }
        else if (!actionType.equals(other.actionType))
            return false;
        if (notificationType == null) {
            if (other.notificationType != null)
                return false;
        }
        else if (!notificationType.equals(other.notificationType))
            return false;
        if (templateKey == null) {
            if (other.templateKey != null)
                return false;
        }
        else if (!templateKey.equals(other.templateKey))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.body == null) ? 0 : this.body.hashCode());
        result = prime * result + ((this.templateMetadata == null) ? 0 : this.templateMetadata.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.informationType == null) ? 0 : this.informationType.hashCode());
        result = prime * result + ((this.actionType == null) ? 0 : this.actionType.hashCode());
        result = prime * result + ((this.notificationType == null) ? 0 : this.notificationType.hashCode());
        result = prime * result + ((this.templateKey == null) ? 0 : this.templateKey.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NotificationTemplate (");

        sb.append(id);
        sb.append(", ").append(title);
        sb.append(", ").append(body);
        sb.append(", ").append(templateMetadata);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(informationType);
        sb.append(", ").append(actionType);
        sb.append(", ").append(notificationType);
        sb.append(", ").append(templateKey);

        sb.append(")");
        return sb.toString();
    }
}
