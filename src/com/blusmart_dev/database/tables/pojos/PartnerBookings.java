/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartnerBookings implements Serializable {

    private static final long serialVersionUID = 311531197;

    private Integer  id;
    private String   searchId;
    private UInteger rideRequestId;
    private UInteger rideId;
    private Long     createdAt;
    private Long     updatedAt;
    private String   bookingReferenceNumber;
    private String   bookingStatus;
    private String   partnerName;
    private Byte     isActive;
    private String   note;
    private UInteger paymentOrderId;
    private UInteger pricingDetailsId;
    private UInteger riderId;
    private UInteger driverId;
    private UInteger verficationCode;
    private String   partyReferenceNumber;
    private String   cancelledBy;
    private String   requestType;

    public PartnerBookings() {}

    public PartnerBookings(PartnerBookings value) {
        this.id = value.id;
        this.searchId = value.searchId;
        this.rideRequestId = value.rideRequestId;
        this.rideId = value.rideId;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.bookingReferenceNumber = value.bookingReferenceNumber;
        this.bookingStatus = value.bookingStatus;
        this.partnerName = value.partnerName;
        this.isActive = value.isActive;
        this.note = value.note;
        this.paymentOrderId = value.paymentOrderId;
        this.pricingDetailsId = value.pricingDetailsId;
        this.riderId = value.riderId;
        this.driverId = value.driverId;
        this.verficationCode = value.verficationCode;
        this.partyReferenceNumber = value.partyReferenceNumber;
        this.cancelledBy = value.cancelledBy;
        this.requestType = value.requestType;
    }

    public PartnerBookings(
        Integer  id,
        String   searchId,
        UInteger rideRequestId,
        UInteger rideId,
        Long     createdAt,
        Long     updatedAt,
        String   bookingReferenceNumber,
        String   bookingStatus,
        String   partnerName,
        Byte     isActive,
        String   note,
        UInteger paymentOrderId,
        UInteger pricingDetailsId,
        UInteger riderId,
        UInteger driverId,
        UInteger verficationCode,
        String   partyReferenceNumber,
        String   cancelledBy,
        String   requestType
    ) {
        this.id = id;
        this.searchId = searchId;
        this.rideRequestId = rideRequestId;
        this.rideId = rideId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.bookingReferenceNumber = bookingReferenceNumber;
        this.bookingStatus = bookingStatus;
        this.partnerName = partnerName;
        this.isActive = isActive;
        this.note = note;
        this.paymentOrderId = paymentOrderId;
        this.pricingDetailsId = pricingDetailsId;
        this.riderId = riderId;
        this.driverId = driverId;
        this.verficationCode = verficationCode;
        this.partyReferenceNumber = partyReferenceNumber;
        this.cancelledBy = cancelledBy;
        this.requestType = requestType;
    }

    public Integer getId() {
        return this.id;
    }

    public PartnerBookings setId(Integer id) {
        this.id = id;
        return this;
    }

    public String getSearchId() {
        return this.searchId;
    }

    public PartnerBookings setSearchId(String searchId) {
        this.searchId = searchId;
        return this;
    }

    public UInteger getRideRequestId() {
        return this.rideRequestId;
    }

    public PartnerBookings setRideRequestId(UInteger rideRequestId) {
        this.rideRequestId = rideRequestId;
        return this;
    }

    public UInteger getRideId() {
        return this.rideId;
    }

    public PartnerBookings setRideId(UInteger rideId) {
        this.rideId = rideId;
        return this;
    }

    public Long getCreatedAt() {
        return this.createdAt;
    }

    public PartnerBookings setCreatedAt(Long createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    public Long getUpdatedAt() {
        return this.updatedAt;
    }

    public PartnerBookings setUpdatedAt(Long updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    public String getBookingReferenceNumber() {
        return this.bookingReferenceNumber;
    }

    public PartnerBookings setBookingReferenceNumber(String bookingReferenceNumber) {
        this.bookingReferenceNumber = bookingReferenceNumber;
        return this;
    }

    public String getBookingStatus() {
        return this.bookingStatus;
    }

    public PartnerBookings setBookingStatus(String bookingStatus) {
        this.bookingStatus = bookingStatus;
        return this;
    }

    public String getPartnerName() {
        return this.partnerName;
    }

    public PartnerBookings setPartnerName(String partnerName) {
        this.partnerName = partnerName;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public PartnerBookings setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public String getNote() {
        return this.note;
    }

    public PartnerBookings setNote(String note) {
        this.note = note;
        return this;
    }

    public UInteger getPaymentOrderId() {
        return this.paymentOrderId;
    }

    public PartnerBookings setPaymentOrderId(UInteger paymentOrderId) {
        this.paymentOrderId = paymentOrderId;
        return this;
    }

    public UInteger getPricingDetailsId() {
        return this.pricingDetailsId;
    }

    public PartnerBookings setPricingDetailsId(UInteger pricingDetailsId) {
        this.pricingDetailsId = pricingDetailsId;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public PartnerBookings setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public PartnerBookings setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public UInteger getVerficationCode() {
        return this.verficationCode;
    }

    public PartnerBookings setVerficationCode(UInteger verficationCode) {
        this.verficationCode = verficationCode;
        return this;
    }

    public String getPartyReferenceNumber() {
        return this.partyReferenceNumber;
    }

    public PartnerBookings setPartyReferenceNumber(String partyReferenceNumber) {
        this.partyReferenceNumber = partyReferenceNumber;
        return this;
    }

    public String getCancelledBy() {
        return this.cancelledBy;
    }

    public PartnerBookings setCancelledBy(String cancelledBy) {
        this.cancelledBy = cancelledBy;
        return this;
    }

    public String getRequestType() {
        return this.requestType;
    }

    public PartnerBookings setRequestType(String requestType) {
        this.requestType = requestType;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PartnerBookings other = (PartnerBookings) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (searchId == null) {
            if (other.searchId != null)
                return false;
        }
        else if (!searchId.equals(other.searchId))
            return false;
        if (rideRequestId == null) {
            if (other.rideRequestId != null)
                return false;
        }
        else if (!rideRequestId.equals(other.rideRequestId))
            return false;
        if (rideId == null) {
            if (other.rideId != null)
                return false;
        }
        else if (!rideId.equals(other.rideId))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!updatedAt.equals(other.updatedAt))
            return false;
        if (bookingReferenceNumber == null) {
            if (other.bookingReferenceNumber != null)
                return false;
        }
        else if (!bookingReferenceNumber.equals(other.bookingReferenceNumber))
            return false;
        if (bookingStatus == null) {
            if (other.bookingStatus != null)
                return false;
        }
        else if (!bookingStatus.equals(other.bookingStatus))
            return false;
        if (partnerName == null) {
            if (other.partnerName != null)
                return false;
        }
        else if (!partnerName.equals(other.partnerName))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (note == null) {
            if (other.note != null)
                return false;
        }
        else if (!note.equals(other.note))
            return false;
        if (paymentOrderId == null) {
            if (other.paymentOrderId != null)
                return false;
        }
        else if (!paymentOrderId.equals(other.paymentOrderId))
            return false;
        if (pricingDetailsId == null) {
            if (other.pricingDetailsId != null)
                return false;
        }
        else if (!pricingDetailsId.equals(other.pricingDetailsId))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (verficationCode == null) {
            if (other.verficationCode != null)
                return false;
        }
        else if (!verficationCode.equals(other.verficationCode))
            return false;
        if (partyReferenceNumber == null) {
            if (other.partyReferenceNumber != null)
                return false;
        }
        else if (!partyReferenceNumber.equals(other.partyReferenceNumber))
            return false;
        if (cancelledBy == null) {
            if (other.cancelledBy != null)
                return false;
        }
        else if (!cancelledBy.equals(other.cancelledBy))
            return false;
        if (requestType == null) {
            if (other.requestType != null)
                return false;
        }
        else if (!requestType.equals(other.requestType))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.searchId == null) ? 0 : this.searchId.hashCode());
        result = prime * result + ((this.rideRequestId == null) ? 0 : this.rideRequestId.hashCode());
        result = prime * result + ((this.rideId == null) ? 0 : this.rideId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.bookingReferenceNumber == null) ? 0 : this.bookingReferenceNumber.hashCode());
        result = prime * result + ((this.bookingStatus == null) ? 0 : this.bookingStatus.hashCode());
        result = prime * result + ((this.partnerName == null) ? 0 : this.partnerName.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.note == null) ? 0 : this.note.hashCode());
        result = prime * result + ((this.paymentOrderId == null) ? 0 : this.paymentOrderId.hashCode());
        result = prime * result + ((this.pricingDetailsId == null) ? 0 : this.pricingDetailsId.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.verficationCode == null) ? 0 : this.verficationCode.hashCode());
        result = prime * result + ((this.partyReferenceNumber == null) ? 0 : this.partyReferenceNumber.hashCode());
        result = prime * result + ((this.cancelledBy == null) ? 0 : this.cancelledBy.hashCode());
        result = prime * result + ((this.requestType == null) ? 0 : this.requestType.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PartnerBookings (");

        sb.append(id);
        sb.append(", ").append(searchId);
        sb.append(", ").append(rideRequestId);
        sb.append(", ").append(rideId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(bookingReferenceNumber);
        sb.append(", ").append(bookingStatus);
        sb.append(", ").append(partnerName);
        sb.append(", ").append(isActive);
        sb.append(", ").append(note);
        sb.append(", ").append(paymentOrderId);
        sb.append(", ").append(pricingDetailsId);
        sb.append(", ").append(riderId);
        sb.append(", ").append(driverId);
        sb.append(", ").append(verficationCode);
        sb.append(", ").append(partyReferenceNumber);
        sb.append(", ").append(cancelledBy);
        sb.append(", ").append(requestType);

        sb.append(")");
        return sb.toString();
    }
}
