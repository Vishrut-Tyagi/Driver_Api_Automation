/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaytmPreauthAccessTokenAudit implements Serializable {

    private static final long serialVersionUID = 218020188;

    private Integer  id;
    private Integer  paytmPreauthAccessTokenId;
    private UInteger riderId;
    private String   mobileNumber;
    private String   status;
    private Integer  statusCode;
    private String   message;
    private String   response;
    private String   state;
    private String   accessToken;
    private String   accessTokenExpires;
    private String   paytmPreAuthState;
    private String   apiRequestJson;
    private String   apiResponseJson;
    private Long     createdTimestamp;

    public PaytmPreauthAccessTokenAudit() {}

    public PaytmPreauthAccessTokenAudit(PaytmPreauthAccessTokenAudit value) {
        this.id = value.id;
        this.paytmPreauthAccessTokenId = value.paytmPreauthAccessTokenId;
        this.riderId = value.riderId;
        this.mobileNumber = value.mobileNumber;
        this.status = value.status;
        this.statusCode = value.statusCode;
        this.message = value.message;
        this.response = value.response;
        this.state = value.state;
        this.accessToken = value.accessToken;
        this.accessTokenExpires = value.accessTokenExpires;
        this.paytmPreAuthState = value.paytmPreAuthState;
        this.apiRequestJson = value.apiRequestJson;
        this.apiResponseJson = value.apiResponseJson;
        this.createdTimestamp = value.createdTimestamp;
    }

    public PaytmPreauthAccessTokenAudit(
        Integer  id,
        Integer  paytmPreauthAccessTokenId,
        UInteger riderId,
        String   mobileNumber,
        String   status,
        Integer  statusCode,
        String   message,
        String   response,
        String   state,
        String   accessToken,
        String   accessTokenExpires,
        String   paytmPreAuthState,
        String   apiRequestJson,
        String   apiResponseJson,
        Long     createdTimestamp
    ) {
        this.id = id;
        this.paytmPreauthAccessTokenId = paytmPreauthAccessTokenId;
        this.riderId = riderId;
        this.mobileNumber = mobileNumber;
        this.status = status;
        this.statusCode = statusCode;
        this.message = message;
        this.response = response;
        this.state = state;
        this.accessToken = accessToken;
        this.accessTokenExpires = accessTokenExpires;
        this.paytmPreAuthState = paytmPreAuthState;
        this.apiRequestJson = apiRequestJson;
        this.apiResponseJson = apiResponseJson;
        this.createdTimestamp = createdTimestamp;
    }

    public Integer getId() {
        return this.id;
    }

    public PaytmPreauthAccessTokenAudit setId(Integer id) {
        this.id = id;
        return this;
    }

    public Integer getPaytmPreauthAccessTokenId() {
        return this.paytmPreauthAccessTokenId;
    }

    public PaytmPreauthAccessTokenAudit setPaytmPreauthAccessTokenId(Integer paytmPreauthAccessTokenId) {
        this.paytmPreauthAccessTokenId = paytmPreauthAccessTokenId;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public PaytmPreauthAccessTokenAudit setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public String getMobileNumber() {
        return this.mobileNumber;
    }

    public PaytmPreauthAccessTokenAudit setMobileNumber(String mobileNumber) {
        this.mobileNumber = mobileNumber;
        return this;
    }

    public String getStatus() {
        return this.status;
    }

    public PaytmPreauthAccessTokenAudit setStatus(String status) {
        this.status = status;
        return this;
    }

    public Integer getStatusCode() {
        return this.statusCode;
    }

    public PaytmPreauthAccessTokenAudit setStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }

    public String getMessage() {
        return this.message;
    }

    public PaytmPreauthAccessTokenAudit setMessage(String message) {
        this.message = message;
        return this;
    }

    public String getResponse() {
        return this.response;
    }

    public PaytmPreauthAccessTokenAudit setResponse(String response) {
        this.response = response;
        return this;
    }

    public String getState() {
        return this.state;
    }

    public PaytmPreauthAccessTokenAudit setState(String state) {
        this.state = state;
        return this;
    }

    public String getAccessToken() {
        return this.accessToken;
    }

    public PaytmPreauthAccessTokenAudit setAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    public String getAccessTokenExpires() {
        return this.accessTokenExpires;
    }

    public PaytmPreauthAccessTokenAudit setAccessTokenExpires(String accessTokenExpires) {
        this.accessTokenExpires = accessTokenExpires;
        return this;
    }

    public String getPaytmPreAuthState() {
        return this.paytmPreAuthState;
    }

    public PaytmPreauthAccessTokenAudit setPaytmPreAuthState(String paytmPreAuthState) {
        this.paytmPreAuthState = paytmPreAuthState;
        return this;
    }

    public String getApiRequestJson() {
        return this.apiRequestJson;
    }

    public PaytmPreauthAccessTokenAudit setApiRequestJson(String apiRequestJson) {
        this.apiRequestJson = apiRequestJson;
        return this;
    }

    public String getApiResponseJson() {
        return this.apiResponseJson;
    }

    public PaytmPreauthAccessTokenAudit setApiResponseJson(String apiResponseJson) {
        this.apiResponseJson = apiResponseJson;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public PaytmPreauthAccessTokenAudit setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PaytmPreauthAccessTokenAudit other = (PaytmPreauthAccessTokenAudit) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (paytmPreauthAccessTokenId == null) {
            if (other.paytmPreauthAccessTokenId != null)
                return false;
        }
        else if (!paytmPreauthAccessTokenId.equals(other.paytmPreauthAccessTokenId))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (mobileNumber == null) {
            if (other.mobileNumber != null)
                return false;
        }
        else if (!mobileNumber.equals(other.mobileNumber))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (statusCode == null) {
            if (other.statusCode != null)
                return false;
        }
        else if (!statusCode.equals(other.statusCode))
            return false;
        if (message == null) {
            if (other.message != null)
                return false;
        }
        else if (!message.equals(other.message))
            return false;
        if (response == null) {
            if (other.response != null)
                return false;
        }
        else if (!response.equals(other.response))
            return false;
        if (state == null) {
            if (other.state != null)
                return false;
        }
        else if (!state.equals(other.state))
            return false;
        if (accessToken == null) {
            if (other.accessToken != null)
                return false;
        }
        else if (!accessToken.equals(other.accessToken))
            return false;
        if (accessTokenExpires == null) {
            if (other.accessTokenExpires != null)
                return false;
        }
        else if (!accessTokenExpires.equals(other.accessTokenExpires))
            return false;
        if (paytmPreAuthState == null) {
            if (other.paytmPreAuthState != null)
                return false;
        }
        else if (!paytmPreAuthState.equals(other.paytmPreAuthState))
            return false;
        if (apiRequestJson == null) {
            if (other.apiRequestJson != null)
                return false;
        }
        else if (!apiRequestJson.equals(other.apiRequestJson))
            return false;
        if (apiResponseJson == null) {
            if (other.apiResponseJson != null)
                return false;
        }
        else if (!apiResponseJson.equals(other.apiResponseJson))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.paytmPreauthAccessTokenId == null) ? 0 : this.paytmPreauthAccessTokenId.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.mobileNumber == null) ? 0 : this.mobileNumber.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.statusCode == null) ? 0 : this.statusCode.hashCode());
        result = prime * result + ((this.message == null) ? 0 : this.message.hashCode());
        result = prime * result + ((this.response == null) ? 0 : this.response.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.accessToken == null) ? 0 : this.accessToken.hashCode());
        result = prime * result + ((this.accessTokenExpires == null) ? 0 : this.accessTokenExpires.hashCode());
        result = prime * result + ((this.paytmPreAuthState == null) ? 0 : this.paytmPreAuthState.hashCode());
        result = prime * result + ((this.apiRequestJson == null) ? 0 : this.apiRequestJson.hashCode());
        result = prime * result + ((this.apiResponseJson == null) ? 0 : this.apiResponseJson.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PaytmPreauthAccessTokenAudit (");

        sb.append(id);
        sb.append(", ").append(paytmPreauthAccessTokenId);
        sb.append(", ").append(riderId);
        sb.append(", ").append(mobileNumber);
        sb.append(", ").append(status);
        sb.append(", ").append(statusCode);
        sb.append(", ").append(message);
        sb.append(", ").append(response);
        sb.append(", ").append(state);
        sb.append(", ").append(accessToken);
        sb.append(", ").append(accessTokenExpires);
        sb.append(", ").append(paytmPreAuthState);
        sb.append(", ").append(apiRequestJson);
        sb.append(", ").append(apiResponseJson);
        sb.append(", ").append(createdTimestamp);

        sb.append(")");
        return sb.toString();
    }
}
