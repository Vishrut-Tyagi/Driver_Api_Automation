/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PriceCategoryMapping implements Serializable {

    private static final long serialVersionUID = 42741519;

    private UInteger id;
    private String   categoryCode;
    private UInteger basePrice;
    private String   packageCode;
    private Byte     isActive;
    private Long     createdTimestamp;
    private Long     lastUpdatedTimestamp;
    private UInteger createdBy;
    private UInteger lastUpdatedBy;
    private String   otherFlags;

    public PriceCategoryMapping() {}

    public PriceCategoryMapping(PriceCategoryMapping value) {
        this.id = value.id;
        this.categoryCode = value.categoryCode;
        this.basePrice = value.basePrice;
        this.packageCode = value.packageCode;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.otherFlags = value.otherFlags;
    }

    public PriceCategoryMapping(
        UInteger id,
        String   categoryCode,
        UInteger basePrice,
        String   packageCode,
        Byte     isActive,
        Long     createdTimestamp,
        Long     lastUpdatedTimestamp,
        UInteger createdBy,
        UInteger lastUpdatedBy,
        String   otherFlags
    ) {
        this.id = id;
        this.categoryCode = categoryCode;
        this.basePrice = basePrice;
        this.packageCode = packageCode;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.otherFlags = otherFlags;
    }

    public UInteger getId() {
        return this.id;
    }

    public PriceCategoryMapping setId(UInteger id) {
        this.id = id;
        return this;
    }

    public String getCategoryCode() {
        return this.categoryCode;
    }

    public PriceCategoryMapping setCategoryCode(String categoryCode) {
        this.categoryCode = categoryCode;
        return this;
    }

    public UInteger getBasePrice() {
        return this.basePrice;
    }

    public PriceCategoryMapping setBasePrice(UInteger basePrice) {
        this.basePrice = basePrice;
        return this;
    }

    public String getPackageCode() {
        return this.packageCode;
    }

    public PriceCategoryMapping setPackageCode(String packageCode) {
        this.packageCode = packageCode;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public PriceCategoryMapping setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public PriceCategoryMapping setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public PriceCategoryMapping setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public PriceCategoryMapping setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public PriceCategoryMapping setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public String getOtherFlags() {
        return this.otherFlags;
    }

    public PriceCategoryMapping setOtherFlags(String otherFlags) {
        this.otherFlags = otherFlags;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PriceCategoryMapping other = (PriceCategoryMapping) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (categoryCode == null) {
            if (other.categoryCode != null)
                return false;
        }
        else if (!categoryCode.equals(other.categoryCode))
            return false;
        if (basePrice == null) {
            if (other.basePrice != null)
                return false;
        }
        else if (!basePrice.equals(other.basePrice))
            return false;
        if (packageCode == null) {
            if (other.packageCode != null)
                return false;
        }
        else if (!packageCode.equals(other.packageCode))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (otherFlags == null) {
            if (other.otherFlags != null)
                return false;
        }
        else if (!otherFlags.equals(other.otherFlags))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.categoryCode == null) ? 0 : this.categoryCode.hashCode());
        result = prime * result + ((this.basePrice == null) ? 0 : this.basePrice.hashCode());
        result = prime * result + ((this.packageCode == null) ? 0 : this.packageCode.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.otherFlags == null) ? 0 : this.otherFlags.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PriceCategoryMapping (");

        sb.append(id);
        sb.append(", ").append(categoryCode);
        sb.append(", ").append(basePrice);
        sb.append(", ").append(packageCode);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(otherFlags);

        sb.append(")");
        return sb.toString();
    }
}
