/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PricingDetails implements Serializable {

    private static final long serialVersionUID = 1550625425;

    private UInteger   id;
    private UInteger   rideRequestId;
    private BigDecimal estimatedTotalAmount;
    private BigDecimal estimatedFareAmount;
    private BigDecimal estimatedDiscountAmount;
    private BigDecimal estimatedDiscountPercent;
    private BigDecimal estimatedTaxAmount;
    private BigDecimal estimatedTaxPercent;
    private String     estimatedDiscountType;
    private BigDecimal actualTotalAmount;
    private BigDecimal actualFareAmount;
    private BigDecimal actualDiscountAmount;
    private BigDecimal actualDiscountPercent;
    private BigDecimal actualTaxAmount;
    private BigDecimal actualTaxPercent;
    private String     actualDiscountType;
    private UInteger   pricingModelId;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private BigDecimal estimatedAdditionalAmount;
    private BigDecimal actualAdditionalAmount;
    private String     breakUpDetails;
    private BigDecimal prevOutstandingAmount;
    private BigDecimal pendingAmount;
    private BigDecimal amountPaid;
    private BigDecimal estimatedCashbackAmount;
    private BigDecimal estimatedCashbackPercent;
    private String     estimatedCashbackType;
    private BigDecimal actualCashbackAmount;
    private BigDecimal actualCashbackPercent;
    private String     actualCashbackType;
    private BigDecimal estimatedPromotionalCredits;
    private BigDecimal actualPromotionalCredits;

    public PricingDetails() {}

    public PricingDetails(PricingDetails value) {
        this.id = value.id;
        this.rideRequestId = value.rideRequestId;
        this.estimatedTotalAmount = value.estimatedTotalAmount;
        this.estimatedFareAmount = value.estimatedFareAmount;
        this.estimatedDiscountAmount = value.estimatedDiscountAmount;
        this.estimatedDiscountPercent = value.estimatedDiscountPercent;
        this.estimatedTaxAmount = value.estimatedTaxAmount;
        this.estimatedTaxPercent = value.estimatedTaxPercent;
        this.estimatedDiscountType = value.estimatedDiscountType;
        this.actualTotalAmount = value.actualTotalAmount;
        this.actualFareAmount = value.actualFareAmount;
        this.actualDiscountAmount = value.actualDiscountAmount;
        this.actualDiscountPercent = value.actualDiscountPercent;
        this.actualTaxAmount = value.actualTaxAmount;
        this.actualTaxPercent = value.actualTaxPercent;
        this.actualDiscountType = value.actualDiscountType;
        this.pricingModelId = value.pricingModelId;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.estimatedAdditionalAmount = value.estimatedAdditionalAmount;
        this.actualAdditionalAmount = value.actualAdditionalAmount;
        this.breakUpDetails = value.breakUpDetails;
        this.prevOutstandingAmount = value.prevOutstandingAmount;
        this.pendingAmount = value.pendingAmount;
        this.amountPaid = value.amountPaid;
        this.estimatedCashbackAmount = value.estimatedCashbackAmount;
        this.estimatedCashbackPercent = value.estimatedCashbackPercent;
        this.estimatedCashbackType = value.estimatedCashbackType;
        this.actualCashbackAmount = value.actualCashbackAmount;
        this.actualCashbackPercent = value.actualCashbackPercent;
        this.actualCashbackType = value.actualCashbackType;
        this.estimatedPromotionalCredits = value.estimatedPromotionalCredits;
        this.actualPromotionalCredits = value.actualPromotionalCredits;
    }

    public PricingDetails(
        UInteger   id,
        UInteger   rideRequestId,
        BigDecimal estimatedTotalAmount,
        BigDecimal estimatedFareAmount,
        BigDecimal estimatedDiscountAmount,
        BigDecimal estimatedDiscountPercent,
        BigDecimal estimatedTaxAmount,
        BigDecimal estimatedTaxPercent,
        String     estimatedDiscountType,
        BigDecimal actualTotalAmount,
        BigDecimal actualFareAmount,
        BigDecimal actualDiscountAmount,
        BigDecimal actualDiscountPercent,
        BigDecimal actualTaxAmount,
        BigDecimal actualTaxPercent,
        String     actualDiscountType,
        UInteger   pricingModelId,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        BigDecimal estimatedAdditionalAmount,
        BigDecimal actualAdditionalAmount,
        String     breakUpDetails,
        BigDecimal prevOutstandingAmount,
        BigDecimal pendingAmount,
        BigDecimal amountPaid,
        BigDecimal estimatedCashbackAmount,
        BigDecimal estimatedCashbackPercent,
        String     estimatedCashbackType,
        BigDecimal actualCashbackAmount,
        BigDecimal actualCashbackPercent,
        String     actualCashbackType,
        BigDecimal estimatedPromotionalCredits,
        BigDecimal actualPromotionalCredits
    ) {
        this.id = id;
        this.rideRequestId = rideRequestId;
        this.estimatedTotalAmount = estimatedTotalAmount;
        this.estimatedFareAmount = estimatedFareAmount;
        this.estimatedDiscountAmount = estimatedDiscountAmount;
        this.estimatedDiscountPercent = estimatedDiscountPercent;
        this.estimatedTaxAmount = estimatedTaxAmount;
        this.estimatedTaxPercent = estimatedTaxPercent;
        this.estimatedDiscountType = estimatedDiscountType;
        this.actualTotalAmount = actualTotalAmount;
        this.actualFareAmount = actualFareAmount;
        this.actualDiscountAmount = actualDiscountAmount;
        this.actualDiscountPercent = actualDiscountPercent;
        this.actualTaxAmount = actualTaxAmount;
        this.actualTaxPercent = actualTaxPercent;
        this.actualDiscountType = actualDiscountType;
        this.pricingModelId = pricingModelId;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.estimatedAdditionalAmount = estimatedAdditionalAmount;
        this.actualAdditionalAmount = actualAdditionalAmount;
        this.breakUpDetails = breakUpDetails;
        this.prevOutstandingAmount = prevOutstandingAmount;
        this.pendingAmount = pendingAmount;
        this.amountPaid = amountPaid;
        this.estimatedCashbackAmount = estimatedCashbackAmount;
        this.estimatedCashbackPercent = estimatedCashbackPercent;
        this.estimatedCashbackType = estimatedCashbackType;
        this.actualCashbackAmount = actualCashbackAmount;
        this.actualCashbackPercent = actualCashbackPercent;
        this.actualCashbackType = actualCashbackType;
        this.estimatedPromotionalCredits = estimatedPromotionalCredits;
        this.actualPromotionalCredits = actualPromotionalCredits;
    }

    public UInteger getId() {
        return this.id;
    }

    public PricingDetails setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRideRequestId() {
        return this.rideRequestId;
    }

    public PricingDetails setRideRequestId(UInteger rideRequestId) {
        this.rideRequestId = rideRequestId;
        return this;
    }

    public BigDecimal getEstimatedTotalAmount() {
        return this.estimatedTotalAmount;
    }

    public PricingDetails setEstimatedTotalAmount(BigDecimal estimatedTotalAmount) {
        this.estimatedTotalAmount = estimatedTotalAmount;
        return this;
    }

    public BigDecimal getEstimatedFareAmount() {
        return this.estimatedFareAmount;
    }

    public PricingDetails setEstimatedFareAmount(BigDecimal estimatedFareAmount) {
        this.estimatedFareAmount = estimatedFareAmount;
        return this;
    }

    public BigDecimal getEstimatedDiscountAmount() {
        return this.estimatedDiscountAmount;
    }

    public PricingDetails setEstimatedDiscountAmount(BigDecimal estimatedDiscountAmount) {
        this.estimatedDiscountAmount = estimatedDiscountAmount;
        return this;
    }

    public BigDecimal getEstimatedDiscountPercent() {
        return this.estimatedDiscountPercent;
    }

    public PricingDetails setEstimatedDiscountPercent(BigDecimal estimatedDiscountPercent) {
        this.estimatedDiscountPercent = estimatedDiscountPercent;
        return this;
    }

    public BigDecimal getEstimatedTaxAmount() {
        return this.estimatedTaxAmount;
    }

    public PricingDetails setEstimatedTaxAmount(BigDecimal estimatedTaxAmount) {
        this.estimatedTaxAmount = estimatedTaxAmount;
        return this;
    }

    public BigDecimal getEstimatedTaxPercent() {
        return this.estimatedTaxPercent;
    }

    public PricingDetails setEstimatedTaxPercent(BigDecimal estimatedTaxPercent) {
        this.estimatedTaxPercent = estimatedTaxPercent;
        return this;
    }

    public String getEstimatedDiscountType() {
        return this.estimatedDiscountType;
    }

    public PricingDetails setEstimatedDiscountType(String estimatedDiscountType) {
        this.estimatedDiscountType = estimatedDiscountType;
        return this;
    }

    public BigDecimal getActualTotalAmount() {
        return this.actualTotalAmount;
    }

    public PricingDetails setActualTotalAmount(BigDecimal actualTotalAmount) {
        this.actualTotalAmount = actualTotalAmount;
        return this;
    }

    public BigDecimal getActualFareAmount() {
        return this.actualFareAmount;
    }

    public PricingDetails setActualFareAmount(BigDecimal actualFareAmount) {
        this.actualFareAmount = actualFareAmount;
        return this;
    }

    public BigDecimal getActualDiscountAmount() {
        return this.actualDiscountAmount;
    }

    public PricingDetails setActualDiscountAmount(BigDecimal actualDiscountAmount) {
        this.actualDiscountAmount = actualDiscountAmount;
        return this;
    }

    public BigDecimal getActualDiscountPercent() {
        return this.actualDiscountPercent;
    }

    public PricingDetails setActualDiscountPercent(BigDecimal actualDiscountPercent) {
        this.actualDiscountPercent = actualDiscountPercent;
        return this;
    }

    public BigDecimal getActualTaxAmount() {
        return this.actualTaxAmount;
    }

    public PricingDetails setActualTaxAmount(BigDecimal actualTaxAmount) {
        this.actualTaxAmount = actualTaxAmount;
        return this;
    }

    public BigDecimal getActualTaxPercent() {
        return this.actualTaxPercent;
    }

    public PricingDetails setActualTaxPercent(BigDecimal actualTaxPercent) {
        this.actualTaxPercent = actualTaxPercent;
        return this;
    }

    public String getActualDiscountType() {
        return this.actualDiscountType;
    }

    public PricingDetails setActualDiscountType(String actualDiscountType) {
        this.actualDiscountType = actualDiscountType;
        return this;
    }

    public UInteger getPricingModelId() {
        return this.pricingModelId;
    }

    public PricingDetails setPricingModelId(UInteger pricingModelId) {
        this.pricingModelId = pricingModelId;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public PricingDetails setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public PricingDetails setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public PricingDetails setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public PricingDetails setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public PricingDetails setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public BigDecimal getEstimatedAdditionalAmount() {
        return this.estimatedAdditionalAmount;
    }

    public PricingDetails setEstimatedAdditionalAmount(BigDecimal estimatedAdditionalAmount) {
        this.estimatedAdditionalAmount = estimatedAdditionalAmount;
        return this;
    }

    public BigDecimal getActualAdditionalAmount() {
        return this.actualAdditionalAmount;
    }

    public PricingDetails setActualAdditionalAmount(BigDecimal actualAdditionalAmount) {
        this.actualAdditionalAmount = actualAdditionalAmount;
        return this;
    }

    public String getBreakUpDetails() {
        return this.breakUpDetails;
    }

    public PricingDetails setBreakUpDetails(String breakUpDetails) {
        this.breakUpDetails = breakUpDetails;
        return this;
    }

    public BigDecimal getPrevOutstandingAmount() {
        return this.prevOutstandingAmount;
    }

    public PricingDetails setPrevOutstandingAmount(BigDecimal prevOutstandingAmount) {
        this.prevOutstandingAmount = prevOutstandingAmount;
        return this;
    }

    public BigDecimal getPendingAmount() {
        return this.pendingAmount;
    }

    public PricingDetails setPendingAmount(BigDecimal pendingAmount) {
        this.pendingAmount = pendingAmount;
        return this;
    }

    public BigDecimal getAmountPaid() {
        return this.amountPaid;
    }

    public PricingDetails setAmountPaid(BigDecimal amountPaid) {
        this.amountPaid = amountPaid;
        return this;
    }

    public BigDecimal getEstimatedCashbackAmount() {
        return this.estimatedCashbackAmount;
    }

    public PricingDetails setEstimatedCashbackAmount(BigDecimal estimatedCashbackAmount) {
        this.estimatedCashbackAmount = estimatedCashbackAmount;
        return this;
    }

    public BigDecimal getEstimatedCashbackPercent() {
        return this.estimatedCashbackPercent;
    }

    public PricingDetails setEstimatedCashbackPercent(BigDecimal estimatedCashbackPercent) {
        this.estimatedCashbackPercent = estimatedCashbackPercent;
        return this;
    }

    public String getEstimatedCashbackType() {
        return this.estimatedCashbackType;
    }

    public PricingDetails setEstimatedCashbackType(String estimatedCashbackType) {
        this.estimatedCashbackType = estimatedCashbackType;
        return this;
    }

    public BigDecimal getActualCashbackAmount() {
        return this.actualCashbackAmount;
    }

    public PricingDetails setActualCashbackAmount(BigDecimal actualCashbackAmount) {
        this.actualCashbackAmount = actualCashbackAmount;
        return this;
    }

    public BigDecimal getActualCashbackPercent() {
        return this.actualCashbackPercent;
    }

    public PricingDetails setActualCashbackPercent(BigDecimal actualCashbackPercent) {
        this.actualCashbackPercent = actualCashbackPercent;
        return this;
    }

    public String getActualCashbackType() {
        return this.actualCashbackType;
    }

    public PricingDetails setActualCashbackType(String actualCashbackType) {
        this.actualCashbackType = actualCashbackType;
        return this;
    }

    public BigDecimal getEstimatedPromotionalCredits() {
        return this.estimatedPromotionalCredits;
    }

    public PricingDetails setEstimatedPromotionalCredits(BigDecimal estimatedPromotionalCredits) {
        this.estimatedPromotionalCredits = estimatedPromotionalCredits;
        return this;
    }

    public BigDecimal getActualPromotionalCredits() {
        return this.actualPromotionalCredits;
    }

    public PricingDetails setActualPromotionalCredits(BigDecimal actualPromotionalCredits) {
        this.actualPromotionalCredits = actualPromotionalCredits;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PricingDetails other = (PricingDetails) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (rideRequestId == null) {
            if (other.rideRequestId != null)
                return false;
        }
        else if (!rideRequestId.equals(other.rideRequestId))
            return false;
        if (estimatedTotalAmount == null) {
            if (other.estimatedTotalAmount != null)
                return false;
        }
        else if (!estimatedTotalAmount.equals(other.estimatedTotalAmount))
            return false;
        if (estimatedFareAmount == null) {
            if (other.estimatedFareAmount != null)
                return false;
        }
        else if (!estimatedFareAmount.equals(other.estimatedFareAmount))
            return false;
        if (estimatedDiscountAmount == null) {
            if (other.estimatedDiscountAmount != null)
                return false;
        }
        else if (!estimatedDiscountAmount.equals(other.estimatedDiscountAmount))
            return false;
        if (estimatedDiscountPercent == null) {
            if (other.estimatedDiscountPercent != null)
                return false;
        }
        else if (!estimatedDiscountPercent.equals(other.estimatedDiscountPercent))
            return false;
        if (estimatedTaxAmount == null) {
            if (other.estimatedTaxAmount != null)
                return false;
        }
        else if (!estimatedTaxAmount.equals(other.estimatedTaxAmount))
            return false;
        if (estimatedTaxPercent == null) {
            if (other.estimatedTaxPercent != null)
                return false;
        }
        else if (!estimatedTaxPercent.equals(other.estimatedTaxPercent))
            return false;
        if (estimatedDiscountType == null) {
            if (other.estimatedDiscountType != null)
                return false;
        }
        else if (!estimatedDiscountType.equals(other.estimatedDiscountType))
            return false;
        if (actualTotalAmount == null) {
            if (other.actualTotalAmount != null)
                return false;
        }
        else if (!actualTotalAmount.equals(other.actualTotalAmount))
            return false;
        if (actualFareAmount == null) {
            if (other.actualFareAmount != null)
                return false;
        }
        else if (!actualFareAmount.equals(other.actualFareAmount))
            return false;
        if (actualDiscountAmount == null) {
            if (other.actualDiscountAmount != null)
                return false;
        }
        else if (!actualDiscountAmount.equals(other.actualDiscountAmount))
            return false;
        if (actualDiscountPercent == null) {
            if (other.actualDiscountPercent != null)
                return false;
        }
        else if (!actualDiscountPercent.equals(other.actualDiscountPercent))
            return false;
        if (actualTaxAmount == null) {
            if (other.actualTaxAmount != null)
                return false;
        }
        else if (!actualTaxAmount.equals(other.actualTaxAmount))
            return false;
        if (actualTaxPercent == null) {
            if (other.actualTaxPercent != null)
                return false;
        }
        else if (!actualTaxPercent.equals(other.actualTaxPercent))
            return false;
        if (actualDiscountType == null) {
            if (other.actualDiscountType != null)
                return false;
        }
        else if (!actualDiscountType.equals(other.actualDiscountType))
            return false;
        if (pricingModelId == null) {
            if (other.pricingModelId != null)
                return false;
        }
        else if (!pricingModelId.equals(other.pricingModelId))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (estimatedAdditionalAmount == null) {
            if (other.estimatedAdditionalAmount != null)
                return false;
        }
        else if (!estimatedAdditionalAmount.equals(other.estimatedAdditionalAmount))
            return false;
        if (actualAdditionalAmount == null) {
            if (other.actualAdditionalAmount != null)
                return false;
        }
        else if (!actualAdditionalAmount.equals(other.actualAdditionalAmount))
            return false;
        if (breakUpDetails == null) {
            if (other.breakUpDetails != null)
                return false;
        }
        else if (!breakUpDetails.equals(other.breakUpDetails))
            return false;
        if (prevOutstandingAmount == null) {
            if (other.prevOutstandingAmount != null)
                return false;
        }
        else if (!prevOutstandingAmount.equals(other.prevOutstandingAmount))
            return false;
        if (pendingAmount == null) {
            if (other.pendingAmount != null)
                return false;
        }
        else if (!pendingAmount.equals(other.pendingAmount))
            return false;
        if (amountPaid == null) {
            if (other.amountPaid != null)
                return false;
        }
        else if (!amountPaid.equals(other.amountPaid))
            return false;
        if (estimatedCashbackAmount == null) {
            if (other.estimatedCashbackAmount != null)
                return false;
        }
        else if (!estimatedCashbackAmount.equals(other.estimatedCashbackAmount))
            return false;
        if (estimatedCashbackPercent == null) {
            if (other.estimatedCashbackPercent != null)
                return false;
        }
        else if (!estimatedCashbackPercent.equals(other.estimatedCashbackPercent))
            return false;
        if (estimatedCashbackType == null) {
            if (other.estimatedCashbackType != null)
                return false;
        }
        else if (!estimatedCashbackType.equals(other.estimatedCashbackType))
            return false;
        if (actualCashbackAmount == null) {
            if (other.actualCashbackAmount != null)
                return false;
        }
        else if (!actualCashbackAmount.equals(other.actualCashbackAmount))
            return false;
        if (actualCashbackPercent == null) {
            if (other.actualCashbackPercent != null)
                return false;
        }
        else if (!actualCashbackPercent.equals(other.actualCashbackPercent))
            return false;
        if (actualCashbackType == null) {
            if (other.actualCashbackType != null)
                return false;
        }
        else if (!actualCashbackType.equals(other.actualCashbackType))
            return false;
        if (estimatedPromotionalCredits == null) {
            if (other.estimatedPromotionalCredits != null)
                return false;
        }
        else if (!estimatedPromotionalCredits.equals(other.estimatedPromotionalCredits))
            return false;
        if (actualPromotionalCredits == null) {
            if (other.actualPromotionalCredits != null)
                return false;
        }
        else if (!actualPromotionalCredits.equals(other.actualPromotionalCredits))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.rideRequestId == null) ? 0 : this.rideRequestId.hashCode());
        result = prime * result + ((this.estimatedTotalAmount == null) ? 0 : this.estimatedTotalAmount.hashCode());
        result = prime * result + ((this.estimatedFareAmount == null) ? 0 : this.estimatedFareAmount.hashCode());
        result = prime * result + ((this.estimatedDiscountAmount == null) ? 0 : this.estimatedDiscountAmount.hashCode());
        result = prime * result + ((this.estimatedDiscountPercent == null) ? 0 : this.estimatedDiscountPercent.hashCode());
        result = prime * result + ((this.estimatedTaxAmount == null) ? 0 : this.estimatedTaxAmount.hashCode());
        result = prime * result + ((this.estimatedTaxPercent == null) ? 0 : this.estimatedTaxPercent.hashCode());
        result = prime * result + ((this.estimatedDiscountType == null) ? 0 : this.estimatedDiscountType.hashCode());
        result = prime * result + ((this.actualTotalAmount == null) ? 0 : this.actualTotalAmount.hashCode());
        result = prime * result + ((this.actualFareAmount == null) ? 0 : this.actualFareAmount.hashCode());
        result = prime * result + ((this.actualDiscountAmount == null) ? 0 : this.actualDiscountAmount.hashCode());
        result = prime * result + ((this.actualDiscountPercent == null) ? 0 : this.actualDiscountPercent.hashCode());
        result = prime * result + ((this.actualTaxAmount == null) ? 0 : this.actualTaxAmount.hashCode());
        result = prime * result + ((this.actualTaxPercent == null) ? 0 : this.actualTaxPercent.hashCode());
        result = prime * result + ((this.actualDiscountType == null) ? 0 : this.actualDiscountType.hashCode());
        result = prime * result + ((this.pricingModelId == null) ? 0 : this.pricingModelId.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.estimatedAdditionalAmount == null) ? 0 : this.estimatedAdditionalAmount.hashCode());
        result = prime * result + ((this.actualAdditionalAmount == null) ? 0 : this.actualAdditionalAmount.hashCode());
        result = prime * result + ((this.breakUpDetails == null) ? 0 : this.breakUpDetails.hashCode());
        result = prime * result + ((this.prevOutstandingAmount == null) ? 0 : this.prevOutstandingAmount.hashCode());
        result = prime * result + ((this.pendingAmount == null) ? 0 : this.pendingAmount.hashCode());
        result = prime * result + ((this.amountPaid == null) ? 0 : this.amountPaid.hashCode());
        result = prime * result + ((this.estimatedCashbackAmount == null) ? 0 : this.estimatedCashbackAmount.hashCode());
        result = prime * result + ((this.estimatedCashbackPercent == null) ? 0 : this.estimatedCashbackPercent.hashCode());
        result = prime * result + ((this.estimatedCashbackType == null) ? 0 : this.estimatedCashbackType.hashCode());
        result = prime * result + ((this.actualCashbackAmount == null) ? 0 : this.actualCashbackAmount.hashCode());
        result = prime * result + ((this.actualCashbackPercent == null) ? 0 : this.actualCashbackPercent.hashCode());
        result = prime * result + ((this.actualCashbackType == null) ? 0 : this.actualCashbackType.hashCode());
        result = prime * result + ((this.estimatedPromotionalCredits == null) ? 0 : this.estimatedPromotionalCredits.hashCode());
        result = prime * result + ((this.actualPromotionalCredits == null) ? 0 : this.actualPromotionalCredits.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PricingDetails (");

        sb.append(id);
        sb.append(", ").append(rideRequestId);
        sb.append(", ").append(estimatedTotalAmount);
        sb.append(", ").append(estimatedFareAmount);
        sb.append(", ").append(estimatedDiscountAmount);
        sb.append(", ").append(estimatedDiscountPercent);
        sb.append(", ").append(estimatedTaxAmount);
        sb.append(", ").append(estimatedTaxPercent);
        sb.append(", ").append(estimatedDiscountType);
        sb.append(", ").append(actualTotalAmount);
        sb.append(", ").append(actualFareAmount);
        sb.append(", ").append(actualDiscountAmount);
        sb.append(", ").append(actualDiscountPercent);
        sb.append(", ").append(actualTaxAmount);
        sb.append(", ").append(actualTaxPercent);
        sb.append(", ").append(actualDiscountType);
        sb.append(", ").append(pricingModelId);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(estimatedAdditionalAmount);
        sb.append(", ").append(actualAdditionalAmount);
        sb.append(", ").append(breakUpDetails);
        sb.append(", ").append(prevOutstandingAmount);
        sb.append(", ").append(pendingAmount);
        sb.append(", ").append(amountPaid);
        sb.append(", ").append(estimatedCashbackAmount);
        sb.append(", ").append(estimatedCashbackPercent);
        sb.append(", ").append(estimatedCashbackType);
        sb.append(", ").append(actualCashbackAmount);
        sb.append(", ").append(actualCashbackPercent);
        sb.append(", ").append(actualCashbackType);
        sb.append(", ").append(estimatedPromotionalCredits);
        sb.append(", ").append(actualPromotionalCredits);

        sb.append(")");
        return sb.toString();
    }
}
