/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PromotionalCredits implements Serializable {

    private static final long serialVersionUID = 1208636346;

    private UInteger   id;
    private UInteger   riderId;
    private BigDecimal creditAmount;
    private Long       expiryTimestamp;
    private BigDecimal expiredBalance;
    private String     source;
    private String     remark;
    private Byte       isExpired;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;

    public PromotionalCredits() {}

    public PromotionalCredits(PromotionalCredits value) {
        this.id = value.id;
        this.riderId = value.riderId;
        this.creditAmount = value.creditAmount;
        this.expiryTimestamp = value.expiryTimestamp;
        this.expiredBalance = value.expiredBalance;
        this.source = value.source;
        this.remark = value.remark;
        this.isExpired = value.isExpired;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
    }

    public PromotionalCredits(
        UInteger   id,
        UInteger   riderId,
        BigDecimal creditAmount,
        Long       expiryTimestamp,
        BigDecimal expiredBalance,
        String     source,
        String     remark,
        Byte       isExpired,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy
    ) {
        this.id = id;
        this.riderId = riderId;
        this.creditAmount = creditAmount;
        this.expiryTimestamp = expiryTimestamp;
        this.expiredBalance = expiredBalance;
        this.source = source;
        this.remark = remark;
        this.isExpired = isExpired;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
    }

    public UInteger getId() {
        return this.id;
    }

    public PromotionalCredits setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public PromotionalCredits setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public BigDecimal getCreditAmount() {
        return this.creditAmount;
    }

    public PromotionalCredits setCreditAmount(BigDecimal creditAmount) {
        this.creditAmount = creditAmount;
        return this;
    }

    public Long getExpiryTimestamp() {
        return this.expiryTimestamp;
    }

    public PromotionalCredits setExpiryTimestamp(Long expiryTimestamp) {
        this.expiryTimestamp = expiryTimestamp;
        return this;
    }

    public BigDecimal getExpiredBalance() {
        return this.expiredBalance;
    }

    public PromotionalCredits setExpiredBalance(BigDecimal expiredBalance) {
        this.expiredBalance = expiredBalance;
        return this;
    }

    public String getSource() {
        return this.source;
    }

    public PromotionalCredits setSource(String source) {
        this.source = source;
        return this;
    }

    public String getRemark() {
        return this.remark;
    }

    public PromotionalCredits setRemark(String remark) {
        this.remark = remark;
        return this;
    }

    public Byte getIsExpired() {
        return this.isExpired;
    }

    public PromotionalCredits setIsExpired(Byte isExpired) {
        this.isExpired = isExpired;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public PromotionalCredits setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public PromotionalCredits setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public PromotionalCredits setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public PromotionalCredits setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public PromotionalCredits setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PromotionalCredits other = (PromotionalCredits) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (creditAmount == null) {
            if (other.creditAmount != null)
                return false;
        }
        else if (!creditAmount.equals(other.creditAmount))
            return false;
        if (expiryTimestamp == null) {
            if (other.expiryTimestamp != null)
                return false;
        }
        else if (!expiryTimestamp.equals(other.expiryTimestamp))
            return false;
        if (expiredBalance == null) {
            if (other.expiredBalance != null)
                return false;
        }
        else if (!expiredBalance.equals(other.expiredBalance))
            return false;
        if (source == null) {
            if (other.source != null)
                return false;
        }
        else if (!source.equals(other.source))
            return false;
        if (remark == null) {
            if (other.remark != null)
                return false;
        }
        else if (!remark.equals(other.remark))
            return false;
        if (isExpired == null) {
            if (other.isExpired != null)
                return false;
        }
        else if (!isExpired.equals(other.isExpired))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.creditAmount == null) ? 0 : this.creditAmount.hashCode());
        result = prime * result + ((this.expiryTimestamp == null) ? 0 : this.expiryTimestamp.hashCode());
        result = prime * result + ((this.expiredBalance == null) ? 0 : this.expiredBalance.hashCode());
        result = prime * result + ((this.source == null) ? 0 : this.source.hashCode());
        result = prime * result + ((this.remark == null) ? 0 : this.remark.hashCode());
        result = prime * result + ((this.isExpired == null) ? 0 : this.isExpired.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PromotionalCredits (");

        sb.append(id);
        sb.append(", ").append(riderId);
        sb.append(", ").append(creditAmount);
        sb.append(", ").append(expiryTimestamp);
        sb.append(", ").append(expiredBalance);
        sb.append(", ").append(source);
        sb.append(", ").append(remark);
        sb.append(", ").append(isExpired);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);

        sb.append(")");
        return sb.toString();
    }
}
