/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzSimpleTriggers implements Serializable {

    private static final long serialVersionUID = -280515703;

    private String schedName;
    private String triggerName;
    private String triggerGroup;
    private Long   repeatCount;
    private Long   repeatInterval;
    private Long   timesTriggered;

    public QrtzSimpleTriggers() {}

    public QrtzSimpleTriggers(QrtzSimpleTriggers value) {
        this.schedName = value.schedName;
        this.triggerName = value.triggerName;
        this.triggerGroup = value.triggerGroup;
        this.repeatCount = value.repeatCount;
        this.repeatInterval = value.repeatInterval;
        this.timesTriggered = value.timesTriggered;
    }

    public QrtzSimpleTriggers(
        String schedName,
        String triggerName,
        String triggerGroup,
        Long   repeatCount,
        Long   repeatInterval,
        Long   timesTriggered
    ) {
        this.schedName = schedName;
        this.triggerName = triggerName;
        this.triggerGroup = triggerGroup;
        this.repeatCount = repeatCount;
        this.repeatInterval = repeatInterval;
        this.timesTriggered = timesTriggered;
    }

    public String getSchedName() {
        return this.schedName;
    }

    public QrtzSimpleTriggers setSchedName(String schedName) {
        this.schedName = schedName;
        return this;
    }

    public String getTriggerName() {
        return this.triggerName;
    }

    public QrtzSimpleTriggers setTriggerName(String triggerName) {
        this.triggerName = triggerName;
        return this;
    }

    public String getTriggerGroup() {
        return this.triggerGroup;
    }

    public QrtzSimpleTriggers setTriggerGroup(String triggerGroup) {
        this.triggerGroup = triggerGroup;
        return this;
    }

    public Long getRepeatCount() {
        return this.repeatCount;
    }

    public QrtzSimpleTriggers setRepeatCount(Long repeatCount) {
        this.repeatCount = repeatCount;
        return this;
    }

    public Long getRepeatInterval() {
        return this.repeatInterval;
    }

    public QrtzSimpleTriggers setRepeatInterval(Long repeatInterval) {
        this.repeatInterval = repeatInterval;
        return this;
    }

    public Long getTimesTriggered() {
        return this.timesTriggered;
    }

    public QrtzSimpleTriggers setTimesTriggered(Long timesTriggered) {
        this.timesTriggered = timesTriggered;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final QrtzSimpleTriggers other = (QrtzSimpleTriggers) obj;
        if (schedName == null) {
            if (other.schedName != null)
                return false;
        }
        else if (!schedName.equals(other.schedName))
            return false;
        if (triggerName == null) {
            if (other.triggerName != null)
                return false;
        }
        else if (!triggerName.equals(other.triggerName))
            return false;
        if (triggerGroup == null) {
            if (other.triggerGroup != null)
                return false;
        }
        else if (!triggerGroup.equals(other.triggerGroup))
            return false;
        if (repeatCount == null) {
            if (other.repeatCount != null)
                return false;
        }
        else if (!repeatCount.equals(other.repeatCount))
            return false;
        if (repeatInterval == null) {
            if (other.repeatInterval != null)
                return false;
        }
        else if (!repeatInterval.equals(other.repeatInterval))
            return false;
        if (timesTriggered == null) {
            if (other.timesTriggered != null)
                return false;
        }
        else if (!timesTriggered.equals(other.timesTriggered))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.schedName == null) ? 0 : this.schedName.hashCode());
        result = prime * result + ((this.triggerName == null) ? 0 : this.triggerName.hashCode());
        result = prime * result + ((this.triggerGroup == null) ? 0 : this.triggerGroup.hashCode());
        result = prime * result + ((this.repeatCount == null) ? 0 : this.repeatCount.hashCode());
        result = prime * result + ((this.repeatInterval == null) ? 0 : this.repeatInterval.hashCode());
        result = prime * result + ((this.timesTriggered == null) ? 0 : this.timesTriggered.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("QrtzSimpleTriggers (");

        sb.append(schedName);
        sb.append(", ").append(triggerName);
        sb.append(", ").append(triggerGroup);
        sb.append(", ").append(repeatCount);
        sb.append(", ").append(repeatInterval);
        sb.append(", ").append(timesTriggered);

        sb.append(")");
        return sb.toString();
    }
}
