/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecurringRidesWeekWise implements Serializable {

    private static final long serialVersionUID = -554672805;

    private UInteger   id;
    private UInteger   recurringRequestId;
    private Long       startTimestamp;
    private Long       endTimestamp;
    private BigDecimal walletBalance;
    private String     state;
    private String     weeklyConfig;
    private BigDecimal neededBalance;
    private Byte       isActive;
    private UInteger   createdBy;
    private Long       createdAt;
    private UInteger   lastUpdatedBy;
    private Long       lastUpdatedAt;
    private String     note;

    public RecurringRidesWeekWise() {}

    public RecurringRidesWeekWise(RecurringRidesWeekWise value) {
        this.id = value.id;
        this.recurringRequestId = value.recurringRequestId;
        this.startTimestamp = value.startTimestamp;
        this.endTimestamp = value.endTimestamp;
        this.walletBalance = value.walletBalance;
        this.state = value.state;
        this.weeklyConfig = value.weeklyConfig;
        this.neededBalance = value.neededBalance;
        this.isActive = value.isActive;
        this.createdBy = value.createdBy;
        this.createdAt = value.createdAt;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.lastUpdatedAt = value.lastUpdatedAt;
        this.note = value.note;
    }

    public RecurringRidesWeekWise(
        UInteger   id,
        UInteger   recurringRequestId,
        Long       startTimestamp,
        Long       endTimestamp,
        BigDecimal walletBalance,
        String     state,
        String     weeklyConfig,
        BigDecimal neededBalance,
        Byte       isActive,
        UInteger   createdBy,
        Long       createdAt,
        UInteger   lastUpdatedBy,
        Long       lastUpdatedAt,
        String     note
    ) {
        this.id = id;
        this.recurringRequestId = recurringRequestId;
        this.startTimestamp = startTimestamp;
        this.endTimestamp = endTimestamp;
        this.walletBalance = walletBalance;
        this.state = state;
        this.weeklyConfig = weeklyConfig;
        this.neededBalance = neededBalance;
        this.isActive = isActive;
        this.createdBy = createdBy;
        this.createdAt = createdAt;
        this.lastUpdatedBy = lastUpdatedBy;
        this.lastUpdatedAt = lastUpdatedAt;
        this.note = note;
    }

    public UInteger getId() {
        return this.id;
    }

    public RecurringRidesWeekWise setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRecurringRequestId() {
        return this.recurringRequestId;
    }

    public RecurringRidesWeekWise setRecurringRequestId(UInteger recurringRequestId) {
        this.recurringRequestId = recurringRequestId;
        return this;
    }

    public Long getStartTimestamp() {
        return this.startTimestamp;
    }

    public RecurringRidesWeekWise setStartTimestamp(Long startTimestamp) {
        this.startTimestamp = startTimestamp;
        return this;
    }

    public Long getEndTimestamp() {
        return this.endTimestamp;
    }

    public RecurringRidesWeekWise setEndTimestamp(Long endTimestamp) {
        this.endTimestamp = endTimestamp;
        return this;
    }

    public BigDecimal getWalletBalance() {
        return this.walletBalance;
    }

    public RecurringRidesWeekWise setWalletBalance(BigDecimal walletBalance) {
        this.walletBalance = walletBalance;
        return this;
    }

    public String getState() {
        return this.state;
    }

    public RecurringRidesWeekWise setState(String state) {
        this.state = state;
        return this;
    }

    public String getWeeklyConfig() {
        return this.weeklyConfig;
    }

    public RecurringRidesWeekWise setWeeklyConfig(String weeklyConfig) {
        this.weeklyConfig = weeklyConfig;
        return this;
    }

    public BigDecimal getNeededBalance() {
        return this.neededBalance;
    }

    public RecurringRidesWeekWise setNeededBalance(BigDecimal neededBalance) {
        this.neededBalance = neededBalance;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public RecurringRidesWeekWise setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public RecurringRidesWeekWise setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public Long getCreatedAt() {
        return this.createdAt;
    }

    public RecurringRidesWeekWise setCreatedAt(Long createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public RecurringRidesWeekWise setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public Long getLastUpdatedAt() {
        return this.lastUpdatedAt;
    }

    public RecurringRidesWeekWise setLastUpdatedAt(Long lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }

    public String getNote() {
        return this.note;
    }

    public RecurringRidesWeekWise setNote(String note) {
        this.note = note;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RecurringRidesWeekWise other = (RecurringRidesWeekWise) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (recurringRequestId == null) {
            if (other.recurringRequestId != null)
                return false;
        }
        else if (!recurringRequestId.equals(other.recurringRequestId))
            return false;
        if (startTimestamp == null) {
            if (other.startTimestamp != null)
                return false;
        }
        else if (!startTimestamp.equals(other.startTimestamp))
            return false;
        if (endTimestamp == null) {
            if (other.endTimestamp != null)
                return false;
        }
        else if (!endTimestamp.equals(other.endTimestamp))
            return false;
        if (walletBalance == null) {
            if (other.walletBalance != null)
                return false;
        }
        else if (!walletBalance.equals(other.walletBalance))
            return false;
        if (state == null) {
            if (other.state != null)
                return false;
        }
        else if (!state.equals(other.state))
            return false;
        if (weeklyConfig == null) {
            if (other.weeklyConfig != null)
                return false;
        }
        else if (!weeklyConfig.equals(other.weeklyConfig))
            return false;
        if (neededBalance == null) {
            if (other.neededBalance != null)
                return false;
        }
        else if (!neededBalance.equals(other.neededBalance))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (lastUpdatedAt == null) {
            if (other.lastUpdatedAt != null)
                return false;
        }
        else if (!lastUpdatedAt.equals(other.lastUpdatedAt))
            return false;
        if (note == null) {
            if (other.note != null)
                return false;
        }
        else if (!note.equals(other.note))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.recurringRequestId == null) ? 0 : this.recurringRequestId.hashCode());
        result = prime * result + ((this.startTimestamp == null) ? 0 : this.startTimestamp.hashCode());
        result = prime * result + ((this.endTimestamp == null) ? 0 : this.endTimestamp.hashCode());
        result = prime * result + ((this.walletBalance == null) ? 0 : this.walletBalance.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.weeklyConfig == null) ? 0 : this.weeklyConfig.hashCode());
        result = prime * result + ((this.neededBalance == null) ? 0 : this.neededBalance.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.lastUpdatedAt == null) ? 0 : this.lastUpdatedAt.hashCode());
        result = prime * result + ((this.note == null) ? 0 : this.note.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RecurringRidesWeekWise (");

        sb.append(id);
        sb.append(", ").append(recurringRequestId);
        sb.append(", ").append(startTimestamp);
        sb.append(", ").append(endTimestamp);
        sb.append(", ").append(walletBalance);
        sb.append(", ").append(state);
        sb.append(", ").append(weeklyConfig);
        sb.append(", ").append(neededBalance);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(lastUpdatedAt);
        sb.append(", ").append(note);

        sb.append(")");
        return sb.toString();
    }
}
