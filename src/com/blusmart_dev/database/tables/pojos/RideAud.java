/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RideAud implements Serializable {

    private static final long serialVersionUID = -1768889947;

    private UInteger   id;
    private UInteger   riderId;
    private UInteger   driverId;
    private String     rideState;
    private String     rideType;
    private String     riderType;
    private String     vehicleNumber;
    private Long       pickUpTimestamp;
    private Long       arrivalTimestamp;
    private Long       dropTimestamp;
    private Long       assignTimestamp;
    private Long       noShowTimestamp;
    private String     pickUpLocation;
    private String     arrivalLocation;
    private String     dropLocation;
    private String     assignLocation;
    private String     noShowLocation;
    private BigDecimal pickUpLat;
    private BigDecimal arrivalLat;
    private BigDecimal dropLat;
    private BigDecimal assignLat;
    private BigDecimal noShowLat;
    private BigDecimal pickUpLong;
    private BigDecimal arrivalLong;
    private BigDecimal dropLong;
    private BigDecimal assignLong;
    private BigDecimal noShowLong;
    private Integer    tripStartSoc;
    private Integer    tripCompleteSoc;
    private String     platform;
    private Long       estimatedStartTimestamp;
    private Long       estimatedCompletionTimestamp;
    private Long       actualCompletionTimestamp;
    private BigDecimal estimatedRideDistance;
    private BigDecimal actualRideDistance;
    private BigDecimal estimatedPickupDistance;
    private BigDecimal actualPickupDistance;
    private BigDecimal estimatedDropDistance;
    private BigDecimal actualDropDistance;
    private String     pickupPath;
    private String     dropPath;
    private BigDecimal estimatedAmount;
    private BigDecimal actualAmount;
    private BigDecimal discountAmount;
    private Integer    paymentOrderId;
    private String     paymentMode;
    private UInteger   rideRequestId;
    private Byte       isActive;
    private Long       createdTimestamp;
    private Long       lastUpdatedTimestamp;
    private UInteger   createdBy;
    private UInteger   lastUpdatedBy;
    private UInteger   serviceRegionId;
    private Integer    versionId;
    private UInteger   audId;
    private Integer    tripAssignmentSoc;
    private Integer    tripAssignmentDte;
    private Integer    tripStartDte;
    private Integer    tripCompletionDte;
    private Long       estimatedPickupTimestamp;
    private Long       actualStartTimestamp;
    private UInteger   assignedBy;
    private String     rejectedBy;
    private Long       cancellationEta;
    private String     promoCode;
    private String     otherFlags;
    private Integer    bookedFor;
    private Integer    bookedBy;

    public RideAud() {}

    public RideAud(RideAud value) {
        this.id = value.id;
        this.riderId = value.riderId;
        this.driverId = value.driverId;
        this.rideState = value.rideState;
        this.rideType = value.rideType;
        this.riderType = value.riderType;
        this.vehicleNumber = value.vehicleNumber;
        this.pickUpTimestamp = value.pickUpTimestamp;
        this.arrivalTimestamp = value.arrivalTimestamp;
        this.dropTimestamp = value.dropTimestamp;
        this.assignTimestamp = value.assignTimestamp;
        this.noShowTimestamp = value.noShowTimestamp;
        this.pickUpLocation = value.pickUpLocation;
        this.arrivalLocation = value.arrivalLocation;
        this.dropLocation = value.dropLocation;
        this.assignLocation = value.assignLocation;
        this.noShowLocation = value.noShowLocation;
        this.pickUpLat = value.pickUpLat;
        this.arrivalLat = value.arrivalLat;
        this.dropLat = value.dropLat;
        this.assignLat = value.assignLat;
        this.noShowLat = value.noShowLat;
        this.pickUpLong = value.pickUpLong;
        this.arrivalLong = value.arrivalLong;
        this.dropLong = value.dropLong;
        this.assignLong = value.assignLong;
        this.noShowLong = value.noShowLong;
        this.tripStartSoc = value.tripStartSoc;
        this.tripCompleteSoc = value.tripCompleteSoc;
        this.platform = value.platform;
        this.estimatedStartTimestamp = value.estimatedStartTimestamp;
        this.estimatedCompletionTimestamp = value.estimatedCompletionTimestamp;
        this.actualCompletionTimestamp = value.actualCompletionTimestamp;
        this.estimatedRideDistance = value.estimatedRideDistance;
        this.actualRideDistance = value.actualRideDistance;
        this.estimatedPickupDistance = value.estimatedPickupDistance;
        this.actualPickupDistance = value.actualPickupDistance;
        this.estimatedDropDistance = value.estimatedDropDistance;
        this.actualDropDistance = value.actualDropDistance;
        this.pickupPath = value.pickupPath;
        this.dropPath = value.dropPath;
        this.estimatedAmount = value.estimatedAmount;
        this.actualAmount = value.actualAmount;
        this.discountAmount = value.discountAmount;
        this.paymentOrderId = value.paymentOrderId;
        this.paymentMode = value.paymentMode;
        this.rideRequestId = value.rideRequestId;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.serviceRegionId = value.serviceRegionId;
        this.versionId = value.versionId;
        this.audId = value.audId;
        this.tripAssignmentSoc = value.tripAssignmentSoc;
        this.tripAssignmentDte = value.tripAssignmentDte;
        this.tripStartDte = value.tripStartDte;
        this.tripCompletionDte = value.tripCompletionDte;
        this.estimatedPickupTimestamp = value.estimatedPickupTimestamp;
        this.actualStartTimestamp = value.actualStartTimestamp;
        this.assignedBy = value.assignedBy;
        this.rejectedBy = value.rejectedBy;
        this.cancellationEta = value.cancellationEta;
        this.promoCode = value.promoCode;
        this.otherFlags = value.otherFlags;
        this.bookedFor = value.bookedFor;
        this.bookedBy = value.bookedBy;
    }

    public RideAud(
        UInteger   id,
        UInteger   riderId,
        UInteger   driverId,
        String     rideState,
        String     rideType,
        String     riderType,
        String     vehicleNumber,
        Long       pickUpTimestamp,
        Long       arrivalTimestamp,
        Long       dropTimestamp,
        Long       assignTimestamp,
        Long       noShowTimestamp,
        String     pickUpLocation,
        String     arrivalLocation,
        String     dropLocation,
        String     assignLocation,
        String     noShowLocation,
        BigDecimal pickUpLat,
        BigDecimal arrivalLat,
        BigDecimal dropLat,
        BigDecimal assignLat,
        BigDecimal noShowLat,
        BigDecimal pickUpLong,
        BigDecimal arrivalLong,
        BigDecimal dropLong,
        BigDecimal assignLong,
        BigDecimal noShowLong,
        Integer    tripStartSoc,
        Integer    tripCompleteSoc,
        String     platform,
        Long       estimatedStartTimestamp,
        Long       estimatedCompletionTimestamp,
        Long       actualCompletionTimestamp,
        BigDecimal estimatedRideDistance,
        BigDecimal actualRideDistance,
        BigDecimal estimatedPickupDistance,
        BigDecimal actualPickupDistance,
        BigDecimal estimatedDropDistance,
        BigDecimal actualDropDistance,
        String     pickupPath,
        String     dropPath,
        BigDecimal estimatedAmount,
        BigDecimal actualAmount,
        BigDecimal discountAmount,
        Integer    paymentOrderId,
        String     paymentMode,
        UInteger   rideRequestId,
        Byte       isActive,
        Long       createdTimestamp,
        Long       lastUpdatedTimestamp,
        UInteger   createdBy,
        UInteger   lastUpdatedBy,
        UInteger   serviceRegionId,
        Integer    versionId,
        UInteger   audId,
        Integer    tripAssignmentSoc,
        Integer    tripAssignmentDte,
        Integer    tripStartDte,
        Integer    tripCompletionDte,
        Long       estimatedPickupTimestamp,
        Long       actualStartTimestamp,
        UInteger   assignedBy,
        String     rejectedBy,
        Long       cancellationEta,
        String     promoCode,
        String     otherFlags,
        Integer    bookedFor,
        Integer    bookedBy
    ) {
        this.id = id;
        this.riderId = riderId;
        this.driverId = driverId;
        this.rideState = rideState;
        this.rideType = rideType;
        this.riderType = riderType;
        this.vehicleNumber = vehicleNumber;
        this.pickUpTimestamp = pickUpTimestamp;
        this.arrivalTimestamp = arrivalTimestamp;
        this.dropTimestamp = dropTimestamp;
        this.assignTimestamp = assignTimestamp;
        this.noShowTimestamp = noShowTimestamp;
        this.pickUpLocation = pickUpLocation;
        this.arrivalLocation = arrivalLocation;
        this.dropLocation = dropLocation;
        this.assignLocation = assignLocation;
        this.noShowLocation = noShowLocation;
        this.pickUpLat = pickUpLat;
        this.arrivalLat = arrivalLat;
        this.dropLat = dropLat;
        this.assignLat = assignLat;
        this.noShowLat = noShowLat;
        this.pickUpLong = pickUpLong;
        this.arrivalLong = arrivalLong;
        this.dropLong = dropLong;
        this.assignLong = assignLong;
        this.noShowLong = noShowLong;
        this.tripStartSoc = tripStartSoc;
        this.tripCompleteSoc = tripCompleteSoc;
        this.platform = platform;
        this.estimatedStartTimestamp = estimatedStartTimestamp;
        this.estimatedCompletionTimestamp = estimatedCompletionTimestamp;
        this.actualCompletionTimestamp = actualCompletionTimestamp;
        this.estimatedRideDistance = estimatedRideDistance;
        this.actualRideDistance = actualRideDistance;
        this.estimatedPickupDistance = estimatedPickupDistance;
        this.actualPickupDistance = actualPickupDistance;
        this.estimatedDropDistance = estimatedDropDistance;
        this.actualDropDistance = actualDropDistance;
        this.pickupPath = pickupPath;
        this.dropPath = dropPath;
        this.estimatedAmount = estimatedAmount;
        this.actualAmount = actualAmount;
        this.discountAmount = discountAmount;
        this.paymentOrderId = paymentOrderId;
        this.paymentMode = paymentMode;
        this.rideRequestId = rideRequestId;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.serviceRegionId = serviceRegionId;
        this.versionId = versionId;
        this.audId = audId;
        this.tripAssignmentSoc = tripAssignmentSoc;
        this.tripAssignmentDte = tripAssignmentDte;
        this.tripStartDte = tripStartDte;
        this.tripCompletionDte = tripCompletionDte;
        this.estimatedPickupTimestamp = estimatedPickupTimestamp;
        this.actualStartTimestamp = actualStartTimestamp;
        this.assignedBy = assignedBy;
        this.rejectedBy = rejectedBy;
        this.cancellationEta = cancellationEta;
        this.promoCode = promoCode;
        this.otherFlags = otherFlags;
        this.bookedFor = bookedFor;
        this.bookedBy = bookedBy;
    }

    public UInteger getId() {
        return this.id;
    }

    public RideAud setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public RideAud setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public UInteger getDriverId() {
        return this.driverId;
    }

    public RideAud setDriverId(UInteger driverId) {
        this.driverId = driverId;
        return this;
    }

    public String getRideState() {
        return this.rideState;
    }

    public RideAud setRideState(String rideState) {
        this.rideState = rideState;
        return this;
    }

    public String getRideType() {
        return this.rideType;
    }

    public RideAud setRideType(String rideType) {
        this.rideType = rideType;
        return this;
    }

    public String getRiderType() {
        return this.riderType;
    }

    public RideAud setRiderType(String riderType) {
        this.riderType = riderType;
        return this;
    }

    public String getVehicleNumber() {
        return this.vehicleNumber;
    }

    public RideAud setVehicleNumber(String vehicleNumber) {
        this.vehicleNumber = vehicleNumber;
        return this;
    }

    public Long getPickUpTimestamp() {
        return this.pickUpTimestamp;
    }

    public RideAud setPickUpTimestamp(Long pickUpTimestamp) {
        this.pickUpTimestamp = pickUpTimestamp;
        return this;
    }

    public Long getArrivalTimestamp() {
        return this.arrivalTimestamp;
    }

    public RideAud setArrivalTimestamp(Long arrivalTimestamp) {
        this.arrivalTimestamp = arrivalTimestamp;
        return this;
    }

    public Long getDropTimestamp() {
        return this.dropTimestamp;
    }

    public RideAud setDropTimestamp(Long dropTimestamp) {
        this.dropTimestamp = dropTimestamp;
        return this;
    }

    public Long getAssignTimestamp() {
        return this.assignTimestamp;
    }

    public RideAud setAssignTimestamp(Long assignTimestamp) {
        this.assignTimestamp = assignTimestamp;
        return this;
    }

    public Long getNoShowTimestamp() {
        return this.noShowTimestamp;
    }

    public RideAud setNoShowTimestamp(Long noShowTimestamp) {
        this.noShowTimestamp = noShowTimestamp;
        return this;
    }

    public String getPickUpLocation() {
        return this.pickUpLocation;
    }

    public RideAud setPickUpLocation(String pickUpLocation) {
        this.pickUpLocation = pickUpLocation;
        return this;
    }

    public String getArrivalLocation() {
        return this.arrivalLocation;
    }

    public RideAud setArrivalLocation(String arrivalLocation) {
        this.arrivalLocation = arrivalLocation;
        return this;
    }

    public String getDropLocation() {
        return this.dropLocation;
    }

    public RideAud setDropLocation(String dropLocation) {
        this.dropLocation = dropLocation;
        return this;
    }

    public String getAssignLocation() {
        return this.assignLocation;
    }

    public RideAud setAssignLocation(String assignLocation) {
        this.assignLocation = assignLocation;
        return this;
    }

    public String getNoShowLocation() {
        return this.noShowLocation;
    }

    public RideAud setNoShowLocation(String noShowLocation) {
        this.noShowLocation = noShowLocation;
        return this;
    }

    public BigDecimal getPickUpLat() {
        return this.pickUpLat;
    }

    public RideAud setPickUpLat(BigDecimal pickUpLat) {
        this.pickUpLat = pickUpLat;
        return this;
    }

    public BigDecimal getArrivalLat() {
        return this.arrivalLat;
    }

    public RideAud setArrivalLat(BigDecimal arrivalLat) {
        this.arrivalLat = arrivalLat;
        return this;
    }

    public BigDecimal getDropLat() {
        return this.dropLat;
    }

    public RideAud setDropLat(BigDecimal dropLat) {
        this.dropLat = dropLat;
        return this;
    }

    public BigDecimal getAssignLat() {
        return this.assignLat;
    }

    public RideAud setAssignLat(BigDecimal assignLat) {
        this.assignLat = assignLat;
        return this;
    }

    public BigDecimal getNoShowLat() {
        return this.noShowLat;
    }

    public RideAud setNoShowLat(BigDecimal noShowLat) {
        this.noShowLat = noShowLat;
        return this;
    }

    public BigDecimal getPickUpLong() {
        return this.pickUpLong;
    }

    public RideAud setPickUpLong(BigDecimal pickUpLong) {
        this.pickUpLong = pickUpLong;
        return this;
    }

    public BigDecimal getArrivalLong() {
        return this.arrivalLong;
    }

    public RideAud setArrivalLong(BigDecimal arrivalLong) {
        this.arrivalLong = arrivalLong;
        return this;
    }

    public BigDecimal getDropLong() {
        return this.dropLong;
    }

    public RideAud setDropLong(BigDecimal dropLong) {
        this.dropLong = dropLong;
        return this;
    }

    public BigDecimal getAssignLong() {
        return this.assignLong;
    }

    public RideAud setAssignLong(BigDecimal assignLong) {
        this.assignLong = assignLong;
        return this;
    }

    public BigDecimal getNoShowLong() {
        return this.noShowLong;
    }

    public RideAud setNoShowLong(BigDecimal noShowLong) {
        this.noShowLong = noShowLong;
        return this;
    }

    public Integer getTripStartSoc() {
        return this.tripStartSoc;
    }

    public RideAud setTripStartSoc(Integer tripStartSoc) {
        this.tripStartSoc = tripStartSoc;
        return this;
    }

    public Integer getTripCompleteSoc() {
        return this.tripCompleteSoc;
    }

    public RideAud setTripCompleteSoc(Integer tripCompleteSoc) {
        this.tripCompleteSoc = tripCompleteSoc;
        return this;
    }

    public String getPlatform() {
        return this.platform;
    }

    public RideAud setPlatform(String platform) {
        this.platform = platform;
        return this;
    }

    public Long getEstimatedStartTimestamp() {
        return this.estimatedStartTimestamp;
    }

    public RideAud setEstimatedStartTimestamp(Long estimatedStartTimestamp) {
        this.estimatedStartTimestamp = estimatedStartTimestamp;
        return this;
    }

    public Long getEstimatedCompletionTimestamp() {
        return this.estimatedCompletionTimestamp;
    }

    public RideAud setEstimatedCompletionTimestamp(Long estimatedCompletionTimestamp) {
        this.estimatedCompletionTimestamp = estimatedCompletionTimestamp;
        return this;
    }

    public Long getActualCompletionTimestamp() {
        return this.actualCompletionTimestamp;
    }

    public RideAud setActualCompletionTimestamp(Long actualCompletionTimestamp) {
        this.actualCompletionTimestamp = actualCompletionTimestamp;
        return this;
    }

    public BigDecimal getEstimatedRideDistance() {
        return this.estimatedRideDistance;
    }

    public RideAud setEstimatedRideDistance(BigDecimal estimatedRideDistance) {
        this.estimatedRideDistance = estimatedRideDistance;
        return this;
    }

    public BigDecimal getActualRideDistance() {
        return this.actualRideDistance;
    }

    public RideAud setActualRideDistance(BigDecimal actualRideDistance) {
        this.actualRideDistance = actualRideDistance;
        return this;
    }

    public BigDecimal getEstimatedPickupDistance() {
        return this.estimatedPickupDistance;
    }

    public RideAud setEstimatedPickupDistance(BigDecimal estimatedPickupDistance) {
        this.estimatedPickupDistance = estimatedPickupDistance;
        return this;
    }

    public BigDecimal getActualPickupDistance() {
        return this.actualPickupDistance;
    }

    public RideAud setActualPickupDistance(BigDecimal actualPickupDistance) {
        this.actualPickupDistance = actualPickupDistance;
        return this;
    }

    public BigDecimal getEstimatedDropDistance() {
        return this.estimatedDropDistance;
    }

    public RideAud setEstimatedDropDistance(BigDecimal estimatedDropDistance) {
        this.estimatedDropDistance = estimatedDropDistance;
        return this;
    }

    public BigDecimal getActualDropDistance() {
        return this.actualDropDistance;
    }

    public RideAud setActualDropDistance(BigDecimal actualDropDistance) {
        this.actualDropDistance = actualDropDistance;
        return this;
    }

    public String getPickupPath() {
        return this.pickupPath;
    }

    public RideAud setPickupPath(String pickupPath) {
        this.pickupPath = pickupPath;
        return this;
    }

    public String getDropPath() {
        return this.dropPath;
    }

    public RideAud setDropPath(String dropPath) {
        this.dropPath = dropPath;
        return this;
    }

    public BigDecimal getEstimatedAmount() {
        return this.estimatedAmount;
    }

    public RideAud setEstimatedAmount(BigDecimal estimatedAmount) {
        this.estimatedAmount = estimatedAmount;
        return this;
    }

    public BigDecimal getActualAmount() {
        return this.actualAmount;
    }

    public RideAud setActualAmount(BigDecimal actualAmount) {
        this.actualAmount = actualAmount;
        return this;
    }

    public BigDecimal getDiscountAmount() {
        return this.discountAmount;
    }

    public RideAud setDiscountAmount(BigDecimal discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }

    public Integer getPaymentOrderId() {
        return this.paymentOrderId;
    }

    public RideAud setPaymentOrderId(Integer paymentOrderId) {
        this.paymentOrderId = paymentOrderId;
        return this;
    }

    public String getPaymentMode() {
        return this.paymentMode;
    }

    public RideAud setPaymentMode(String paymentMode) {
        this.paymentMode = paymentMode;
        return this;
    }

    public UInteger getRideRequestId() {
        return this.rideRequestId;
    }

    public RideAud setRideRequestId(UInteger rideRequestId) {
        this.rideRequestId = rideRequestId;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public RideAud setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public RideAud setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public RideAud setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public RideAud setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public RideAud setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public UInteger getServiceRegionId() {
        return this.serviceRegionId;
    }

    public RideAud setServiceRegionId(UInteger serviceRegionId) {
        this.serviceRegionId = serviceRegionId;
        return this;
    }

    public Integer getVersionId() {
        return this.versionId;
    }

    public RideAud setVersionId(Integer versionId) {
        this.versionId = versionId;
        return this;
    }

    public UInteger getAudId() {
        return this.audId;
    }

    public RideAud setAudId(UInteger audId) {
        this.audId = audId;
        return this;
    }

    public Integer getTripAssignmentSoc() {
        return this.tripAssignmentSoc;
    }

    public RideAud setTripAssignmentSoc(Integer tripAssignmentSoc) {
        this.tripAssignmentSoc = tripAssignmentSoc;
        return this;
    }

    public Integer getTripAssignmentDte() {
        return this.tripAssignmentDte;
    }

    public RideAud setTripAssignmentDte(Integer tripAssignmentDte) {
        this.tripAssignmentDte = tripAssignmentDte;
        return this;
    }

    public Integer getTripStartDte() {
        return this.tripStartDte;
    }

    public RideAud setTripStartDte(Integer tripStartDte) {
        this.tripStartDte = tripStartDte;
        return this;
    }

    public Integer getTripCompletionDte() {
        return this.tripCompletionDte;
    }

    public RideAud setTripCompletionDte(Integer tripCompletionDte) {
        this.tripCompletionDte = tripCompletionDte;
        return this;
    }

    public Long getEstimatedPickupTimestamp() {
        return this.estimatedPickupTimestamp;
    }

    public RideAud setEstimatedPickupTimestamp(Long estimatedPickupTimestamp) {
        this.estimatedPickupTimestamp = estimatedPickupTimestamp;
        return this;
    }

    public Long getActualStartTimestamp() {
        return this.actualStartTimestamp;
    }

    public RideAud setActualStartTimestamp(Long actualStartTimestamp) {
        this.actualStartTimestamp = actualStartTimestamp;
        return this;
    }

    public UInteger getAssignedBy() {
        return this.assignedBy;
    }

    public RideAud setAssignedBy(UInteger assignedBy) {
        this.assignedBy = assignedBy;
        return this;
    }

    public String getRejectedBy() {
        return this.rejectedBy;
    }

    public RideAud setRejectedBy(String rejectedBy) {
        this.rejectedBy = rejectedBy;
        return this;
    }

    public Long getCancellationEta() {
        return this.cancellationEta;
    }

    public RideAud setCancellationEta(Long cancellationEta) {
        this.cancellationEta = cancellationEta;
        return this;
    }

    public String getPromoCode() {
        return this.promoCode;
    }

    public RideAud setPromoCode(String promoCode) {
        this.promoCode = promoCode;
        return this;
    }

    public String getOtherFlags() {
        return this.otherFlags;
    }

    public RideAud setOtherFlags(String otherFlags) {
        this.otherFlags = otherFlags;
        return this;
    }

    public Integer getBookedFor() {
        return this.bookedFor;
    }

    public RideAud setBookedFor(Integer bookedFor) {
        this.bookedFor = bookedFor;
        return this;
    }

    public Integer getBookedBy() {
        return this.bookedBy;
    }

    public RideAud setBookedBy(Integer bookedBy) {
        this.bookedBy = bookedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RideAud other = (RideAud) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (driverId == null) {
            if (other.driverId != null)
                return false;
        }
        else if (!driverId.equals(other.driverId))
            return false;
        if (rideState == null) {
            if (other.rideState != null)
                return false;
        }
        else if (!rideState.equals(other.rideState))
            return false;
        if (rideType == null) {
            if (other.rideType != null)
                return false;
        }
        else if (!rideType.equals(other.rideType))
            return false;
        if (riderType == null) {
            if (other.riderType != null)
                return false;
        }
        else if (!riderType.equals(other.riderType))
            return false;
        if (vehicleNumber == null) {
            if (other.vehicleNumber != null)
                return false;
        }
        else if (!vehicleNumber.equals(other.vehicleNumber))
            return false;
        if (pickUpTimestamp == null) {
            if (other.pickUpTimestamp != null)
                return false;
        }
        else if (!pickUpTimestamp.equals(other.pickUpTimestamp))
            return false;
        if (arrivalTimestamp == null) {
            if (other.arrivalTimestamp != null)
                return false;
        }
        else if (!arrivalTimestamp.equals(other.arrivalTimestamp))
            return false;
        if (dropTimestamp == null) {
            if (other.dropTimestamp != null)
                return false;
        }
        else if (!dropTimestamp.equals(other.dropTimestamp))
            return false;
        if (assignTimestamp == null) {
            if (other.assignTimestamp != null)
                return false;
        }
        else if (!assignTimestamp.equals(other.assignTimestamp))
            return false;
        if (noShowTimestamp == null) {
            if (other.noShowTimestamp != null)
                return false;
        }
        else if (!noShowTimestamp.equals(other.noShowTimestamp))
            return false;
        if (pickUpLocation == null) {
            if (other.pickUpLocation != null)
                return false;
        }
        else if (!pickUpLocation.equals(other.pickUpLocation))
            return false;
        if (arrivalLocation == null) {
            if (other.arrivalLocation != null)
                return false;
        }
        else if (!arrivalLocation.equals(other.arrivalLocation))
            return false;
        if (dropLocation == null) {
            if (other.dropLocation != null)
                return false;
        }
        else if (!dropLocation.equals(other.dropLocation))
            return false;
        if (assignLocation == null) {
            if (other.assignLocation != null)
                return false;
        }
        else if (!assignLocation.equals(other.assignLocation))
            return false;
        if (noShowLocation == null) {
            if (other.noShowLocation != null)
                return false;
        }
        else if (!noShowLocation.equals(other.noShowLocation))
            return false;
        if (pickUpLat == null) {
            if (other.pickUpLat != null)
                return false;
        }
        else if (!pickUpLat.equals(other.pickUpLat))
            return false;
        if (arrivalLat == null) {
            if (other.arrivalLat != null)
                return false;
        }
        else if (!arrivalLat.equals(other.arrivalLat))
            return false;
        if (dropLat == null) {
            if (other.dropLat != null)
                return false;
        }
        else if (!dropLat.equals(other.dropLat))
            return false;
        if (assignLat == null) {
            if (other.assignLat != null)
                return false;
        }
        else if (!assignLat.equals(other.assignLat))
            return false;
        if (noShowLat == null) {
            if (other.noShowLat != null)
                return false;
        }
        else if (!noShowLat.equals(other.noShowLat))
            return false;
        if (pickUpLong == null) {
            if (other.pickUpLong != null)
                return false;
        }
        else if (!pickUpLong.equals(other.pickUpLong))
            return false;
        if (arrivalLong == null) {
            if (other.arrivalLong != null)
                return false;
        }
        else if (!arrivalLong.equals(other.arrivalLong))
            return false;
        if (dropLong == null) {
            if (other.dropLong != null)
                return false;
        }
        else if (!dropLong.equals(other.dropLong))
            return false;
        if (assignLong == null) {
            if (other.assignLong != null)
                return false;
        }
        else if (!assignLong.equals(other.assignLong))
            return false;
        if (noShowLong == null) {
            if (other.noShowLong != null)
                return false;
        }
        else if (!noShowLong.equals(other.noShowLong))
            return false;
        if (tripStartSoc == null) {
            if (other.tripStartSoc != null)
                return false;
        }
        else if (!tripStartSoc.equals(other.tripStartSoc))
            return false;
        if (tripCompleteSoc == null) {
            if (other.tripCompleteSoc != null)
                return false;
        }
        else if (!tripCompleteSoc.equals(other.tripCompleteSoc))
            return false;
        if (platform == null) {
            if (other.platform != null)
                return false;
        }
        else if (!platform.equals(other.platform))
            return false;
        if (estimatedStartTimestamp == null) {
            if (other.estimatedStartTimestamp != null)
                return false;
        }
        else if (!estimatedStartTimestamp.equals(other.estimatedStartTimestamp))
            return false;
        if (estimatedCompletionTimestamp == null) {
            if (other.estimatedCompletionTimestamp != null)
                return false;
        }
        else if (!estimatedCompletionTimestamp.equals(other.estimatedCompletionTimestamp))
            return false;
        if (actualCompletionTimestamp == null) {
            if (other.actualCompletionTimestamp != null)
                return false;
        }
        else if (!actualCompletionTimestamp.equals(other.actualCompletionTimestamp))
            return false;
        if (estimatedRideDistance == null) {
            if (other.estimatedRideDistance != null)
                return false;
        }
        else if (!estimatedRideDistance.equals(other.estimatedRideDistance))
            return false;
        if (actualRideDistance == null) {
            if (other.actualRideDistance != null)
                return false;
        }
        else if (!actualRideDistance.equals(other.actualRideDistance))
            return false;
        if (estimatedPickupDistance == null) {
            if (other.estimatedPickupDistance != null)
                return false;
        }
        else if (!estimatedPickupDistance.equals(other.estimatedPickupDistance))
            return false;
        if (actualPickupDistance == null) {
            if (other.actualPickupDistance != null)
                return false;
        }
        else if (!actualPickupDistance.equals(other.actualPickupDistance))
            return false;
        if (estimatedDropDistance == null) {
            if (other.estimatedDropDistance != null)
                return false;
        }
        else if (!estimatedDropDistance.equals(other.estimatedDropDistance))
            return false;
        if (actualDropDistance == null) {
            if (other.actualDropDistance != null)
                return false;
        }
        else if (!actualDropDistance.equals(other.actualDropDistance))
            return false;
        if (pickupPath == null) {
            if (other.pickupPath != null)
                return false;
        }
        else if (!pickupPath.equals(other.pickupPath))
            return false;
        if (dropPath == null) {
            if (other.dropPath != null)
                return false;
        }
        else if (!dropPath.equals(other.dropPath))
            return false;
        if (estimatedAmount == null) {
            if (other.estimatedAmount != null)
                return false;
        }
        else if (!estimatedAmount.equals(other.estimatedAmount))
            return false;
        if (actualAmount == null) {
            if (other.actualAmount != null)
                return false;
        }
        else if (!actualAmount.equals(other.actualAmount))
            return false;
        if (discountAmount == null) {
            if (other.discountAmount != null)
                return false;
        }
        else if (!discountAmount.equals(other.discountAmount))
            return false;
        if (paymentOrderId == null) {
            if (other.paymentOrderId != null)
                return false;
        }
        else if (!paymentOrderId.equals(other.paymentOrderId))
            return false;
        if (paymentMode == null) {
            if (other.paymentMode != null)
                return false;
        }
        else if (!paymentMode.equals(other.paymentMode))
            return false;
        if (rideRequestId == null) {
            if (other.rideRequestId != null)
                return false;
        }
        else if (!rideRequestId.equals(other.rideRequestId))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (serviceRegionId == null) {
            if (other.serviceRegionId != null)
                return false;
        }
        else if (!serviceRegionId.equals(other.serviceRegionId))
            return false;
        if (versionId == null) {
            if (other.versionId != null)
                return false;
        }
        else if (!versionId.equals(other.versionId))
            return false;
        if (audId == null) {
            if (other.audId != null)
                return false;
        }
        else if (!audId.equals(other.audId))
            return false;
        if (tripAssignmentSoc == null) {
            if (other.tripAssignmentSoc != null)
                return false;
        }
        else if (!tripAssignmentSoc.equals(other.tripAssignmentSoc))
            return false;
        if (tripAssignmentDte == null) {
            if (other.tripAssignmentDte != null)
                return false;
        }
        else if (!tripAssignmentDte.equals(other.tripAssignmentDte))
            return false;
        if (tripStartDte == null) {
            if (other.tripStartDte != null)
                return false;
        }
        else if (!tripStartDte.equals(other.tripStartDte))
            return false;
        if (tripCompletionDte == null) {
            if (other.tripCompletionDte != null)
                return false;
        }
        else if (!tripCompletionDte.equals(other.tripCompletionDte))
            return false;
        if (estimatedPickupTimestamp == null) {
            if (other.estimatedPickupTimestamp != null)
                return false;
        }
        else if (!estimatedPickupTimestamp.equals(other.estimatedPickupTimestamp))
            return false;
        if (actualStartTimestamp == null) {
            if (other.actualStartTimestamp != null)
                return false;
        }
        else if (!actualStartTimestamp.equals(other.actualStartTimestamp))
            return false;
        if (assignedBy == null) {
            if (other.assignedBy != null)
                return false;
        }
        else if (!assignedBy.equals(other.assignedBy))
            return false;
        if (rejectedBy == null) {
            if (other.rejectedBy != null)
                return false;
        }
        else if (!rejectedBy.equals(other.rejectedBy))
            return false;
        if (cancellationEta == null) {
            if (other.cancellationEta != null)
                return false;
        }
        else if (!cancellationEta.equals(other.cancellationEta))
            return false;
        if (promoCode == null) {
            if (other.promoCode != null)
                return false;
        }
        else if (!promoCode.equals(other.promoCode))
            return false;
        if (otherFlags == null) {
            if (other.otherFlags != null)
                return false;
        }
        else if (!otherFlags.equals(other.otherFlags))
            return false;
        if (bookedFor == null) {
            if (other.bookedFor != null)
                return false;
        }
        else if (!bookedFor.equals(other.bookedFor))
            return false;
        if (bookedBy == null) {
            if (other.bookedBy != null)
                return false;
        }
        else if (!bookedBy.equals(other.bookedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.driverId == null) ? 0 : this.driverId.hashCode());
        result = prime * result + ((this.rideState == null) ? 0 : this.rideState.hashCode());
        result = prime * result + ((this.rideType == null) ? 0 : this.rideType.hashCode());
        result = prime * result + ((this.riderType == null) ? 0 : this.riderType.hashCode());
        result = prime * result + ((this.vehicleNumber == null) ? 0 : this.vehicleNumber.hashCode());
        result = prime * result + ((this.pickUpTimestamp == null) ? 0 : this.pickUpTimestamp.hashCode());
        result = prime * result + ((this.arrivalTimestamp == null) ? 0 : this.arrivalTimestamp.hashCode());
        result = prime * result + ((this.dropTimestamp == null) ? 0 : this.dropTimestamp.hashCode());
        result = prime * result + ((this.assignTimestamp == null) ? 0 : this.assignTimestamp.hashCode());
        result = prime * result + ((this.noShowTimestamp == null) ? 0 : this.noShowTimestamp.hashCode());
        result = prime * result + ((this.pickUpLocation == null) ? 0 : this.pickUpLocation.hashCode());
        result = prime * result + ((this.arrivalLocation == null) ? 0 : this.arrivalLocation.hashCode());
        result = prime * result + ((this.dropLocation == null) ? 0 : this.dropLocation.hashCode());
        result = prime * result + ((this.assignLocation == null) ? 0 : this.assignLocation.hashCode());
        result = prime * result + ((this.noShowLocation == null) ? 0 : this.noShowLocation.hashCode());
        result = prime * result + ((this.pickUpLat == null) ? 0 : this.pickUpLat.hashCode());
        result = prime * result + ((this.arrivalLat == null) ? 0 : this.arrivalLat.hashCode());
        result = prime * result + ((this.dropLat == null) ? 0 : this.dropLat.hashCode());
        result = prime * result + ((this.assignLat == null) ? 0 : this.assignLat.hashCode());
        result = prime * result + ((this.noShowLat == null) ? 0 : this.noShowLat.hashCode());
        result = prime * result + ((this.pickUpLong == null) ? 0 : this.pickUpLong.hashCode());
        result = prime * result + ((this.arrivalLong == null) ? 0 : this.arrivalLong.hashCode());
        result = prime * result + ((this.dropLong == null) ? 0 : this.dropLong.hashCode());
        result = prime * result + ((this.assignLong == null) ? 0 : this.assignLong.hashCode());
        result = prime * result + ((this.noShowLong == null) ? 0 : this.noShowLong.hashCode());
        result = prime * result + ((this.tripStartSoc == null) ? 0 : this.tripStartSoc.hashCode());
        result = prime * result + ((this.tripCompleteSoc == null) ? 0 : this.tripCompleteSoc.hashCode());
        result = prime * result + ((this.platform == null) ? 0 : this.platform.hashCode());
        result = prime * result + ((this.estimatedStartTimestamp == null) ? 0 : this.estimatedStartTimestamp.hashCode());
        result = prime * result + ((this.estimatedCompletionTimestamp == null) ? 0 : this.estimatedCompletionTimestamp.hashCode());
        result = prime * result + ((this.actualCompletionTimestamp == null) ? 0 : this.actualCompletionTimestamp.hashCode());
        result = prime * result + ((this.estimatedRideDistance == null) ? 0 : this.estimatedRideDistance.hashCode());
        result = prime * result + ((this.actualRideDistance == null) ? 0 : this.actualRideDistance.hashCode());
        result = prime * result + ((this.estimatedPickupDistance == null) ? 0 : this.estimatedPickupDistance.hashCode());
        result = prime * result + ((this.actualPickupDistance == null) ? 0 : this.actualPickupDistance.hashCode());
        result = prime * result + ((this.estimatedDropDistance == null) ? 0 : this.estimatedDropDistance.hashCode());
        result = prime * result + ((this.actualDropDistance == null) ? 0 : this.actualDropDistance.hashCode());
        result = prime * result + ((this.pickupPath == null) ? 0 : this.pickupPath.hashCode());
        result = prime * result + ((this.dropPath == null) ? 0 : this.dropPath.hashCode());
        result = prime * result + ((this.estimatedAmount == null) ? 0 : this.estimatedAmount.hashCode());
        result = prime * result + ((this.actualAmount == null) ? 0 : this.actualAmount.hashCode());
        result = prime * result + ((this.discountAmount == null) ? 0 : this.discountAmount.hashCode());
        result = prime * result + ((this.paymentOrderId == null) ? 0 : this.paymentOrderId.hashCode());
        result = prime * result + ((this.paymentMode == null) ? 0 : this.paymentMode.hashCode());
        result = prime * result + ((this.rideRequestId == null) ? 0 : this.rideRequestId.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.serviceRegionId == null) ? 0 : this.serviceRegionId.hashCode());
        result = prime * result + ((this.versionId == null) ? 0 : this.versionId.hashCode());
        result = prime * result + ((this.audId == null) ? 0 : this.audId.hashCode());
        result = prime * result + ((this.tripAssignmentSoc == null) ? 0 : this.tripAssignmentSoc.hashCode());
        result = prime * result + ((this.tripAssignmentDte == null) ? 0 : this.tripAssignmentDte.hashCode());
        result = prime * result + ((this.tripStartDte == null) ? 0 : this.tripStartDte.hashCode());
        result = prime * result + ((this.tripCompletionDte == null) ? 0 : this.tripCompletionDte.hashCode());
        result = prime * result + ((this.estimatedPickupTimestamp == null) ? 0 : this.estimatedPickupTimestamp.hashCode());
        result = prime * result + ((this.actualStartTimestamp == null) ? 0 : this.actualStartTimestamp.hashCode());
        result = prime * result + ((this.assignedBy == null) ? 0 : this.assignedBy.hashCode());
        result = prime * result + ((this.rejectedBy == null) ? 0 : this.rejectedBy.hashCode());
        result = prime * result + ((this.cancellationEta == null) ? 0 : this.cancellationEta.hashCode());
        result = prime * result + ((this.promoCode == null) ? 0 : this.promoCode.hashCode());
        result = prime * result + ((this.otherFlags == null) ? 0 : this.otherFlags.hashCode());
        result = prime * result + ((this.bookedFor == null) ? 0 : this.bookedFor.hashCode());
        result = prime * result + ((this.bookedBy == null) ? 0 : this.bookedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RideAud (");

        sb.append(id);
        sb.append(", ").append(riderId);
        sb.append(", ").append(driverId);
        sb.append(", ").append(rideState);
        sb.append(", ").append(rideType);
        sb.append(", ").append(riderType);
        sb.append(", ").append(vehicleNumber);
        sb.append(", ").append(pickUpTimestamp);
        sb.append(", ").append(arrivalTimestamp);
        sb.append(", ").append(dropTimestamp);
        sb.append(", ").append(assignTimestamp);
        sb.append(", ").append(noShowTimestamp);
        sb.append(", ").append(pickUpLocation);
        sb.append(", ").append(arrivalLocation);
        sb.append(", ").append(dropLocation);
        sb.append(", ").append(assignLocation);
        sb.append(", ").append(noShowLocation);
        sb.append(", ").append(pickUpLat);
        sb.append(", ").append(arrivalLat);
        sb.append(", ").append(dropLat);
        sb.append(", ").append(assignLat);
        sb.append(", ").append(noShowLat);
        sb.append(", ").append(pickUpLong);
        sb.append(", ").append(arrivalLong);
        sb.append(", ").append(dropLong);
        sb.append(", ").append(assignLong);
        sb.append(", ").append(noShowLong);
        sb.append(", ").append(tripStartSoc);
        sb.append(", ").append(tripCompleteSoc);
        sb.append(", ").append(platform);
        sb.append(", ").append(estimatedStartTimestamp);
        sb.append(", ").append(estimatedCompletionTimestamp);
        sb.append(", ").append(actualCompletionTimestamp);
        sb.append(", ").append(estimatedRideDistance);
        sb.append(", ").append(actualRideDistance);
        sb.append(", ").append(estimatedPickupDistance);
        sb.append(", ").append(actualPickupDistance);
        sb.append(", ").append(estimatedDropDistance);
        sb.append(", ").append(actualDropDistance);
        sb.append(", ").append(pickupPath);
        sb.append(", ").append(dropPath);
        sb.append(", ").append(estimatedAmount);
        sb.append(", ").append(actualAmount);
        sb.append(", ").append(discountAmount);
        sb.append(", ").append(paymentOrderId);
        sb.append(", ").append(paymentMode);
        sb.append(", ").append(rideRequestId);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(serviceRegionId);
        sb.append(", ").append(versionId);
        sb.append(", ").append(audId);
        sb.append(", ").append(tripAssignmentSoc);
        sb.append(", ").append(tripAssignmentDte);
        sb.append(", ").append(tripStartDte);
        sb.append(", ").append(tripCompletionDte);
        sb.append(", ").append(estimatedPickupTimestamp);
        sb.append(", ").append(actualStartTimestamp);
        sb.append(", ").append(assignedBy);
        sb.append(", ").append(rejectedBy);
        sb.append(", ").append(cancellationEta);
        sb.append(", ").append(promoCode);
        sb.append(", ").append(otherFlags);
        sb.append(", ").append(bookedFor);
        sb.append(", ").append(bookedBy);

        sb.append(")");
        return sb.toString();
    }
}
