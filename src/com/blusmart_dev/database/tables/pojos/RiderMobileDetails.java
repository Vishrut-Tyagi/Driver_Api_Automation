/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiderMobileDetails implements Serializable {

    private static final long serialVersionUID = 1855370855;

    private UInteger id;
    private UInteger riderId;
    private String   fcmToken;
    private String   imei_1;
    private String   imei_2;
    private String   screenHeight;
    private String   screenWidth;
    private String   screenDpi;
    private String   appBuildNumber;
    private String   appVersion;
    private String   platform;
    private String   brand;
    private String   model;
    private String   carrier;
    private String   osVersion;
    private String   gms;
    private String   manufacturer;
    private String   city;
    private String   distinctId;
    private Byte     isActive;
    private Long     createdTimestamp;
    private Long     lastUpdatedTimestamp;
    private UInteger createdBy;
    private UInteger lastUpdatedBy;

    public RiderMobileDetails() {}

    public RiderMobileDetails(RiderMobileDetails value) {
        this.id = value.id;
        this.riderId = value.riderId;
        this.fcmToken = value.fcmToken;
        this.imei_1 = value.imei_1;
        this.imei_2 = value.imei_2;
        this.screenHeight = value.screenHeight;
        this.screenWidth = value.screenWidth;
        this.screenDpi = value.screenDpi;
        this.appBuildNumber = value.appBuildNumber;
        this.appVersion = value.appVersion;
        this.platform = value.platform;
        this.brand = value.brand;
        this.model = value.model;
        this.carrier = value.carrier;
        this.osVersion = value.osVersion;
        this.gms = value.gms;
        this.manufacturer = value.manufacturer;
        this.city = value.city;
        this.distinctId = value.distinctId;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
    }

    public RiderMobileDetails(
        UInteger id,
        UInteger riderId,
        String   fcmToken,
        String   imei_1,
        String   imei_2,
        String   screenHeight,
        String   screenWidth,
        String   screenDpi,
        String   appBuildNumber,
        String   appVersion,
        String   platform,
        String   brand,
        String   model,
        String   carrier,
        String   osVersion,
        String   gms,
        String   manufacturer,
        String   city,
        String   distinctId,
        Byte     isActive,
        Long     createdTimestamp,
        Long     lastUpdatedTimestamp,
        UInteger createdBy,
        UInteger lastUpdatedBy
    ) {
        this.id = id;
        this.riderId = riderId;
        this.fcmToken = fcmToken;
        this.imei_1 = imei_1;
        this.imei_2 = imei_2;
        this.screenHeight = screenHeight;
        this.screenWidth = screenWidth;
        this.screenDpi = screenDpi;
        this.appBuildNumber = appBuildNumber;
        this.appVersion = appVersion;
        this.platform = platform;
        this.brand = brand;
        this.model = model;
        this.carrier = carrier;
        this.osVersion = osVersion;
        this.gms = gms;
        this.manufacturer = manufacturer;
        this.city = city;
        this.distinctId = distinctId;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
    }

    public UInteger getId() {
        return this.id;
    }

    public RiderMobileDetails setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public RiderMobileDetails setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public String getFcmToken() {
        return this.fcmToken;
    }

    public RiderMobileDetails setFcmToken(String fcmToken) {
        this.fcmToken = fcmToken;
        return this;
    }

    public String getImei_1() {
        return this.imei_1;
    }

    public RiderMobileDetails setImei_1(String imei_1) {
        this.imei_1 = imei_1;
        return this;
    }

    public String getImei_2() {
        return this.imei_2;
    }

    public RiderMobileDetails setImei_2(String imei_2) {
        this.imei_2 = imei_2;
        return this;
    }

    public String getScreenHeight() {
        return this.screenHeight;
    }

    public RiderMobileDetails setScreenHeight(String screenHeight) {
        this.screenHeight = screenHeight;
        return this;
    }

    public String getScreenWidth() {
        return this.screenWidth;
    }

    public RiderMobileDetails setScreenWidth(String screenWidth) {
        this.screenWidth = screenWidth;
        return this;
    }

    public String getScreenDpi() {
        return this.screenDpi;
    }

    public RiderMobileDetails setScreenDpi(String screenDpi) {
        this.screenDpi = screenDpi;
        return this;
    }

    public String getAppBuildNumber() {
        return this.appBuildNumber;
    }

    public RiderMobileDetails setAppBuildNumber(String appBuildNumber) {
        this.appBuildNumber = appBuildNumber;
        return this;
    }

    public String getAppVersion() {
        return this.appVersion;
    }

    public RiderMobileDetails setAppVersion(String appVersion) {
        this.appVersion = appVersion;
        return this;
    }

    public String getPlatform() {
        return this.platform;
    }

    public RiderMobileDetails setPlatform(String platform) {
        this.platform = platform;
        return this;
    }

    public String getBrand() {
        return this.brand;
    }

    public RiderMobileDetails setBrand(String brand) {
        this.brand = brand;
        return this;
    }

    public String getModel() {
        return this.model;
    }

    public RiderMobileDetails setModel(String model) {
        this.model = model;
        return this;
    }

    public String getCarrier() {
        return this.carrier;
    }

    public RiderMobileDetails setCarrier(String carrier) {
        this.carrier = carrier;
        return this;
    }

    public String getOsVersion() {
        return this.osVersion;
    }

    public RiderMobileDetails setOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }

    public String getGms() {
        return this.gms;
    }

    public RiderMobileDetails setGms(String gms) {
        this.gms = gms;
        return this;
    }

    public String getManufacturer() {
        return this.manufacturer;
    }

    public RiderMobileDetails setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
        return this;
    }

    public String getCity() {
        return this.city;
    }

    public RiderMobileDetails setCity(String city) {
        this.city = city;
        return this;
    }

    public String getDistinctId() {
        return this.distinctId;
    }

    public RiderMobileDetails setDistinctId(String distinctId) {
        this.distinctId = distinctId;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public RiderMobileDetails setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public RiderMobileDetails setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public RiderMobileDetails setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public RiderMobileDetails setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public RiderMobileDetails setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RiderMobileDetails other = (RiderMobileDetails) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (fcmToken == null) {
            if (other.fcmToken != null)
                return false;
        }
        else if (!fcmToken.equals(other.fcmToken))
            return false;
        if (imei_1 == null) {
            if (other.imei_1 != null)
                return false;
        }
        else if (!imei_1.equals(other.imei_1))
            return false;
        if (imei_2 == null) {
            if (other.imei_2 != null)
                return false;
        }
        else if (!imei_2.equals(other.imei_2))
            return false;
        if (screenHeight == null) {
            if (other.screenHeight != null)
                return false;
        }
        else if (!screenHeight.equals(other.screenHeight))
            return false;
        if (screenWidth == null) {
            if (other.screenWidth != null)
                return false;
        }
        else if (!screenWidth.equals(other.screenWidth))
            return false;
        if (screenDpi == null) {
            if (other.screenDpi != null)
                return false;
        }
        else if (!screenDpi.equals(other.screenDpi))
            return false;
        if (appBuildNumber == null) {
            if (other.appBuildNumber != null)
                return false;
        }
        else if (!appBuildNumber.equals(other.appBuildNumber))
            return false;
        if (appVersion == null) {
            if (other.appVersion != null)
                return false;
        }
        else if (!appVersion.equals(other.appVersion))
            return false;
        if (platform == null) {
            if (other.platform != null)
                return false;
        }
        else if (!platform.equals(other.platform))
            return false;
        if (brand == null) {
            if (other.brand != null)
                return false;
        }
        else if (!brand.equals(other.brand))
            return false;
        if (model == null) {
            if (other.model != null)
                return false;
        }
        else if (!model.equals(other.model))
            return false;
        if (carrier == null) {
            if (other.carrier != null)
                return false;
        }
        else if (!carrier.equals(other.carrier))
            return false;
        if (osVersion == null) {
            if (other.osVersion != null)
                return false;
        }
        else if (!osVersion.equals(other.osVersion))
            return false;
        if (gms == null) {
            if (other.gms != null)
                return false;
        }
        else if (!gms.equals(other.gms))
            return false;
        if (manufacturer == null) {
            if (other.manufacturer != null)
                return false;
        }
        else if (!manufacturer.equals(other.manufacturer))
            return false;
        if (city == null) {
            if (other.city != null)
                return false;
        }
        else if (!city.equals(other.city))
            return false;
        if (distinctId == null) {
            if (other.distinctId != null)
                return false;
        }
        else if (!distinctId.equals(other.distinctId))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.fcmToken == null) ? 0 : this.fcmToken.hashCode());
        result = prime * result + ((this.imei_1 == null) ? 0 : this.imei_1.hashCode());
        result = prime * result + ((this.imei_2 == null) ? 0 : this.imei_2.hashCode());
        result = prime * result + ((this.screenHeight == null) ? 0 : this.screenHeight.hashCode());
        result = prime * result + ((this.screenWidth == null) ? 0 : this.screenWidth.hashCode());
        result = prime * result + ((this.screenDpi == null) ? 0 : this.screenDpi.hashCode());
        result = prime * result + ((this.appBuildNumber == null) ? 0 : this.appBuildNumber.hashCode());
        result = prime * result + ((this.appVersion == null) ? 0 : this.appVersion.hashCode());
        result = prime * result + ((this.platform == null) ? 0 : this.platform.hashCode());
        result = prime * result + ((this.brand == null) ? 0 : this.brand.hashCode());
        result = prime * result + ((this.model == null) ? 0 : this.model.hashCode());
        result = prime * result + ((this.carrier == null) ? 0 : this.carrier.hashCode());
        result = prime * result + ((this.osVersion == null) ? 0 : this.osVersion.hashCode());
        result = prime * result + ((this.gms == null) ? 0 : this.gms.hashCode());
        result = prime * result + ((this.manufacturer == null) ? 0 : this.manufacturer.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.distinctId == null) ? 0 : this.distinctId.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RiderMobileDetails (");

        sb.append(id);
        sb.append(", ").append(riderId);
        sb.append(", ").append(fcmToken);
        sb.append(", ").append(imei_1);
        sb.append(", ").append(imei_2);
        sb.append(", ").append(screenHeight);
        sb.append(", ").append(screenWidth);
        sb.append(", ").append(screenDpi);
        sb.append(", ").append(appBuildNumber);
        sb.append(", ").append(appVersion);
        sb.append(", ").append(platform);
        sb.append(", ").append(brand);
        sb.append(", ").append(model);
        sb.append(", ").append(carrier);
        sb.append(", ").append(osVersion);
        sb.append(", ").append(gms);
        sb.append(", ").append(manufacturer);
        sb.append(", ").append(city);
        sb.append(", ").append(distinctId);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);

        sb.append(")");
        return sb.toString();
    }
}
