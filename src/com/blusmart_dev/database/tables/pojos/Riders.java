/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Riders implements Serializable {

    private static final long serialVersionUID = 1629994644;

    private Integer  id;
    private String   firstName;
    private String   lastName;
    private String   email;
    private String   phone;
    private String   profilePicUrl;
    private Byte     isActive;
    private Long     createdTimestamp;
    private Long     lastUpdatedTimestamp;
    private UInteger createdBy;
    private UInteger lastUpdatedBy;
    private Byte     isVerified;
    private Byte     isBlocked;
    private Integer  ssoid;
    private Integer  ridecellRiderId;
    private Long     lastActiveTimestamp;
    private String   signupSource;
    private String   loginSource;
    private String   userSetting;
    private String   otherFlags;
    private String   gender;
    private Long     dob;
    private Byte     isProfileCompleted;
    private UInteger earlyArrivalCount;
    private String   state;

    public Riders() {}

    public Riders(Riders value) {
        this.id = value.id;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.email = value.email;
        this.phone = value.phone;
        this.profilePicUrl = value.profilePicUrl;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.isVerified = value.isVerified;
        this.isBlocked = value.isBlocked;
        this.ssoid = value.ssoid;
        this.ridecellRiderId = value.ridecellRiderId;
        this.lastActiveTimestamp = value.lastActiveTimestamp;
        this.signupSource = value.signupSource;
        this.loginSource = value.loginSource;
        this.userSetting = value.userSetting;
        this.otherFlags = value.otherFlags;
        this.gender = value.gender;
        this.dob = value.dob;
        this.isProfileCompleted = value.isProfileCompleted;
        this.earlyArrivalCount = value.earlyArrivalCount;
        this.state = value.state;
    }

    public Riders(
        Integer  id,
        String   firstName,
        String   lastName,
        String   email,
        String   phone,
        String   profilePicUrl,
        Byte     isActive,
        Long     createdTimestamp,
        Long     lastUpdatedTimestamp,
        UInteger createdBy,
        UInteger lastUpdatedBy,
        Byte     isVerified,
        Byte     isBlocked,
        Integer  ssoid,
        Integer  ridecellRiderId,
        Long     lastActiveTimestamp,
        String   signupSource,
        String   loginSource,
        String   userSetting,
        String   otherFlags,
        String   gender,
        Long     dob,
        Byte     isProfileCompleted,
        UInteger earlyArrivalCount,
        String   state
    ) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phone = phone;
        this.profilePicUrl = profilePicUrl;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.isVerified = isVerified;
        this.isBlocked = isBlocked;
        this.ssoid = ssoid;
        this.ridecellRiderId = ridecellRiderId;
        this.lastActiveTimestamp = lastActiveTimestamp;
        this.signupSource = signupSource;
        this.loginSource = loginSource;
        this.userSetting = userSetting;
        this.otherFlags = otherFlags;
        this.gender = gender;
        this.dob = dob;
        this.isProfileCompleted = isProfileCompleted;
        this.earlyArrivalCount = earlyArrivalCount;
        this.state = state;
    }

    public Integer getId() {
        return this.id;
    }

    public Riders setId(Integer id) {
        this.id = id;
        return this;
    }

    public String getFirstName() {
        return this.firstName;
    }

    public Riders setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    public String getLastName() {
        return this.lastName;
    }

    public Riders setLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    public String getEmail() {
        return this.email;
    }

    public Riders setEmail(String email) {
        this.email = email;
        return this;
    }

    public String getPhone() {
        return this.phone;
    }

    public Riders setPhone(String phone) {
        this.phone = phone;
        return this;
    }

    public String getProfilePicUrl() {
        return this.profilePicUrl;
    }

    public Riders setProfilePicUrl(String profilePicUrl) {
        this.profilePicUrl = profilePicUrl;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public Riders setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public Riders setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public Riders setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public Riders setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public Riders setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public Byte getIsVerified() {
        return this.isVerified;
    }

    public Riders setIsVerified(Byte isVerified) {
        this.isVerified = isVerified;
        return this;
    }

    public Byte getIsBlocked() {
        return this.isBlocked;
    }

    public Riders setIsBlocked(Byte isBlocked) {
        this.isBlocked = isBlocked;
        return this;
    }

    public Integer getSsoid() {
        return this.ssoid;
    }

    public Riders setSsoid(Integer ssoid) {
        this.ssoid = ssoid;
        return this;
    }

    public Integer getRidecellRiderId() {
        return this.ridecellRiderId;
    }

    public Riders setRidecellRiderId(Integer ridecellRiderId) {
        this.ridecellRiderId = ridecellRiderId;
        return this;
    }

    public Long getLastActiveTimestamp() {
        return this.lastActiveTimestamp;
    }

    public Riders setLastActiveTimestamp(Long lastActiveTimestamp) {
        this.lastActiveTimestamp = lastActiveTimestamp;
        return this;
    }

    public String getSignupSource() {
        return this.signupSource;
    }

    public Riders setSignupSource(String signupSource) {
        this.signupSource = signupSource;
        return this;
    }

    public String getLoginSource() {
        return this.loginSource;
    }

    public Riders setLoginSource(String loginSource) {
        this.loginSource = loginSource;
        return this;
    }

    public String getUserSetting() {
        return this.userSetting;
    }

    public Riders setUserSetting(String userSetting) {
        this.userSetting = userSetting;
        return this;
    }

    public String getOtherFlags() {
        return this.otherFlags;
    }

    public Riders setOtherFlags(String otherFlags) {
        this.otherFlags = otherFlags;
        return this;
    }

    public String getGender() {
        return this.gender;
    }

    public Riders setGender(String gender) {
        this.gender = gender;
        return this;
    }

    public Long getDob() {
        return this.dob;
    }

    public Riders setDob(Long dob) {
        this.dob = dob;
        return this;
    }

    public Byte getIsProfileCompleted() {
        return this.isProfileCompleted;
    }

    public Riders setIsProfileCompleted(Byte isProfileCompleted) {
        this.isProfileCompleted = isProfileCompleted;
        return this;
    }

    public UInteger getEarlyArrivalCount() {
        return this.earlyArrivalCount;
    }

    public Riders setEarlyArrivalCount(UInteger earlyArrivalCount) {
        this.earlyArrivalCount = earlyArrivalCount;
        return this;
    }

    public String getState() {
        return this.state;
    }

    public Riders setState(String state) {
        this.state = state;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Riders other = (Riders) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!firstName.equals(other.firstName))
            return false;
        if (lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!lastName.equals(other.lastName))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (phone == null) {
            if (other.phone != null)
                return false;
        }
        else if (!phone.equals(other.phone))
            return false;
        if (profilePicUrl == null) {
            if (other.profilePicUrl != null)
                return false;
        }
        else if (!profilePicUrl.equals(other.profilePicUrl))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (isVerified == null) {
            if (other.isVerified != null)
                return false;
        }
        else if (!isVerified.equals(other.isVerified))
            return false;
        if (isBlocked == null) {
            if (other.isBlocked != null)
                return false;
        }
        else if (!isBlocked.equals(other.isBlocked))
            return false;
        if (ssoid == null) {
            if (other.ssoid != null)
                return false;
        }
        else if (!ssoid.equals(other.ssoid))
            return false;
        if (ridecellRiderId == null) {
            if (other.ridecellRiderId != null)
                return false;
        }
        else if (!ridecellRiderId.equals(other.ridecellRiderId))
            return false;
        if (lastActiveTimestamp == null) {
            if (other.lastActiveTimestamp != null)
                return false;
        }
        else if (!lastActiveTimestamp.equals(other.lastActiveTimestamp))
            return false;
        if (signupSource == null) {
            if (other.signupSource != null)
                return false;
        }
        else if (!signupSource.equals(other.signupSource))
            return false;
        if (loginSource == null) {
            if (other.loginSource != null)
                return false;
        }
        else if (!loginSource.equals(other.loginSource))
            return false;
        if (userSetting == null) {
            if (other.userSetting != null)
                return false;
        }
        else if (!userSetting.equals(other.userSetting))
            return false;
        if (otherFlags == null) {
            if (other.otherFlags != null)
                return false;
        }
        else if (!otherFlags.equals(other.otherFlags))
            return false;
        if (gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!gender.equals(other.gender))
            return false;
        if (dob == null) {
            if (other.dob != null)
                return false;
        }
        else if (!dob.equals(other.dob))
            return false;
        if (isProfileCompleted == null) {
            if (other.isProfileCompleted != null)
                return false;
        }
        else if (!isProfileCompleted.equals(other.isProfileCompleted))
            return false;
        if (earlyArrivalCount == null) {
            if (other.earlyArrivalCount != null)
                return false;
        }
        else if (!earlyArrivalCount.equals(other.earlyArrivalCount))
            return false;
        if (state == null) {
            if (other.state != null)
                return false;
        }
        else if (!state.equals(other.state))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.phone == null) ? 0 : this.phone.hashCode());
        result = prime * result + ((this.profilePicUrl == null) ? 0 : this.profilePicUrl.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.isVerified == null) ? 0 : this.isVerified.hashCode());
        result = prime * result + ((this.isBlocked == null) ? 0 : this.isBlocked.hashCode());
        result = prime * result + ((this.ssoid == null) ? 0 : this.ssoid.hashCode());
        result = prime * result + ((this.ridecellRiderId == null) ? 0 : this.ridecellRiderId.hashCode());
        result = prime * result + ((this.lastActiveTimestamp == null) ? 0 : this.lastActiveTimestamp.hashCode());
        result = prime * result + ((this.signupSource == null) ? 0 : this.signupSource.hashCode());
        result = prime * result + ((this.loginSource == null) ? 0 : this.loginSource.hashCode());
        result = prime * result + ((this.userSetting == null) ? 0 : this.userSetting.hashCode());
        result = prime * result + ((this.otherFlags == null) ? 0 : this.otherFlags.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.dob == null) ? 0 : this.dob.hashCode());
        result = prime * result + ((this.isProfileCompleted == null) ? 0 : this.isProfileCompleted.hashCode());
        result = prime * result + ((this.earlyArrivalCount == null) ? 0 : this.earlyArrivalCount.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Riders (");

        sb.append(id);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(email);
        sb.append(", ").append(phone);
        sb.append(", ").append(profilePicUrl);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(isVerified);
        sb.append(", ").append(isBlocked);
        sb.append(", ").append(ssoid);
        sb.append(", ").append(ridecellRiderId);
        sb.append(", ").append(lastActiveTimestamp);
        sb.append(", ").append(signupSource);
        sb.append(", ").append(loginSource);
        sb.append(", ").append(userSetting);
        sb.append(", ").append(otherFlags);
        sb.append(", ").append(gender);
        sb.append(", ").append(dob);
        sb.append(", ").append(isProfileCompleted);
        sb.append(", ").append(earlyArrivalCount);
        sb.append(", ").append(state);

        sb.append(")");
        return sb.toString();
    }
}
