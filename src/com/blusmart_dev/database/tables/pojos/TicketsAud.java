/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketsAud implements Serializable {

    private static final long serialVersionUID = -2137596440;

    private UInteger audId;
    private UInteger id;
    private UInteger rideRequestId;
    private UInteger rideId;
    private UInteger riderId;
    private String   ticketType;
    private String   ticketStage;
    private String   incidentId;
    private String   ticketHistoryDetails;
    private Long     closedTimestamp;
    private String   closureRemark;
    private Byte     isActive;
    private Long     createdTimestamp;
    private Long     lastUpdatedTimestamp;
    private UInteger createdBy;
    private UInteger lastUpdatedBy;
    private String   feedback;

    public TicketsAud() {}

    public TicketsAud(TicketsAud value) {
        this.audId = value.audId;
        this.id = value.id;
        this.rideRequestId = value.rideRequestId;
        this.rideId = value.rideId;
        this.riderId = value.riderId;
        this.ticketType = value.ticketType;
        this.ticketStage = value.ticketStage;
        this.incidentId = value.incidentId;
        this.ticketHistoryDetails = value.ticketHistoryDetails;
        this.closedTimestamp = value.closedTimestamp;
        this.closureRemark = value.closureRemark;
        this.isActive = value.isActive;
        this.createdTimestamp = value.createdTimestamp;
        this.lastUpdatedTimestamp = value.lastUpdatedTimestamp;
        this.createdBy = value.createdBy;
        this.lastUpdatedBy = value.lastUpdatedBy;
        this.feedback = value.feedback;
    }

    public TicketsAud(
        UInteger audId,
        UInteger id,
        UInteger rideRequestId,
        UInteger rideId,
        UInteger riderId,
        String   ticketType,
        String   ticketStage,
        String   incidentId,
        String   ticketHistoryDetails,
        Long     closedTimestamp,
        String   closureRemark,
        Byte     isActive,
        Long     createdTimestamp,
        Long     lastUpdatedTimestamp,
        UInteger createdBy,
        UInteger lastUpdatedBy,
        String   feedback
    ) {
        this.audId = audId;
        this.id = id;
        this.rideRequestId = rideRequestId;
        this.rideId = rideId;
        this.riderId = riderId;
        this.ticketType = ticketType;
        this.ticketStage = ticketStage;
        this.incidentId = incidentId;
        this.ticketHistoryDetails = ticketHistoryDetails;
        this.closedTimestamp = closedTimestamp;
        this.closureRemark = closureRemark;
        this.isActive = isActive;
        this.createdTimestamp = createdTimestamp;
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        this.createdBy = createdBy;
        this.lastUpdatedBy = lastUpdatedBy;
        this.feedback = feedback;
    }

    public UInteger getAudId() {
        return this.audId;
    }

    public TicketsAud setAudId(UInteger audId) {
        this.audId = audId;
        return this;
    }

    public UInteger getId() {
        return this.id;
    }

    public TicketsAud setId(UInteger id) {
        this.id = id;
        return this;
    }

    public UInteger getRideRequestId() {
        return this.rideRequestId;
    }

    public TicketsAud setRideRequestId(UInteger rideRequestId) {
        this.rideRequestId = rideRequestId;
        return this;
    }

    public UInteger getRideId() {
        return this.rideId;
    }

    public TicketsAud setRideId(UInteger rideId) {
        this.rideId = rideId;
        return this;
    }

    public UInteger getRiderId() {
        return this.riderId;
    }

    public TicketsAud setRiderId(UInteger riderId) {
        this.riderId = riderId;
        return this;
    }

    public String getTicketType() {
        return this.ticketType;
    }

    public TicketsAud setTicketType(String ticketType) {
        this.ticketType = ticketType;
        return this;
    }

    public String getTicketStage() {
        return this.ticketStage;
    }

    public TicketsAud setTicketStage(String ticketStage) {
        this.ticketStage = ticketStage;
        return this;
    }

    public String getIncidentId() {
        return this.incidentId;
    }

    public TicketsAud setIncidentId(String incidentId) {
        this.incidentId = incidentId;
        return this;
    }

    public String getTicketHistoryDetails() {
        return this.ticketHistoryDetails;
    }

    public TicketsAud setTicketHistoryDetails(String ticketHistoryDetails) {
        this.ticketHistoryDetails = ticketHistoryDetails;
        return this;
    }

    public Long getClosedTimestamp() {
        return this.closedTimestamp;
    }

    public TicketsAud setClosedTimestamp(Long closedTimestamp) {
        this.closedTimestamp = closedTimestamp;
        return this;
    }

    public String getClosureRemark() {
        return this.closureRemark;
    }

    public TicketsAud setClosureRemark(String closureRemark) {
        this.closureRemark = closureRemark;
        return this;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public TicketsAud setIsActive(Byte isActive) {
        this.isActive = isActive;
        return this;
    }

    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public TicketsAud setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    public Long getLastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public TicketsAud setLastUpdatedTimestamp(Long lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }

    public UInteger getCreatedBy() {
        return this.createdBy;
    }

    public TicketsAud setCreatedBy(UInteger createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public UInteger getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public TicketsAud setLastUpdatedBy(UInteger lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public String getFeedback() {
        return this.feedback;
    }

    public TicketsAud setFeedback(String feedback) {
        this.feedback = feedback;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TicketsAud other = (TicketsAud) obj;
        if (audId == null) {
            if (other.audId != null)
                return false;
        }
        else if (!audId.equals(other.audId))
            return false;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (rideRequestId == null) {
            if (other.rideRequestId != null)
                return false;
        }
        else if (!rideRequestId.equals(other.rideRequestId))
            return false;
        if (rideId == null) {
            if (other.rideId != null)
                return false;
        }
        else if (!rideId.equals(other.rideId))
            return false;
        if (riderId == null) {
            if (other.riderId != null)
                return false;
        }
        else if (!riderId.equals(other.riderId))
            return false;
        if (ticketType == null) {
            if (other.ticketType != null)
                return false;
        }
        else if (!ticketType.equals(other.ticketType))
            return false;
        if (ticketStage == null) {
            if (other.ticketStage != null)
                return false;
        }
        else if (!ticketStage.equals(other.ticketStage))
            return false;
        if (incidentId == null) {
            if (other.incidentId != null)
                return false;
        }
        else if (!incidentId.equals(other.incidentId))
            return false;
        if (ticketHistoryDetails == null) {
            if (other.ticketHistoryDetails != null)
                return false;
        }
        else if (!ticketHistoryDetails.equals(other.ticketHistoryDetails))
            return false;
        if (closedTimestamp == null) {
            if (other.closedTimestamp != null)
                return false;
        }
        else if (!closedTimestamp.equals(other.closedTimestamp))
            return false;
        if (closureRemark == null) {
            if (other.closureRemark != null)
                return false;
        }
        else if (!closureRemark.equals(other.closureRemark))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (lastUpdatedTimestamp == null) {
            if (other.lastUpdatedTimestamp != null)
                return false;
        }
        else if (!lastUpdatedTimestamp.equals(other.lastUpdatedTimestamp))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!createdBy.equals(other.createdBy))
            return false;
        if (lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (feedback == null) {
            if (other.feedback != null)
                return false;
        }
        else if (!feedback.equals(other.feedback))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.audId == null) ? 0 : this.audId.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.rideRequestId == null) ? 0 : this.rideRequestId.hashCode());
        result = prime * result + ((this.rideId == null) ? 0 : this.rideId.hashCode());
        result = prime * result + ((this.riderId == null) ? 0 : this.riderId.hashCode());
        result = prime * result + ((this.ticketType == null) ? 0 : this.ticketType.hashCode());
        result = prime * result + ((this.ticketStage == null) ? 0 : this.ticketStage.hashCode());
        result = prime * result + ((this.incidentId == null) ? 0 : this.incidentId.hashCode());
        result = prime * result + ((this.ticketHistoryDetails == null) ? 0 : this.ticketHistoryDetails.hashCode());
        result = prime * result + ((this.closedTimestamp == null) ? 0 : this.closedTimestamp.hashCode());
        result = prime * result + ((this.closureRemark == null) ? 0 : this.closureRemark.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.lastUpdatedTimestamp == null) ? 0 : this.lastUpdatedTimestamp.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.feedback == null) ? 0 : this.feedback.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TicketsAud (");

        sb.append(audId);
        sb.append(", ").append(id);
        sb.append(", ").append(rideRequestId);
        sb.append(", ").append(rideId);
        sb.append(", ").append(riderId);
        sb.append(", ").append(ticketType);
        sb.append(", ").append(ticketStage);
        sb.append(", ").append(incidentId);
        sb.append(", ").append(ticketHistoryDetails);
        sb.append(", ").append(closedTimestamp);
        sb.append(", ").append(closureRemark);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(lastUpdatedTimestamp);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(feedback);

        sb.append(")");
        return sb.toString();
    }
}
