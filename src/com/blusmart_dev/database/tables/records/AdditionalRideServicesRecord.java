/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.AdditionalRideServices;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdditionalRideServicesRecord extends UpdatableRecordImpl<AdditionalRideServicesRecord> implements Record11<UInteger, UInteger, String, BigDecimal, UInteger, Long, Byte, Long, Long, UInteger, UInteger> {

    private static final long serialVersionUID = 1550996493;

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.id</code>.
     */
    public AdditionalRideServicesRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.ride_request_id</code>.
     */
    public AdditionalRideServicesRecord setRideRequestId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.ride_request_id</code>.
     */
    public UInteger getRideRequestId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.service_type</code>.
     */
    public AdditionalRideServicesRecord setServiceType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.service_type</code>.
     */
    public String getServiceType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.total_amount</code>.
     */
    public AdditionalRideServicesRecord setTotalAmount(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.total_amount</code>.
     */
    public BigDecimal getTotalAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.quantity</code>.
     */
    public AdditionalRideServicesRecord setQuantity(UInteger value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.quantity</code>.
     */
    public UInteger getQuantity() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.expiry_timestamp</code>.
     */
    public AdditionalRideServicesRecord setExpiryTimestamp(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.expiry_timestamp</code>.
     */
    public Long getExpiryTimestamp() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.is_active</code>.
     */
    public AdditionalRideServicesRecord setIsActive(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.created_timestamp</code>.
     */
    public AdditionalRideServicesRecord setCreatedTimestamp(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.last_updated_timestamp</code>.
     */
    public AdditionalRideServicesRecord setLastUpdatedTimestamp(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.created_by</code>.
     */
    public AdditionalRideServicesRecord setCreatedBy(UInteger value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.additional_ride_services.last_updated_by</code>.
     */
    public AdditionalRideServicesRecord setLastUpdatedBy(UInteger value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.additional_ride_services.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, UInteger, String, BigDecimal, UInteger, Long, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<UInteger, UInteger, String, BigDecimal, UInteger, Long, Byte, Long, Long, UInteger, UInteger> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.RIDE_REQUEST_ID;
    }

    @Override
    public Field<String> field3() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.SERVICE_TYPE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.TOTAL_AMOUNT;
    }

    @Override
    public Field<UInteger> field5() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.QUANTITY;
    }

    @Override
    public Field<Long> field6() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.EXPIRY_TIMESTAMP;
    }

    @Override
    public Field<Byte> field7() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.IS_ACTIVE;
    }

    @Override
    public Field<Long> field8() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field9() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field10() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.CREATED_BY;
    }

    @Override
    public Field<UInteger> field11() {
        return AdditionalRideServices.ADDITIONAL_RIDE_SERVICES.LAST_UPDATED_BY;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getRideRequestId();
    }

    @Override
    public String component3() {
        return getServiceType();
    }

    @Override
    public BigDecimal component4() {
        return getTotalAmount();
    }

    @Override
    public UInteger component5() {
        return getQuantity();
    }

    @Override
    public Long component6() {
        return getExpiryTimestamp();
    }

    @Override
    public Byte component7() {
        return getIsActive();
    }

    @Override
    public Long component8() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component9() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component10() {
        return getCreatedBy();
    }

    @Override
    public UInteger component11() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getRideRequestId();
    }

    @Override
    public String value3() {
        return getServiceType();
    }

    @Override
    public BigDecimal value4() {
        return getTotalAmount();
    }

    @Override
    public UInteger value5() {
        return getQuantity();
    }

    @Override
    public Long value6() {
        return getExpiryTimestamp();
    }

    @Override
    public Byte value7() {
        return getIsActive();
    }

    @Override
    public Long value8() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value9() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value10() {
        return getCreatedBy();
    }

    @Override
    public UInteger value11() {
        return getLastUpdatedBy();
    }

    @Override
    public AdditionalRideServicesRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value2(UInteger value) {
        setRideRequestId(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value3(String value) {
        setServiceType(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value4(BigDecimal value) {
        setTotalAmount(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value5(UInteger value) {
        setQuantity(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value6(Long value) {
        setExpiryTimestamp(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value7(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value8(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value9(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value10(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord value11(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public AdditionalRideServicesRecord values(UInteger value1, UInteger value2, String value3, BigDecimal value4, UInteger value5, Long value6, Byte value7, Long value8, Long value9, UInteger value10, UInteger value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdditionalRideServicesRecord
     */
    public AdditionalRideServicesRecord() {
        super(AdditionalRideServices.ADDITIONAL_RIDE_SERVICES);
    }

    /**
     * Create a detached, initialised AdditionalRideServicesRecord
     */
    public AdditionalRideServicesRecord(UInteger id, UInteger rideRequestId, String serviceType, BigDecimal totalAmount, UInteger quantity, Long expiryTimestamp, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy) {
        super(AdditionalRideServices.ADDITIONAL_RIDE_SERVICES);

        set(0, id);
        set(1, rideRequestId);
        set(2, serviceType);
        set(3, totalAmount);
        set(4, quantity);
        set(5, expiryTimestamp);
        set(6, isActive);
        set(7, createdTimestamp);
        set(8, lastUpdatedTimestamp);
        set(9, createdBy);
        set(10, lastUpdatedBy);
    }
}
