/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.BusinessAccountUserRiderMap;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessAccountUserRiderMapRecord extends UpdatableRecordImpl<BusinessAccountUserRiderMapRecord> implements Record13<UInteger, String, UInteger, UInteger, Long, String, Byte, Long, Long, UInteger, UInteger, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 2107505825;

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.id</code>.
     */
    public BusinessAccountUserRiderMapRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.business_account_id</code>.
     */
    public BusinessAccountUserRiderMapRecord setBusinessAccountId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.business_account_id</code>.
     */
    public String getBusinessAccountId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.user_id</code>.
     */
    public BusinessAccountUserRiderMapRecord setUserId(UInteger value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.user_id</code>.
     */
    public UInteger getUserId() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.rider_id</code>.
     */
    public BusinessAccountUserRiderMapRecord setRiderId(UInteger value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.rider_id</code>.
     */
    public UInteger getRiderId() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.expiration_timestamp</code>.
     */
    public BusinessAccountUserRiderMapRecord setExpirationTimestamp(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.expiration_timestamp</code>.
     */
    public Long getExpirationTimestamp() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.note</code>.
     */
    public BusinessAccountUserRiderMapRecord setNote(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.note</code>.
     */
    public String getNote() {
        return (String) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.is_active</code>.
     */
    public BusinessAccountUserRiderMapRecord setIsActive(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.created_timestamp</code>.
     */
    public BusinessAccountUserRiderMapRecord setCreatedTimestamp(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.last_updated_timestamp</code>.
     */
    public BusinessAccountUserRiderMapRecord setLastUpdatedTimestamp(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.created_by</code>.
     */
    public BusinessAccountUserRiderMapRecord setCreatedBy(UInteger value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.last_updated_by</code>.
     */
    public BusinessAccountUserRiderMapRecord setLastUpdatedBy(UInteger value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.monthly_spending_limit</code>.
     */
    public BusinessAccountUserRiderMapRecord setMonthlySpendingLimit(BigDecimal value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.monthly_spending_limit</code>.
     */
    public BigDecimal getMonthlySpendingLimit() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.business_account_user_rider_map.available_spending_limit</code>.
     */
    public BusinessAccountUserRiderMapRecord setAvailableSpendingLimit(BigDecimal value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.business_account_user_rider_map.available_spending_limit</code>.
     */
    public BigDecimal getAvailableSpendingLimit() {
        return (BigDecimal) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, String, UInteger, UInteger, Long, String, Byte, Long, Long, UInteger, UInteger, BigDecimal, BigDecimal> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UInteger, String, UInteger, UInteger, Long, String, Byte, Long, Long, UInteger, UInteger, BigDecimal, BigDecimal> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.ID;
    }

    @Override
    public Field<String> field2() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.BUSINESS_ACCOUNT_ID;
    }

    @Override
    public Field<UInteger> field3() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.USER_ID;
    }

    @Override
    public Field<UInteger> field4() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.RIDER_ID;
    }

    @Override
    public Field<Long> field5() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.EXPIRATION_TIMESTAMP;
    }

    @Override
    public Field<String> field6() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.NOTE;
    }

    @Override
    public Field<Byte> field7() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.IS_ACTIVE;
    }

    @Override
    public Field<Long> field8() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field9() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field10() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.CREATED_BY;
    }

    @Override
    public Field<UInteger> field11() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.LAST_UPDATED_BY;
    }

    @Override
    public Field<BigDecimal> field12() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.MONTHLY_SPENDING_LIMIT;
    }

    @Override
    public Field<BigDecimal> field13() {
        return BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP.AVAILABLE_SPENDING_LIMIT;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getBusinessAccountId();
    }

    @Override
    public UInteger component3() {
        return getUserId();
    }

    @Override
    public UInteger component4() {
        return getRiderId();
    }

    @Override
    public Long component5() {
        return getExpirationTimestamp();
    }

    @Override
    public String component6() {
        return getNote();
    }

    @Override
    public Byte component7() {
        return getIsActive();
    }

    @Override
    public Long component8() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component9() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component10() {
        return getCreatedBy();
    }

    @Override
    public UInteger component11() {
        return getLastUpdatedBy();
    }

    @Override
    public BigDecimal component12() {
        return getMonthlySpendingLimit();
    }

    @Override
    public BigDecimal component13() {
        return getAvailableSpendingLimit();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getBusinessAccountId();
    }

    @Override
    public UInteger value3() {
        return getUserId();
    }

    @Override
    public UInteger value4() {
        return getRiderId();
    }

    @Override
    public Long value5() {
        return getExpirationTimestamp();
    }

    @Override
    public String value6() {
        return getNote();
    }

    @Override
    public Byte value7() {
        return getIsActive();
    }

    @Override
    public Long value8() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value9() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value10() {
        return getCreatedBy();
    }

    @Override
    public UInteger value11() {
        return getLastUpdatedBy();
    }

    @Override
    public BigDecimal value12() {
        return getMonthlySpendingLimit();
    }

    @Override
    public BigDecimal value13() {
        return getAvailableSpendingLimit();
    }

    @Override
    public BusinessAccountUserRiderMapRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value2(String value) {
        setBusinessAccountId(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value3(UInteger value) {
        setUserId(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value4(UInteger value) {
        setRiderId(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value5(Long value) {
        setExpirationTimestamp(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value6(String value) {
        setNote(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value7(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value8(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value9(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value10(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value11(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value12(BigDecimal value) {
        setMonthlySpendingLimit(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord value13(BigDecimal value) {
        setAvailableSpendingLimit(value);
        return this;
    }

    @Override
    public BusinessAccountUserRiderMapRecord values(UInteger value1, String value2, UInteger value3, UInteger value4, Long value5, String value6, Byte value7, Long value8, Long value9, UInteger value10, UInteger value11, BigDecimal value12, BigDecimal value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BusinessAccountUserRiderMapRecord
     */
    public BusinessAccountUserRiderMapRecord() {
        super(BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP);
    }

    /**
     * Create a detached, initialised BusinessAccountUserRiderMapRecord
     */
    public BusinessAccountUserRiderMapRecord(UInteger id, String businessAccountId, UInteger userId, UInteger riderId, Long expirationTimestamp, String note, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy, BigDecimal monthlySpendingLimit, BigDecimal availableSpendingLimit) {
        super(BusinessAccountUserRiderMap.BUSINESS_ACCOUNT_USER_RIDER_MAP);

        set(0, id);
        set(1, businessAccountId);
        set(2, userId);
        set(3, riderId);
        set(4, expirationTimestamp);
        set(5, note);
        set(6, isActive);
        set(7, createdTimestamp);
        set(8, lastUpdatedTimestamp);
        set(9, createdBy);
        set(10, lastUpdatedBy);
        set(11, monthlySpendingLimit);
        set(12, availableSpendingLimit);
    }
}
