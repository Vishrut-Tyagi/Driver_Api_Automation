/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.DriverCheckInCheckOutAudit;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverCheckInCheckOutAuditRecord extends UpdatableRecordImpl<DriverCheckInCheckOutAuditRecord> implements Record13<Integer, Integer, Integer, Integer, Byte, Long, Long, Byte, String, Long, Long, Integer, Integer> {

    private static final long serialVersionUID = -1192615497;

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.duty_id</code>.
     */
    public DriverCheckInCheckOutAuditRecord setDutyId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.duty_id</code>.
     */
    public Integer getDutyId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.punch_id</code>.
     */
    public DriverCheckInCheckOutAuditRecord setPunchId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.punch_id</code>.
     */
    public Integer getPunchId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkin_hub</code>.
     */
    public DriverCheckInCheckOutAuditRecord setCheckinHub(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkin_hub</code>.
     */
    public Integer getCheckinHub() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkout_hub</code>.
     */
    public DriverCheckInCheckOutAuditRecord setCheckoutHub(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkout_hub</code>.
     */
    public Integer getCheckoutHub() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.is_active</code>.
     */
    public DriverCheckInCheckOutAuditRecord setIsActive(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkin_timestamp</code>.
     */
    public DriverCheckInCheckOutAuditRecord setCheckinTimestamp(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkin_timestamp</code>.
     */
    public Long getCheckinTimestamp() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkout_timestamp</code>.
     */
    public DriverCheckInCheckOutAuditRecord setCheckoutTimestamp(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.checkout_timestamp</code>.
     */
    public Long getCheckoutTimestamp() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.forced_checkout</code>.
     */
    public DriverCheckInCheckOutAuditRecord setForcedCheckout(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.forced_checkout</code>.
     */
    public Byte getForcedCheckout() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.remarks</code>.
     */
    public DriverCheckInCheckOutAuditRecord setRemarks(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.remarks</code>.
     */
    public String getRemarks() {
        return (String) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.created_at</code>.
     */
    public DriverCheckInCheckOutAuditRecord setCreatedAt(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.updated_at</code>.
     */
    public DriverCheckInCheckOutAuditRecord setUpdatedAt(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.created_by</code>.
     */
    public DriverCheckInCheckOutAuditRecord setCreatedBy(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.created_by</code>.
     */
    public Integer getCreatedBy() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_check_in_check_out_audit.updated_by</code>.
     */
    public DriverCheckInCheckOutAuditRecord setUpdatedBy(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_check_in_check_out_audit.updated_by</code>.
     */
    public Integer getUpdatedBy() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, Integer, Integer, Byte, Long, Long, Byte, String, Long, Long, Integer, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, Integer, Integer, Integer, Byte, Long, Long, Byte, String, Long, Long, Integer, Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.DUTY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.PUNCH_ID;
    }

    @Override
    public Field<Integer> field3() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.CHECKIN_HUB;
    }

    @Override
    public Field<Integer> field4() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.CHECKOUT_HUB;
    }

    @Override
    public Field<Byte> field5() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.IS_ACTIVE;
    }

    @Override
    public Field<Long> field6() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.CHECKIN_TIMESTAMP;
    }

    @Override
    public Field<Long> field7() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.CHECKOUT_TIMESTAMP;
    }

    @Override
    public Field<Byte> field8() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.FORCED_CHECKOUT;
    }

    @Override
    public Field<String> field9() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.REMARKS;
    }

    @Override
    public Field<Long> field10() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.CREATED_AT;
    }

    @Override
    public Field<Long> field11() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.UPDATED_AT;
    }

    @Override
    public Field<Integer> field12() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.CREATED_BY;
    }

    @Override
    public Field<Integer> field13() {
        return DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT.UPDATED_BY;
    }

    @Override
    public Integer component1() {
        return getDutyId();
    }

    @Override
    public Integer component2() {
        return getPunchId();
    }

    @Override
    public Integer component3() {
        return getCheckinHub();
    }

    @Override
    public Integer component4() {
        return getCheckoutHub();
    }

    @Override
    public Byte component5() {
        return getIsActive();
    }

    @Override
    public Long component6() {
        return getCheckinTimestamp();
    }

    @Override
    public Long component7() {
        return getCheckoutTimestamp();
    }

    @Override
    public Byte component8() {
        return getForcedCheckout();
    }

    @Override
    public String component9() {
        return getRemarks();
    }

    @Override
    public Long component10() {
        return getCreatedAt();
    }

    @Override
    public Long component11() {
        return getUpdatedAt();
    }

    @Override
    public Integer component12() {
        return getCreatedBy();
    }

    @Override
    public Integer component13() {
        return getUpdatedBy();
    }

    @Override
    public Integer value1() {
        return getDutyId();
    }

    @Override
    public Integer value2() {
        return getPunchId();
    }

    @Override
    public Integer value3() {
        return getCheckinHub();
    }

    @Override
    public Integer value4() {
        return getCheckoutHub();
    }

    @Override
    public Byte value5() {
        return getIsActive();
    }

    @Override
    public Long value6() {
        return getCheckinTimestamp();
    }

    @Override
    public Long value7() {
        return getCheckoutTimestamp();
    }

    @Override
    public Byte value8() {
        return getForcedCheckout();
    }

    @Override
    public String value9() {
        return getRemarks();
    }

    @Override
    public Long value10() {
        return getCreatedAt();
    }

    @Override
    public Long value11() {
        return getUpdatedAt();
    }

    @Override
    public Integer value12() {
        return getCreatedBy();
    }

    @Override
    public Integer value13() {
        return getUpdatedBy();
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value1(Integer value) {
        setDutyId(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value2(Integer value) {
        setPunchId(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value3(Integer value) {
        setCheckinHub(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value4(Integer value) {
        setCheckoutHub(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value5(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value6(Long value) {
        setCheckinTimestamp(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value7(Long value) {
        setCheckoutTimestamp(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value8(Byte value) {
        setForcedCheckout(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value9(String value) {
        setRemarks(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value10(Long value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value11(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value12(Integer value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord value13(Integer value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public DriverCheckInCheckOutAuditRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Byte value5, Long value6, Long value7, Byte value8, String value9, Long value10, Long value11, Integer value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DriverCheckInCheckOutAuditRecord
     */
    public DriverCheckInCheckOutAuditRecord() {
        super(DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT);
    }

    /**
     * Create a detached, initialised DriverCheckInCheckOutAuditRecord
     */
    public DriverCheckInCheckOutAuditRecord(Integer dutyId, Integer punchId, Integer checkinHub, Integer checkoutHub, Byte isActive, Long checkinTimestamp, Long checkoutTimestamp, Byte forcedCheckout, String remarks, Long createdAt, Long updatedAt, Integer createdBy, Integer updatedBy) {
        super(DriverCheckInCheckOutAudit.DRIVER_CHECK_IN_CHECK_OUT_AUDIT);

        set(0, dutyId);
        set(1, punchId);
        set(2, checkinHub);
        set(3, checkoutHub);
        set(4, isActive);
        set(5, checkinTimestamp);
        set(6, checkoutTimestamp);
        set(7, forcedCheckout);
        set(8, remarks);
        set(9, createdAt);
        set(10, updatedAt);
        set(11, createdBy);
        set(12, updatedBy);
    }
}
