/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.DriverStates;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverStatesRecord extends UpdatableRecordImpl<DriverStatesRecord> implements Record22<UInteger, UInteger, String, String, Byte, Long, Long, UInteger, UInteger, UInteger, BigDecimal, BigDecimal, Byte, Long, String, String, Byte, Integer, String, Long, Long, String> {

    private static final long serialVersionUID = 174434562;

    /**
     * Setter for <code>blusmartDevDb.driver_states.id</code>.
     */
    public DriverStatesRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.driver_id</code>.
     */
    public DriverStatesRecord setDriverId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.driver_id</code>.
     */
    public UInteger getDriverId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.driver_state</code>.
     */
    public DriverStatesRecord setDriverState(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.driver_state</code>.
     */
    public String getDriverState() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.vehicle_number</code>.
     */
    public DriverStatesRecord setVehicleNumber(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.vehicle_number</code>.
     */
    public String getVehicleNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.is_active</code>.
     */
    public DriverStatesRecord setIsActive(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.created_timestamp</code>.
     */
    public DriverStatesRecord setCreatedTimestamp(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.last_updated_timestamp</code>.
     */
    public DriverStatesRecord setLastUpdatedTimestamp(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.created_by</code>.
     */
    public DriverStatesRecord setCreatedBy(UInteger value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.last_updated_by</code>.
     */
    public DriverStatesRecord setLastUpdatedBy(UInteger value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.ride_id</code>.
     */
    public DriverStatesRecord setRideId(UInteger value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.ride_id</code>.
     */
    public UInteger getRideId() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.latitude</code>.
     */
    public DriverStatesRecord setLatitude(BigDecimal value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.latitude</code>.
     */
    public BigDecimal getLatitude() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.longitude</code>.
     */
    public DriverStatesRecord setLongitude(BigDecimal value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.longitude</code>.
     */
    public BigDecimal getLongitude() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.is_paused</code>.
     */
    public DriverStatesRecord setIsPaused(Byte value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.is_paused</code>.
     */
    public Byte getIsPaused() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.next_eligible_timestamp</code>.
     */
    public DriverStatesRecord setNextEligibleTimestamp(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.next_eligible_timestamp</code>.
     */
    public Long getNextEligibleTimestamp() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.current_destination</code>.
     */
    public DriverStatesRecord setCurrentDestination(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.current_destination</code>.
     */
    public String getCurrentDestination() {
        return (String) get(14);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.destination_status</code>.
     */
    public DriverStatesRecord setDestinationStatus(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.destination_status</code>.
     */
    public String getDestinationStatus() {
        return (String) get(15);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.is_soc_required</code>.
     */
    public DriverStatesRecord setIsSocRequired(Byte value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.is_soc_required</code>.
     */
    public Byte getIsSocRequired() {
        return (Byte) get(16);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.paused_by</code>.
     */
    public DriverStatesRecord setPausedBy(Integer value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.paused_by</code>.
     */
    public Integer getPausedBy() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.pause_reason</code>.
     */
    public DriverStatesRecord setPauseReason(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.pause_reason</code>.
     */
    public String getPauseReason() {
        return (String) get(18);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.shift_start_timestamp</code>.
     */
    public DriverStatesRecord setShiftStartTimestamp(Long value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.shift_start_timestamp</code>.
     */
    public Long getShiftStartTimestamp() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.shift_end_timestamp</code>.
     */
    public DriverStatesRecord setShiftEndTimestamp(Long value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.shift_end_timestamp</code>.
     */
    public Long getShiftEndTimestamp() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>blusmartDevDb.driver_states.other_flags</code>.
     */
    public DriverStatesRecord setOtherFlags(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.driver_states.other_flags</code>.
     */
    public String getOtherFlags() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row22<UInteger, UInteger, String, String, Byte, Long, Long, UInteger, UInteger, UInteger, BigDecimal, BigDecimal, Byte, Long, String, String, Byte, Integer, String, Long, Long, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    @Override
    public Row22<UInteger, UInteger, String, String, Byte, Long, Long, UInteger, UInteger, UInteger, BigDecimal, BigDecimal, Byte, Long, String, String, Byte, Integer, String, Long, Long, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return DriverStates.DRIVER_STATES.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return DriverStates.DRIVER_STATES.DRIVER_ID;
    }

    @Override
    public Field<String> field3() {
        return DriverStates.DRIVER_STATES.DRIVER_STATE;
    }

    @Override
    public Field<String> field4() {
        return DriverStates.DRIVER_STATES.VEHICLE_NUMBER;
    }

    @Override
    public Field<Byte> field5() {
        return DriverStates.DRIVER_STATES.IS_ACTIVE;
    }

    @Override
    public Field<Long> field6() {
        return DriverStates.DRIVER_STATES.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field7() {
        return DriverStates.DRIVER_STATES.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field8() {
        return DriverStates.DRIVER_STATES.CREATED_BY;
    }

    @Override
    public Field<UInteger> field9() {
        return DriverStates.DRIVER_STATES.LAST_UPDATED_BY;
    }

    @Override
    public Field<UInteger> field10() {
        return DriverStates.DRIVER_STATES.RIDE_ID;
    }

    @Override
    public Field<BigDecimal> field11() {
        return DriverStates.DRIVER_STATES.LATITUDE;
    }

    @Override
    public Field<BigDecimal> field12() {
        return DriverStates.DRIVER_STATES.LONGITUDE;
    }

    @Override
    public Field<Byte> field13() {
        return DriverStates.DRIVER_STATES.IS_PAUSED;
    }

    @Override
    public Field<Long> field14() {
        return DriverStates.DRIVER_STATES.NEXT_ELIGIBLE_TIMESTAMP;
    }

    @Override
    public Field<String> field15() {
        return DriverStates.DRIVER_STATES.CURRENT_DESTINATION;
    }

    @Override
    public Field<String> field16() {
        return DriverStates.DRIVER_STATES.DESTINATION_STATUS;
    }

    @Override
    public Field<Byte> field17() {
        return DriverStates.DRIVER_STATES.IS_SOC_REQUIRED;
    }

    @Override
    public Field<Integer> field18() {
        return DriverStates.DRIVER_STATES.PAUSED_BY;
    }

    @Override
    public Field<String> field19() {
        return DriverStates.DRIVER_STATES.PAUSE_REASON;
    }

    @Override
    public Field<Long> field20() {
        return DriverStates.DRIVER_STATES.SHIFT_START_TIMESTAMP;
    }

    @Override
    public Field<Long> field21() {
        return DriverStates.DRIVER_STATES.SHIFT_END_TIMESTAMP;
    }

    @Override
    public Field<String> field22() {
        return DriverStates.DRIVER_STATES.OTHER_FLAGS;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getDriverId();
    }

    @Override
    public String component3() {
        return getDriverState();
    }

    @Override
    public String component4() {
        return getVehicleNumber();
    }

    @Override
    public Byte component5() {
        return getIsActive();
    }

    @Override
    public Long component6() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component7() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component8() {
        return getCreatedBy();
    }

    @Override
    public UInteger component9() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger component10() {
        return getRideId();
    }

    @Override
    public BigDecimal component11() {
        return getLatitude();
    }

    @Override
    public BigDecimal component12() {
        return getLongitude();
    }

    @Override
    public Byte component13() {
        return getIsPaused();
    }

    @Override
    public Long component14() {
        return getNextEligibleTimestamp();
    }

    @Override
    public String component15() {
        return getCurrentDestination();
    }

    @Override
    public String component16() {
        return getDestinationStatus();
    }

    @Override
    public Byte component17() {
        return getIsSocRequired();
    }

    @Override
    public Integer component18() {
        return getPausedBy();
    }

    @Override
    public String component19() {
        return getPauseReason();
    }

    @Override
    public Long component20() {
        return getShiftStartTimestamp();
    }

    @Override
    public Long component21() {
        return getShiftEndTimestamp();
    }

    @Override
    public String component22() {
        return getOtherFlags();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getDriverId();
    }

    @Override
    public String value3() {
        return getDriverState();
    }

    @Override
    public String value4() {
        return getVehicleNumber();
    }

    @Override
    public Byte value5() {
        return getIsActive();
    }

    @Override
    public Long value6() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value7() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value8() {
        return getCreatedBy();
    }

    @Override
    public UInteger value9() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger value10() {
        return getRideId();
    }

    @Override
    public BigDecimal value11() {
        return getLatitude();
    }

    @Override
    public BigDecimal value12() {
        return getLongitude();
    }

    @Override
    public Byte value13() {
        return getIsPaused();
    }

    @Override
    public Long value14() {
        return getNextEligibleTimestamp();
    }

    @Override
    public String value15() {
        return getCurrentDestination();
    }

    @Override
    public String value16() {
        return getDestinationStatus();
    }

    @Override
    public Byte value17() {
        return getIsSocRequired();
    }

    @Override
    public Integer value18() {
        return getPausedBy();
    }

    @Override
    public String value19() {
        return getPauseReason();
    }

    @Override
    public Long value20() {
        return getShiftStartTimestamp();
    }

    @Override
    public Long value21() {
        return getShiftEndTimestamp();
    }

    @Override
    public String value22() {
        return getOtherFlags();
    }

    @Override
    public DriverStatesRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public DriverStatesRecord value2(UInteger value) {
        setDriverId(value);
        return this;
    }

    @Override
    public DriverStatesRecord value3(String value) {
        setDriverState(value);
        return this;
    }

    @Override
    public DriverStatesRecord value4(String value) {
        setVehicleNumber(value);
        return this;
    }

    @Override
    public DriverStatesRecord value5(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public DriverStatesRecord value6(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public DriverStatesRecord value7(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public DriverStatesRecord value8(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public DriverStatesRecord value9(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public DriverStatesRecord value10(UInteger value) {
        setRideId(value);
        return this;
    }

    @Override
    public DriverStatesRecord value11(BigDecimal value) {
        setLatitude(value);
        return this;
    }

    @Override
    public DriverStatesRecord value12(BigDecimal value) {
        setLongitude(value);
        return this;
    }

    @Override
    public DriverStatesRecord value13(Byte value) {
        setIsPaused(value);
        return this;
    }

    @Override
    public DriverStatesRecord value14(Long value) {
        setNextEligibleTimestamp(value);
        return this;
    }

    @Override
    public DriverStatesRecord value15(String value) {
        setCurrentDestination(value);
        return this;
    }

    @Override
    public DriverStatesRecord value16(String value) {
        setDestinationStatus(value);
        return this;
    }

    @Override
    public DriverStatesRecord value17(Byte value) {
        setIsSocRequired(value);
        return this;
    }

    @Override
    public DriverStatesRecord value18(Integer value) {
        setPausedBy(value);
        return this;
    }

    @Override
    public DriverStatesRecord value19(String value) {
        setPauseReason(value);
        return this;
    }

    @Override
    public DriverStatesRecord value20(Long value) {
        setShiftStartTimestamp(value);
        return this;
    }

    @Override
    public DriverStatesRecord value21(Long value) {
        setShiftEndTimestamp(value);
        return this;
    }

    @Override
    public DriverStatesRecord value22(String value) {
        setOtherFlags(value);
        return this;
    }

    @Override
    public DriverStatesRecord values(UInteger value1, UInteger value2, String value3, String value4, Byte value5, Long value6, Long value7, UInteger value8, UInteger value9, UInteger value10, BigDecimal value11, BigDecimal value12, Byte value13, Long value14, String value15, String value16, Byte value17, Integer value18, String value19, Long value20, Long value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DriverStatesRecord
     */
    public DriverStatesRecord() {
        super(DriverStates.DRIVER_STATES);
    }

    /**
     * Create a detached, initialised DriverStatesRecord
     */
    public DriverStatesRecord(UInteger id, UInteger driverId, String driverState, String vehicleNumber, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy, UInteger rideId, BigDecimal latitude, BigDecimal longitude, Byte isPaused, Long nextEligibleTimestamp, String currentDestination, String destinationStatus, Byte isSocRequired, Integer pausedBy, String pauseReason, Long shiftStartTimestamp, Long shiftEndTimestamp, String otherFlags) {
        super(DriverStates.DRIVER_STATES);

        set(0, id);
        set(1, driverId);
        set(2, driverState);
        set(3, vehicleNumber);
        set(4, isActive);
        set(5, createdTimestamp);
        set(6, lastUpdatedTimestamp);
        set(7, createdBy);
        set(8, lastUpdatedBy);
        set(9, rideId);
        set(10, latitude);
        set(11, longitude);
        set(12, isPaused);
        set(13, nextEligibleTimestamp);
        set(14, currentDestination);
        set(15, destinationStatus);
        set(16, isSocRequired);
        set(17, pausedBy);
        set(18, pauseReason);
        set(19, shiftStartTimestamp);
        set(20, shiftEndTimestamp);
        set(21, otherFlags);
    }
}
