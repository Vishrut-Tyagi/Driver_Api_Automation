/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.OverwritingFarePrice;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OverwritingFarePriceRecord extends UpdatableRecordImpl<OverwritingFarePriceRecord> implements Record17<UInteger, String, BigDecimal, BigDecimal, Integer, String, BigDecimal, BigDecimal, Integer, UInteger, UInteger, Byte, Byte, Long, Long, UInteger, UInteger> {

    private static final long serialVersionUID = -1857824272;

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.id</code>.
     */
    public OverwritingFarePriceRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.from_address</code>.
     */
    public OverwritingFarePriceRecord setFromAddress(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.from_address</code>.
     */
    public String getFromAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.from_lat</code>.
     */
    public OverwritingFarePriceRecord setFromLat(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.from_lat</code>.
     */
    public BigDecimal getFromLat() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.from_long</code>.
     */
    public OverwritingFarePriceRecord setFromLong(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.from_long</code>.
     */
    public BigDecimal getFromLong() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.from_radius</code>.
     */
    public OverwritingFarePriceRecord setFromRadius(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.from_radius</code>.
     */
    public Integer getFromRadius() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.to_address</code>.
     */
    public OverwritingFarePriceRecord setToAddress(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.to_address</code>.
     */
    public String getToAddress() {
        return (String) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.to_lat</code>.
     */
    public OverwritingFarePriceRecord setToLat(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.to_lat</code>.
     */
    public BigDecimal getToLat() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.to_long</code>.
     */
    public OverwritingFarePriceRecord setToLong(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.to_long</code>.
     */
    public BigDecimal getToLong() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.to_radius</code>.
     */
    public OverwritingFarePriceRecord setToRadius(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.to_radius</code>.
     */
    public Integer getToRadius() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.system_fare</code>.
     */
    public OverwritingFarePriceRecord setSystemFare(UInteger value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.system_fare</code>.
     */
    public UInteger getSystemFare() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.actual_fare</code>.
     */
    public OverwritingFarePriceRecord setActualFare(UInteger value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.actual_fare</code>.
     */
    public UInteger getActualFare() {
        return (UInteger) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.status</code>.
     */
    public OverwritingFarePriceRecord setStatus(Byte value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.is_active</code>.
     */
    public OverwritingFarePriceRecord setIsActive(Byte value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.created_timestamp</code>.
     */
    public OverwritingFarePriceRecord setCreatedTimestamp(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.last_updated_timestamp</code>.
     */
    public OverwritingFarePriceRecord setLastUpdatedTimestamp(Long value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.created_by</code>.
     */
    public OverwritingFarePriceRecord setCreatedBy(UInteger value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(15);
    }

    /**
     * Setter for <code>blusmartDevDb.overwriting_fare_price.last_updated_by</code>.
     */
    public OverwritingFarePriceRecord setLastUpdatedBy(UInteger value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.overwriting_fare_price.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<UInteger, String, BigDecimal, BigDecimal, Integer, String, BigDecimal, BigDecimal, Integer, UInteger, UInteger, Byte, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<UInteger, String, BigDecimal, BigDecimal, Integer, String, BigDecimal, BigDecimal, Integer, UInteger, UInteger, Byte, Byte, Long, Long, UInteger, UInteger> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.ID;
    }

    @Override
    public Field<String> field2() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.FROM_ADDRESS;
    }

    @Override
    public Field<BigDecimal> field3() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.FROM_LAT;
    }

    @Override
    public Field<BigDecimal> field4() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.FROM_LONG;
    }

    @Override
    public Field<Integer> field5() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.FROM_RADIUS;
    }

    @Override
    public Field<String> field6() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.TO_ADDRESS;
    }

    @Override
    public Field<BigDecimal> field7() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.TO_LAT;
    }

    @Override
    public Field<BigDecimal> field8() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.TO_LONG;
    }

    @Override
    public Field<Integer> field9() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.TO_RADIUS;
    }

    @Override
    public Field<UInteger> field10() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.SYSTEM_FARE;
    }

    @Override
    public Field<UInteger> field11() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.ACTUAL_FARE;
    }

    @Override
    public Field<Byte> field12() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.STATUS;
    }

    @Override
    public Field<Byte> field13() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.IS_ACTIVE;
    }

    @Override
    public Field<Long> field14() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field15() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field16() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.CREATED_BY;
    }

    @Override
    public Field<UInteger> field17() {
        return OverwritingFarePrice.OVERWRITING_FARE_PRICE.LAST_UPDATED_BY;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFromAddress();
    }

    @Override
    public BigDecimal component3() {
        return getFromLat();
    }

    @Override
    public BigDecimal component4() {
        return getFromLong();
    }

    @Override
    public Integer component5() {
        return getFromRadius();
    }

    @Override
    public String component6() {
        return getToAddress();
    }

    @Override
    public BigDecimal component7() {
        return getToLat();
    }

    @Override
    public BigDecimal component8() {
        return getToLong();
    }

    @Override
    public Integer component9() {
        return getToRadius();
    }

    @Override
    public UInteger component10() {
        return getSystemFare();
    }

    @Override
    public UInteger component11() {
        return getActualFare();
    }

    @Override
    public Byte component12() {
        return getStatus();
    }

    @Override
    public Byte component13() {
        return getIsActive();
    }

    @Override
    public Long component14() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component15() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component16() {
        return getCreatedBy();
    }

    @Override
    public UInteger component17() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFromAddress();
    }

    @Override
    public BigDecimal value3() {
        return getFromLat();
    }

    @Override
    public BigDecimal value4() {
        return getFromLong();
    }

    @Override
    public Integer value5() {
        return getFromRadius();
    }

    @Override
    public String value6() {
        return getToAddress();
    }

    @Override
    public BigDecimal value7() {
        return getToLat();
    }

    @Override
    public BigDecimal value8() {
        return getToLong();
    }

    @Override
    public Integer value9() {
        return getToRadius();
    }

    @Override
    public UInteger value10() {
        return getSystemFare();
    }

    @Override
    public UInteger value11() {
        return getActualFare();
    }

    @Override
    public Byte value12() {
        return getStatus();
    }

    @Override
    public Byte value13() {
        return getIsActive();
    }

    @Override
    public Long value14() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value15() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value16() {
        return getCreatedBy();
    }

    @Override
    public UInteger value17() {
        return getLastUpdatedBy();
    }

    @Override
    public OverwritingFarePriceRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value2(String value) {
        setFromAddress(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value3(BigDecimal value) {
        setFromLat(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value4(BigDecimal value) {
        setFromLong(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value5(Integer value) {
        setFromRadius(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value6(String value) {
        setToAddress(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value7(BigDecimal value) {
        setToLat(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value8(BigDecimal value) {
        setToLong(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value9(Integer value) {
        setToRadius(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value10(UInteger value) {
        setSystemFare(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value11(UInteger value) {
        setActualFare(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value12(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value13(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value14(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value15(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value16(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord value17(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public OverwritingFarePriceRecord values(UInteger value1, String value2, BigDecimal value3, BigDecimal value4, Integer value5, String value6, BigDecimal value7, BigDecimal value8, Integer value9, UInteger value10, UInteger value11, Byte value12, Byte value13, Long value14, Long value15, UInteger value16, UInteger value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OverwritingFarePriceRecord
     */
    public OverwritingFarePriceRecord() {
        super(OverwritingFarePrice.OVERWRITING_FARE_PRICE);
    }

    /**
     * Create a detached, initialised OverwritingFarePriceRecord
     */
    public OverwritingFarePriceRecord(UInteger id, String fromAddress, BigDecimal fromLat, BigDecimal fromLong, Integer fromRadius, String toAddress, BigDecimal toLat, BigDecimal toLong, Integer toRadius, UInteger systemFare, UInteger actualFare, Byte status, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy) {
        super(OverwritingFarePrice.OVERWRITING_FARE_PRICE);

        set(0, id);
        set(1, fromAddress);
        set(2, fromLat);
        set(3, fromLong);
        set(4, fromRadius);
        set(5, toAddress);
        set(6, toLat);
        set(7, toLong);
        set(8, toRadius);
        set(9, systemFare);
        set(10, actualFare);
        set(11, status);
        set(12, isActive);
        set(13, createdTimestamp);
        set(14, lastUpdatedTimestamp);
        set(15, createdBy);
        set(16, lastUpdatedBy);
    }
}
