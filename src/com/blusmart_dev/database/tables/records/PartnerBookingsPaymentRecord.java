/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.PartnerBookingsPayment;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartnerBookingsPaymentRecord extends UpdatableRecordImpl<PartnerBookingsPaymentRecord> implements Record13<UInteger, String, BigDecimal, String, BigDecimal, BigDecimal, String, Byte, String, Long, Long, BigDecimal, UInteger> {

    private static final long serialVersionUID = -1710509198;

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.id</code>.
     */
    public PartnerBookingsPaymentRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.search_id</code>.
     */
    public PartnerBookingsPaymentRecord setSearchId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.search_id</code>.
     */
    public String getSearchId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.total_amount</code>.
     */
    public PartnerBookingsPaymentRecord setTotalAmount(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.total_amount</code>.
     */
    public BigDecimal getTotalAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.mode</code>.
     */
    public PartnerBookingsPaymentRecord setMode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.mode</code>.
     */
    public String getMode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.paid_amount</code>.
     */
    public PartnerBookingsPaymentRecord setPaidAmount(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.paid_amount</code>.
     */
    public BigDecimal getPaidAmount() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.unpaid_amount</code>.
     */
    public PartnerBookingsPaymentRecord setUnpaidAmount(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.unpaid_amount</code>.
     */
    public BigDecimal getUnpaidAmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.payment_status</code>.
     */
    public PartnerBookingsPaymentRecord setPaymentStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.payment_status</code>.
     */
    public String getPaymentStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.is_active</code>.
     */
    public PartnerBookingsPaymentRecord setIsActive(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.notes</code>.
     */
    public PartnerBookingsPaymentRecord setNotes(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.notes</code>.
     */
    public String getNotes() {
        return (String) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.created_at</code>.
     */
    public PartnerBookingsPaymentRecord setCreatedAt(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.updated_at</code>.
     */
    public PartnerBookingsPaymentRecord setUpdatedAt(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.cash_amount</code>.
     */
    public PartnerBookingsPaymentRecord setCashAmount(BigDecimal value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.cash_amount</code>.
     */
    public BigDecimal getCashAmount() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.partner_bookings_payment.ride_request_id</code>.
     */
    public PartnerBookingsPaymentRecord setRideRequestId(UInteger value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.partner_bookings_payment.ride_request_id</code>.
     */
    public UInteger getRideRequestId() {
        return (UInteger) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, String, BigDecimal, String, BigDecimal, BigDecimal, String, Byte, String, Long, Long, BigDecimal, UInteger> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UInteger, String, BigDecimal, String, BigDecimal, BigDecimal, String, Byte, String, Long, Long, BigDecimal, UInteger> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.ID;
    }

    @Override
    public Field<String> field2() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.SEARCH_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.TOTAL_AMOUNT;
    }

    @Override
    public Field<String> field4() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.MODE;
    }

    @Override
    public Field<BigDecimal> field5() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.PAID_AMOUNT;
    }

    @Override
    public Field<BigDecimal> field6() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.UNPAID_AMOUNT;
    }

    @Override
    public Field<String> field7() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.PAYMENT_STATUS;
    }

    @Override
    public Field<Byte> field8() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.IS_ACTIVE;
    }

    @Override
    public Field<String> field9() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.NOTES;
    }

    @Override
    public Field<Long> field10() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.CREATED_AT;
    }

    @Override
    public Field<Long> field11() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.UPDATED_AT;
    }

    @Override
    public Field<BigDecimal> field12() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.CASH_AMOUNT;
    }

    @Override
    public Field<UInteger> field13() {
        return PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT.RIDE_REQUEST_ID;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSearchId();
    }

    @Override
    public BigDecimal component3() {
        return getTotalAmount();
    }

    @Override
    public String component4() {
        return getMode();
    }

    @Override
    public BigDecimal component5() {
        return getPaidAmount();
    }

    @Override
    public BigDecimal component6() {
        return getUnpaidAmount();
    }

    @Override
    public String component7() {
        return getPaymentStatus();
    }

    @Override
    public Byte component8() {
        return getIsActive();
    }

    @Override
    public String component9() {
        return getNotes();
    }

    @Override
    public Long component10() {
        return getCreatedAt();
    }

    @Override
    public Long component11() {
        return getUpdatedAt();
    }

    @Override
    public BigDecimal component12() {
        return getCashAmount();
    }

    @Override
    public UInteger component13() {
        return getRideRequestId();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSearchId();
    }

    @Override
    public BigDecimal value3() {
        return getTotalAmount();
    }

    @Override
    public String value4() {
        return getMode();
    }

    @Override
    public BigDecimal value5() {
        return getPaidAmount();
    }

    @Override
    public BigDecimal value6() {
        return getUnpaidAmount();
    }

    @Override
    public String value7() {
        return getPaymentStatus();
    }

    @Override
    public Byte value8() {
        return getIsActive();
    }

    @Override
    public String value9() {
        return getNotes();
    }

    @Override
    public Long value10() {
        return getCreatedAt();
    }

    @Override
    public Long value11() {
        return getUpdatedAt();
    }

    @Override
    public BigDecimal value12() {
        return getCashAmount();
    }

    @Override
    public UInteger value13() {
        return getRideRequestId();
    }

    @Override
    public PartnerBookingsPaymentRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value2(String value) {
        setSearchId(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value3(BigDecimal value) {
        setTotalAmount(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value4(String value) {
        setMode(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value5(BigDecimal value) {
        setPaidAmount(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value6(BigDecimal value) {
        setUnpaidAmount(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value7(String value) {
        setPaymentStatus(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value8(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value9(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value10(Long value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value11(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value12(BigDecimal value) {
        setCashAmount(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord value13(UInteger value) {
        setRideRequestId(value);
        return this;
    }

    @Override
    public PartnerBookingsPaymentRecord values(UInteger value1, String value2, BigDecimal value3, String value4, BigDecimal value5, BigDecimal value6, String value7, Byte value8, String value9, Long value10, Long value11, BigDecimal value12, UInteger value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PartnerBookingsPaymentRecord
     */
    public PartnerBookingsPaymentRecord() {
        super(PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT);
    }

    /**
     * Create a detached, initialised PartnerBookingsPaymentRecord
     */
    public PartnerBookingsPaymentRecord(UInteger id, String searchId, BigDecimal totalAmount, String mode, BigDecimal paidAmount, BigDecimal unpaidAmount, String paymentStatus, Byte isActive, String notes, Long createdAt, Long updatedAt, BigDecimal cashAmount, UInteger rideRequestId) {
        super(PartnerBookingsPayment.PARTNER_BOOKINGS_PAYMENT);

        set(0, id);
        set(1, searchId);
        set(2, totalAmount);
        set(3, mode);
        set(4, paidAmount);
        set(5, unpaidAmount);
        set(6, paymentStatus);
        set(7, isActive);
        set(8, notes);
        set(9, createdAt);
        set(10, updatedAt);
        set(11, cashAmount);
        set(12, rideRequestId);
    }
}
