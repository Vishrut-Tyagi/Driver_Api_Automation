/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.PaymentTransaction;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentTransactionRecord extends UpdatableRecordImpl<PaymentTransactionRecord> implements Record18<UInteger, UInteger, String, String, String, String, Long, String, String, Long, String, String, Long, Long, Byte, UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = 1253741941;

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.id</code>.
     */
    public PaymentTransactionRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.ride_id</code>.
     */
    public PaymentTransactionRecord setRideId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.ride_id</code>.
     */
    public UInteger getRideId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.payment_source</code>.
     */
    public PaymentTransactionRecord setPaymentSource(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.payment_source</code>.
     */
    public String getPaymentSource() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.transaction_id</code>.
     */
    public PaymentTransactionRecord setTransactionId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.transaction_id</code>.
     */
    public String getTransactionId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.request_checksum</code>.
     */
    public PaymentTransactionRecord setRequestChecksum(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.request_checksum</code>.
     */
    public String getRequestChecksum() {
        return (String) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.request_metadata</code>.
     */
    public PaymentTransactionRecord setRequestMetadata(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.request_metadata</code>.
     */
    public String getRequestMetadata() {
        return (String) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.request_sent_timestamp</code>.
     */
    public PaymentTransactionRecord setRequestSentTimestamp(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.request_sent_timestamp</code>.
     */
    public Long getRequestSentTimestamp() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.response_metadata</code>.
     */
    public PaymentTransactionRecord setResponseMetadata(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.response_metadata</code>.
     */
    public String getResponseMetadata() {
        return (String) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.response_checksum</code>.
     */
    public PaymentTransactionRecord setResponseChecksum(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.response_checksum</code>.
     */
    public String getResponseChecksum() {
        return (String) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.response_received_timestamp</code>.
     */
    public PaymentTransactionRecord setResponseReceivedTimestamp(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.response_received_timestamp</code>.
     */
    public Long getResponseReceivedTimestamp() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.transaction_state</code>.
     */
    public PaymentTransactionRecord setTransactionState(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.transaction_state</code>.
     */
    public String getTransactionState() {
        return (String) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.error_log</code>.
     */
    public PaymentTransactionRecord setErrorLog(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.error_log</code>.
     */
    public String getErrorLog() {
        return (String) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.created_timestamp</code>.
     */
    public PaymentTransactionRecord setCreatedTimestamp(Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.last_updated_timestamp</code>.
     */
    public PaymentTransactionRecord setLastUpdatedTimestamp(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.is_active</code>.
     */
    public PaymentTransactionRecord setIsActive(Byte value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(14);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.created_by</code>.
     */
    public PaymentTransactionRecord setCreatedBy(UInteger value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(15);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.last_updated_by</code>.
     */
    public PaymentTransactionRecord setLastUpdatedBy(UInteger value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(16);
    }

    /**
     * Setter for <code>blusmartDevDb.payment_transaction.payment_order_id</code>.
     */
    public PaymentTransactionRecord setPaymentOrderId(UInteger value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.payment_transaction.payment_order_id</code>.
     */
    public UInteger getPaymentOrderId() {
        return (UInteger) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<UInteger, UInteger, String, String, String, String, Long, String, String, Long, String, String, Long, Long, Byte, UInteger, UInteger, UInteger> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<UInteger, UInteger, String, String, String, String, Long, String, String, Long, String, String, Long, Long, Byte, UInteger, UInteger, UInteger> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return PaymentTransaction.PAYMENT_TRANSACTION.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return PaymentTransaction.PAYMENT_TRANSACTION.RIDE_ID;
    }

    @Override
    public Field<String> field3() {
        return PaymentTransaction.PAYMENT_TRANSACTION.PAYMENT_SOURCE;
    }

    @Override
    public Field<String> field4() {
        return PaymentTransaction.PAYMENT_TRANSACTION.TRANSACTION_ID;
    }

    @Override
    public Field<String> field5() {
        return PaymentTransaction.PAYMENT_TRANSACTION.REQUEST_CHECKSUM;
    }

    @Override
    public Field<String> field6() {
        return PaymentTransaction.PAYMENT_TRANSACTION.REQUEST_METADATA;
    }

    @Override
    public Field<Long> field7() {
        return PaymentTransaction.PAYMENT_TRANSACTION.REQUEST_SENT_TIMESTAMP;
    }

    @Override
    public Field<String> field8() {
        return PaymentTransaction.PAYMENT_TRANSACTION.RESPONSE_METADATA;
    }

    @Override
    public Field<String> field9() {
        return PaymentTransaction.PAYMENT_TRANSACTION.RESPONSE_CHECKSUM;
    }

    @Override
    public Field<Long> field10() {
        return PaymentTransaction.PAYMENT_TRANSACTION.RESPONSE_RECEIVED_TIMESTAMP;
    }

    @Override
    public Field<String> field11() {
        return PaymentTransaction.PAYMENT_TRANSACTION.TRANSACTION_STATE;
    }

    @Override
    public Field<String> field12() {
        return PaymentTransaction.PAYMENT_TRANSACTION.ERROR_LOG;
    }

    @Override
    public Field<Long> field13() {
        return PaymentTransaction.PAYMENT_TRANSACTION.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field14() {
        return PaymentTransaction.PAYMENT_TRANSACTION.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<Byte> field15() {
        return PaymentTransaction.PAYMENT_TRANSACTION.IS_ACTIVE;
    }

    @Override
    public Field<UInteger> field16() {
        return PaymentTransaction.PAYMENT_TRANSACTION.CREATED_BY;
    }

    @Override
    public Field<UInteger> field17() {
        return PaymentTransaction.PAYMENT_TRANSACTION.LAST_UPDATED_BY;
    }

    @Override
    public Field<UInteger> field18() {
        return PaymentTransaction.PAYMENT_TRANSACTION.PAYMENT_ORDER_ID;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getRideId();
    }

    @Override
    public String component3() {
        return getPaymentSource();
    }

    @Override
    public String component4() {
        return getTransactionId();
    }

    @Override
    public String component5() {
        return getRequestChecksum();
    }

    @Override
    public String component6() {
        return getRequestMetadata();
    }

    @Override
    public Long component7() {
        return getRequestSentTimestamp();
    }

    @Override
    public String component8() {
        return getResponseMetadata();
    }

    @Override
    public String component9() {
        return getResponseChecksum();
    }

    @Override
    public Long component10() {
        return getResponseReceivedTimestamp();
    }

    @Override
    public String component11() {
        return getTransactionState();
    }

    @Override
    public String component12() {
        return getErrorLog();
    }

    @Override
    public Long component13() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component14() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public Byte component15() {
        return getIsActive();
    }

    @Override
    public UInteger component16() {
        return getCreatedBy();
    }

    @Override
    public UInteger component17() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger component18() {
        return getPaymentOrderId();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getRideId();
    }

    @Override
    public String value3() {
        return getPaymentSource();
    }

    @Override
    public String value4() {
        return getTransactionId();
    }

    @Override
    public String value5() {
        return getRequestChecksum();
    }

    @Override
    public String value6() {
        return getRequestMetadata();
    }

    @Override
    public Long value7() {
        return getRequestSentTimestamp();
    }

    @Override
    public String value8() {
        return getResponseMetadata();
    }

    @Override
    public String value9() {
        return getResponseChecksum();
    }

    @Override
    public Long value10() {
        return getResponseReceivedTimestamp();
    }

    @Override
    public String value11() {
        return getTransactionState();
    }

    @Override
    public String value12() {
        return getErrorLog();
    }

    @Override
    public Long value13() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value14() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public Byte value15() {
        return getIsActive();
    }

    @Override
    public UInteger value16() {
        return getCreatedBy();
    }

    @Override
    public UInteger value17() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger value18() {
        return getPaymentOrderId();
    }

    @Override
    public PaymentTransactionRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value2(UInteger value) {
        setRideId(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value3(String value) {
        setPaymentSource(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value4(String value) {
        setTransactionId(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value5(String value) {
        setRequestChecksum(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value6(String value) {
        setRequestMetadata(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value7(Long value) {
        setRequestSentTimestamp(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value8(String value) {
        setResponseMetadata(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value9(String value) {
        setResponseChecksum(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value10(Long value) {
        setResponseReceivedTimestamp(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value11(String value) {
        setTransactionState(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value12(String value) {
        setErrorLog(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value13(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value14(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value15(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value16(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value17(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord value18(UInteger value) {
        setPaymentOrderId(value);
        return this;
    }

    @Override
    public PaymentTransactionRecord values(UInteger value1, UInteger value2, String value3, String value4, String value5, String value6, Long value7, String value8, String value9, Long value10, String value11, String value12, Long value13, Long value14, Byte value15, UInteger value16, UInteger value17, UInteger value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentTransactionRecord
     */
    public PaymentTransactionRecord() {
        super(PaymentTransaction.PAYMENT_TRANSACTION);
    }

    /**
     * Create a detached, initialised PaymentTransactionRecord
     */
    public PaymentTransactionRecord(UInteger id, UInteger rideId, String paymentSource, String transactionId, String requestChecksum, String requestMetadata, Long requestSentTimestamp, String responseMetadata, String responseChecksum, Long responseReceivedTimestamp, String transactionState, String errorLog, Long createdTimestamp, Long lastUpdatedTimestamp, Byte isActive, UInteger createdBy, UInteger lastUpdatedBy, UInteger paymentOrderId) {
        super(PaymentTransaction.PAYMENT_TRANSACTION);

        set(0, id);
        set(1, rideId);
        set(2, paymentSource);
        set(3, transactionId);
        set(4, requestChecksum);
        set(5, requestMetadata);
        set(6, requestSentTimestamp);
        set(7, responseMetadata);
        set(8, responseChecksum);
        set(9, responseReceivedTimestamp);
        set(10, transactionState);
        set(11, errorLog);
        set(12, createdTimestamp);
        set(13, lastUpdatedTimestamp);
        set(14, isActive);
        set(15, createdBy);
        set(16, lastUpdatedBy);
        set(17, paymentOrderId);
    }
}
