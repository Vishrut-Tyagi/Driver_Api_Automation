/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.PickupNotes;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PickupNotesRecord extends UpdatableRecordImpl<PickupNotesRecord> implements Record13<UInteger, UInteger, String, Byte, UInteger, BigDecimal, BigDecimal, String, Byte, Long, Long, UInteger, UInteger> {

    private static final long serialVersionUID = -566820583;

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.id</code>.
     */
    public PickupNotesRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.rider_id</code>.
     */
    public PickupNotesRecord setRiderId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.rider_id</code>.
     */
    public UInteger getRiderId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.place_hash</code>.
     */
    public PickupNotesRecord setPlaceHash(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.place_hash</code>.
     */
    public String getPlaceHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.is_for_all</code>.
     */
    public PickupNotesRecord setIsForAll(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.is_for_all</code>.
     */
    public Byte getIsForAll() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.ride_request_id</code>.
     */
    public PickupNotesRecord setRideRequestId(UInteger value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.ride_request_id</code>.
     */
    public UInteger getRideRequestId() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.latitude</code>.
     */
    public PickupNotesRecord setLatitude(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.latitude</code>.
     */
    public BigDecimal getLatitude() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.longitude</code>.
     */
    public PickupNotesRecord setLongitude(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.longitude</code>.
     */
    public BigDecimal getLongitude() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.notes</code>.
     */
    public PickupNotesRecord setNotes(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.notes</code>.
     */
    public String getNotes() {
        return (String) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.is_active</code>.
     */
    public PickupNotesRecord setIsActive(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.created_timestamp</code>.
     */
    public PickupNotesRecord setCreatedTimestamp(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.last_updated_timestamp</code>.
     */
    public PickupNotesRecord setLastUpdatedTimestamp(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.created_by</code>.
     */
    public PickupNotesRecord setCreatedBy(UInteger value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.pickup_notes.last_updated_by</code>.
     */
    public PickupNotesRecord setLastUpdatedBy(UInteger value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.pickup_notes.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, UInteger, String, Byte, UInteger, BigDecimal, BigDecimal, String, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UInteger, UInteger, String, Byte, UInteger, BigDecimal, BigDecimal, String, Byte, Long, Long, UInteger, UInteger> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return PickupNotes.PICKUP_NOTES.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return PickupNotes.PICKUP_NOTES.RIDER_ID;
    }

    @Override
    public Field<String> field3() {
        return PickupNotes.PICKUP_NOTES.PLACE_HASH;
    }

    @Override
    public Field<Byte> field4() {
        return PickupNotes.PICKUP_NOTES.IS_FOR_ALL;
    }

    @Override
    public Field<UInteger> field5() {
        return PickupNotes.PICKUP_NOTES.RIDE_REQUEST_ID;
    }

    @Override
    public Field<BigDecimal> field6() {
        return PickupNotes.PICKUP_NOTES.LATITUDE;
    }

    @Override
    public Field<BigDecimal> field7() {
        return PickupNotes.PICKUP_NOTES.LONGITUDE;
    }

    @Override
    public Field<String> field8() {
        return PickupNotes.PICKUP_NOTES.NOTES;
    }

    @Override
    public Field<Byte> field9() {
        return PickupNotes.PICKUP_NOTES.IS_ACTIVE;
    }

    @Override
    public Field<Long> field10() {
        return PickupNotes.PICKUP_NOTES.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field11() {
        return PickupNotes.PICKUP_NOTES.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field12() {
        return PickupNotes.PICKUP_NOTES.CREATED_BY;
    }

    @Override
    public Field<UInteger> field13() {
        return PickupNotes.PICKUP_NOTES.LAST_UPDATED_BY;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getRiderId();
    }

    @Override
    public String component3() {
        return getPlaceHash();
    }

    @Override
    public Byte component4() {
        return getIsForAll();
    }

    @Override
    public UInteger component5() {
        return getRideRequestId();
    }

    @Override
    public BigDecimal component6() {
        return getLatitude();
    }

    @Override
    public BigDecimal component7() {
        return getLongitude();
    }

    @Override
    public String component8() {
        return getNotes();
    }

    @Override
    public Byte component9() {
        return getIsActive();
    }

    @Override
    public Long component10() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component11() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component12() {
        return getCreatedBy();
    }

    @Override
    public UInteger component13() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getRiderId();
    }

    @Override
    public String value3() {
        return getPlaceHash();
    }

    @Override
    public Byte value4() {
        return getIsForAll();
    }

    @Override
    public UInteger value5() {
        return getRideRequestId();
    }

    @Override
    public BigDecimal value6() {
        return getLatitude();
    }

    @Override
    public BigDecimal value7() {
        return getLongitude();
    }

    @Override
    public String value8() {
        return getNotes();
    }

    @Override
    public Byte value9() {
        return getIsActive();
    }

    @Override
    public Long value10() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value11() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value12() {
        return getCreatedBy();
    }

    @Override
    public UInteger value13() {
        return getLastUpdatedBy();
    }

    @Override
    public PickupNotesRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public PickupNotesRecord value2(UInteger value) {
        setRiderId(value);
        return this;
    }

    @Override
    public PickupNotesRecord value3(String value) {
        setPlaceHash(value);
        return this;
    }

    @Override
    public PickupNotesRecord value4(Byte value) {
        setIsForAll(value);
        return this;
    }

    @Override
    public PickupNotesRecord value5(UInteger value) {
        setRideRequestId(value);
        return this;
    }

    @Override
    public PickupNotesRecord value6(BigDecimal value) {
        setLatitude(value);
        return this;
    }

    @Override
    public PickupNotesRecord value7(BigDecimal value) {
        setLongitude(value);
        return this;
    }

    @Override
    public PickupNotesRecord value8(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public PickupNotesRecord value9(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public PickupNotesRecord value10(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public PickupNotesRecord value11(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public PickupNotesRecord value12(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public PickupNotesRecord value13(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public PickupNotesRecord values(UInteger value1, UInteger value2, String value3, Byte value4, UInteger value5, BigDecimal value6, BigDecimal value7, String value8, Byte value9, Long value10, Long value11, UInteger value12, UInteger value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PickupNotesRecord
     */
    public PickupNotesRecord() {
        super(PickupNotes.PICKUP_NOTES);
    }

    /**
     * Create a detached, initialised PickupNotesRecord
     */
    public PickupNotesRecord(UInteger id, UInteger riderId, String placeHash, Byte isForAll, UInteger rideRequestId, BigDecimal latitude, BigDecimal longitude, String notes, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy) {
        super(PickupNotes.PICKUP_NOTES);

        set(0, id);
        set(1, riderId);
        set(2, placeHash);
        set(3, isForAll);
        set(4, rideRequestId);
        set(5, latitude);
        set(6, longitude);
        set(7, notes);
        set(8, isActive);
        set(9, createdTimestamp);
        set(10, lastUpdatedTimestamp);
        set(11, createdBy);
        set(12, lastUpdatedBy);
    }
}
