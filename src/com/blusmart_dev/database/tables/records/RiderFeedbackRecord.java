/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.RiderFeedback;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiderFeedbackRecord extends UpdatableRecordImpl<RiderFeedbackRecord> implements Record14<UInteger, UInteger, UInteger, String, UInteger, Byte, Long, Long, UInteger, UInteger, String, UInteger, UInteger, String> {

    private static final long serialVersionUID = -1291327698;

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.id</code>.
     */
    public RiderFeedbackRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.ride_id</code>.
     */
    public RiderFeedbackRecord setRideId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.ride_id</code>.
     */
    public UInteger getRideId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.ride_request_id</code>.
     */
    public RiderFeedbackRecord setRideRequestId(UInteger value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.ride_request_id</code>.
     */
    public UInteger getRideRequestId() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.feedback</code>.
     */
    public RiderFeedbackRecord setFeedback(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.feedback</code>.
     */
    public String getFeedback() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.star_rating</code>.
     */
    public RiderFeedbackRecord setStarRating(UInteger value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.star_rating</code>.
     */
    public UInteger getStarRating() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.is_active</code>.
     */
    public RiderFeedbackRecord setIsActive(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.created_timestamp</code>.
     */
    public RiderFeedbackRecord setCreatedTimestamp(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.last_updated_timestamp</code>.
     */
    public RiderFeedbackRecord setLastUpdatedTimestamp(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.created_by</code>.
     */
    public RiderFeedbackRecord setCreatedBy(UInteger value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.last_updated_by</code>.
     */
    public RiderFeedbackRecord setLastUpdatedBy(UInteger value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.feedback_type</code>.
     */
    public RiderFeedbackRecord setFeedbackType(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.feedback_type</code>.
     */
    public String getFeedbackType() {
        return (String) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.driver_id</code>.
     */
    public RiderFeedbackRecord setDriverId(UInteger value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.driver_id</code>.
     */
    public UInteger getDriverId() {
        return (UInteger) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.rider_id</code>.
     */
    public RiderFeedbackRecord setRiderId(UInteger value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.rider_id</code>.
     */
    public UInteger getRiderId() {
        return (UInteger) get(12);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_feedback.feedback_json</code>.
     */
    public RiderFeedbackRecord setFeedbackJson(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_feedback.feedback_json</code>.
     */
    public String getFeedbackJson() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<UInteger, UInteger, UInteger, String, UInteger, Byte, Long, Long, UInteger, UInteger, String, UInteger, UInteger, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<UInteger, UInteger, UInteger, String, UInteger, Byte, Long, Long, UInteger, UInteger, String, UInteger, UInteger, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return RiderFeedback.RIDER_FEEDBACK.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return RiderFeedback.RIDER_FEEDBACK.RIDE_ID;
    }

    @Override
    public Field<UInteger> field3() {
        return RiderFeedback.RIDER_FEEDBACK.RIDE_REQUEST_ID;
    }

    @Override
    public Field<String> field4() {
        return RiderFeedback.RIDER_FEEDBACK.FEEDBACK;
    }

    @Override
    public Field<UInteger> field5() {
        return RiderFeedback.RIDER_FEEDBACK.STAR_RATING;
    }

    @Override
    public Field<Byte> field6() {
        return RiderFeedback.RIDER_FEEDBACK.IS_ACTIVE;
    }

    @Override
    public Field<Long> field7() {
        return RiderFeedback.RIDER_FEEDBACK.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field8() {
        return RiderFeedback.RIDER_FEEDBACK.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field9() {
        return RiderFeedback.RIDER_FEEDBACK.CREATED_BY;
    }

    @Override
    public Field<UInteger> field10() {
        return RiderFeedback.RIDER_FEEDBACK.LAST_UPDATED_BY;
    }

    @Override
    public Field<String> field11() {
        return RiderFeedback.RIDER_FEEDBACK.FEEDBACK_TYPE;
    }

    @Override
    public Field<UInteger> field12() {
        return RiderFeedback.RIDER_FEEDBACK.DRIVER_ID;
    }

    @Override
    public Field<UInteger> field13() {
        return RiderFeedback.RIDER_FEEDBACK.RIDER_ID;
    }

    @Override
    public Field<String> field14() {
        return RiderFeedback.RIDER_FEEDBACK.FEEDBACK_JSON;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getRideId();
    }

    @Override
    public UInteger component3() {
        return getRideRequestId();
    }

    @Override
    public String component4() {
        return getFeedback();
    }

    @Override
    public UInteger component5() {
        return getStarRating();
    }

    @Override
    public Byte component6() {
        return getIsActive();
    }

    @Override
    public Long component7() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component8() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component9() {
        return getCreatedBy();
    }

    @Override
    public UInteger component10() {
        return getLastUpdatedBy();
    }

    @Override
    public String component11() {
        return getFeedbackType();
    }

    @Override
    public UInteger component12() {
        return getDriverId();
    }

    @Override
    public UInteger component13() {
        return getRiderId();
    }

    @Override
    public String component14() {
        return getFeedbackJson();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getRideId();
    }

    @Override
    public UInteger value3() {
        return getRideRequestId();
    }

    @Override
    public String value4() {
        return getFeedback();
    }

    @Override
    public UInteger value5() {
        return getStarRating();
    }

    @Override
    public Byte value6() {
        return getIsActive();
    }

    @Override
    public Long value7() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value8() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value9() {
        return getCreatedBy();
    }

    @Override
    public UInteger value10() {
        return getLastUpdatedBy();
    }

    @Override
    public String value11() {
        return getFeedbackType();
    }

    @Override
    public UInteger value12() {
        return getDriverId();
    }

    @Override
    public UInteger value13() {
        return getRiderId();
    }

    @Override
    public String value14() {
        return getFeedbackJson();
    }

    @Override
    public RiderFeedbackRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value2(UInteger value) {
        setRideId(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value3(UInteger value) {
        setRideRequestId(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value4(String value) {
        setFeedback(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value5(UInteger value) {
        setStarRating(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value6(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value7(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value8(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value9(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value10(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value11(String value) {
        setFeedbackType(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value12(UInteger value) {
        setDriverId(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value13(UInteger value) {
        setRiderId(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord value14(String value) {
        setFeedbackJson(value);
        return this;
    }

    @Override
    public RiderFeedbackRecord values(UInteger value1, UInteger value2, UInteger value3, String value4, UInteger value5, Byte value6, Long value7, Long value8, UInteger value9, UInteger value10, String value11, UInteger value12, UInteger value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RiderFeedbackRecord
     */
    public RiderFeedbackRecord() {
        super(RiderFeedback.RIDER_FEEDBACK);
    }

    /**
     * Create a detached, initialised RiderFeedbackRecord
     */
    public RiderFeedbackRecord(UInteger id, UInteger rideId, UInteger rideRequestId, String feedback, UInteger starRating, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy, String feedbackType, UInteger driverId, UInteger riderId, String feedbackJson) {
        super(RiderFeedback.RIDER_FEEDBACK);

        set(0, id);
        set(1, rideId);
        set(2, rideRequestId);
        set(3, feedback);
        set(4, starRating);
        set(5, isActive);
        set(6, createdTimestamp);
        set(7, lastUpdatedTimestamp);
        set(8, createdBy);
        set(9, lastUpdatedBy);
        set(10, feedbackType);
        set(11, driverId);
        set(12, riderId);
        set(13, feedbackJson);
    }
}
