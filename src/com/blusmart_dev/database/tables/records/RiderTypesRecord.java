/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.RiderTypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiderTypesRecord extends UpdatableRecordImpl<RiderTypesRecord> implements Record8<UInteger, UInteger, String, Byte, Long, Long, UInteger, UInteger> {

    private static final long serialVersionUID = -934216295;

    /**
     * Setter for <code>blusmartDevDb.rider_types.id</code>.
     */
    public RiderTypesRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_types.rider_id</code>.
     */
    public RiderTypesRecord setRiderId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.rider_id</code>.
     */
    public UInteger getRiderId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_types.rider_type</code>.
     */
    public RiderTypesRecord setRiderType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.rider_type</code>.
     */
    public String getRiderType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_types.is_active</code>.
     */
    public RiderTypesRecord setIsActive(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_types.created_timestamp</code>.
     */
    public RiderTypesRecord setCreatedTimestamp(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_types.last_updated_timestamp</code>.
     */
    public RiderTypesRecord setLastUpdatedTimestamp(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_types.created_by</code>.
     */
    public RiderTypesRecord setCreatedBy(UInteger value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.rider_types.last_updated_by</code>.
     */
    public RiderTypesRecord setLastUpdatedBy(UInteger value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.rider_types.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UInteger, UInteger, String, Byte, Long, Long, UInteger, UInteger> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UInteger, UInteger, String, Byte, Long, Long, UInteger, UInteger> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return RiderTypes.RIDER_TYPES.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return RiderTypes.RIDER_TYPES.RIDER_ID;
    }

    @Override
    public Field<String> field3() {
        return RiderTypes.RIDER_TYPES.RIDER_TYPE;
    }

    @Override
    public Field<Byte> field4() {
        return RiderTypes.RIDER_TYPES.IS_ACTIVE;
    }

    @Override
    public Field<Long> field5() {
        return RiderTypes.RIDER_TYPES.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field6() {
        return RiderTypes.RIDER_TYPES.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field7() {
        return RiderTypes.RIDER_TYPES.CREATED_BY;
    }

    @Override
    public Field<UInteger> field8() {
        return RiderTypes.RIDER_TYPES.LAST_UPDATED_BY;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getRiderId();
    }

    @Override
    public String component3() {
        return getRiderType();
    }

    @Override
    public Byte component4() {
        return getIsActive();
    }

    @Override
    public Long component5() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component6() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component7() {
        return getCreatedBy();
    }

    @Override
    public UInteger component8() {
        return getLastUpdatedBy();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getRiderId();
    }

    @Override
    public String value3() {
        return getRiderType();
    }

    @Override
    public Byte value4() {
        return getIsActive();
    }

    @Override
    public Long value5() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value6() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value7() {
        return getCreatedBy();
    }

    @Override
    public UInteger value8() {
        return getLastUpdatedBy();
    }

    @Override
    public RiderTypesRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public RiderTypesRecord value2(UInteger value) {
        setRiderId(value);
        return this;
    }

    @Override
    public RiderTypesRecord value3(String value) {
        setRiderType(value);
        return this;
    }

    @Override
    public RiderTypesRecord value4(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public RiderTypesRecord value5(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public RiderTypesRecord value6(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public RiderTypesRecord value7(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public RiderTypesRecord value8(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public RiderTypesRecord values(UInteger value1, UInteger value2, String value3, Byte value4, Long value5, Long value6, UInteger value7, UInteger value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RiderTypesRecord
     */
    public RiderTypesRecord() {
        super(RiderTypes.RIDER_TYPES);
    }

    /**
     * Create a detached, initialised RiderTypesRecord
     */
    public RiderTypesRecord(UInteger id, UInteger riderId, String riderType, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy) {
        super(RiderTypes.RIDER_TYPES);

        set(0, id);
        set(1, riderId);
        set(2, riderType);
        set(3, isActive);
        set(4, createdTimestamp);
        set(5, lastUpdatedTimestamp);
        set(6, createdBy);
        set(7, lastUpdatedBy);
    }
}
