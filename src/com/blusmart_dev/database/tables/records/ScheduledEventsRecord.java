/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.ScheduledEvents;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduledEventsRecord extends UpdatableRecordImpl<ScheduledEventsRecord> implements Record13<UInteger, String, String, String, Byte, Long, Long, Long, UInteger, UInteger, String, String, String> {

    private static final long serialVersionUID = 1213756264;

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.id</code>.
     */
    public ScheduledEventsRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.event_type</code>.
     */
    public ScheduledEventsRecord setEventType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.event_type</code>.
     */
    public String getEventType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.request_data</code>.
     */
    public ScheduledEventsRecord setRequestData(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.request_data</code>.
     */
    public String getRequestData() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.state</code>.
     */
    public ScheduledEventsRecord setState(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.state</code>.
     */
    public String getState() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.is_active</code>.
     */
    public ScheduledEventsRecord setIsActive(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.scheduled_timestamp</code>.
     */
    public ScheduledEventsRecord setScheduledTimestamp(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.scheduled_timestamp</code>.
     */
    public Long getScheduledTimestamp() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.created_timestamp</code>.
     */
    public ScheduledEventsRecord setCreatedTimestamp(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.last_updated_timestamp</code>.
     */
    public ScheduledEventsRecord setLastUpdatedTimestamp(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.created_by</code>.
     */
    public ScheduledEventsRecord setCreatedBy(UInteger value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.last_updated_by</code>.
     */
    public ScheduledEventsRecord setLastUpdatedBy(UInteger value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.response_data</code>.
     */
    public ScheduledEventsRecord setResponseData(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.response_data</code>.
     */
    public String getResponseData() {
        return (String) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.trigger_validity</code>.
     */
    public ScheduledEventsRecord setTriggerValidity(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.trigger_validity</code>.
     */
    public String getTriggerValidity() {
        return (String) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.scheduled_events.event_validity</code>.
     */
    public ScheduledEventsRecord setEventValidity(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.scheduled_events.event_validity</code>.
     */
    public String getEventValidity() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, String, String, String, Byte, Long, Long, Long, UInteger, UInteger, String, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UInteger, String, String, String, Byte, Long, Long, Long, UInteger, UInteger, String, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return ScheduledEvents.SCHEDULED_EVENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return ScheduledEvents.SCHEDULED_EVENTS.EVENT_TYPE;
    }

    @Override
    public Field<String> field3() {
        return ScheduledEvents.SCHEDULED_EVENTS.REQUEST_DATA;
    }

    @Override
    public Field<String> field4() {
        return ScheduledEvents.SCHEDULED_EVENTS.STATE;
    }

    @Override
    public Field<Byte> field5() {
        return ScheduledEvents.SCHEDULED_EVENTS.IS_ACTIVE;
    }

    @Override
    public Field<Long> field6() {
        return ScheduledEvents.SCHEDULED_EVENTS.SCHEDULED_TIMESTAMP;
    }

    @Override
    public Field<Long> field7() {
        return ScheduledEvents.SCHEDULED_EVENTS.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field8() {
        return ScheduledEvents.SCHEDULED_EVENTS.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field9() {
        return ScheduledEvents.SCHEDULED_EVENTS.CREATED_BY;
    }

    @Override
    public Field<UInteger> field10() {
        return ScheduledEvents.SCHEDULED_EVENTS.LAST_UPDATED_BY;
    }

    @Override
    public Field<String> field11() {
        return ScheduledEvents.SCHEDULED_EVENTS.RESPONSE_DATA;
    }

    @Override
    public Field<String> field12() {
        return ScheduledEvents.SCHEDULED_EVENTS.TRIGGER_VALIDITY;
    }

    @Override
    public Field<String> field13() {
        return ScheduledEvents.SCHEDULED_EVENTS.EVENT_VALIDITY;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEventType();
    }

    @Override
    public String component3() {
        return getRequestData();
    }

    @Override
    public String component4() {
        return getState();
    }

    @Override
    public Byte component5() {
        return getIsActive();
    }

    @Override
    public Long component6() {
        return getScheduledTimestamp();
    }

    @Override
    public Long component7() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component8() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component9() {
        return getCreatedBy();
    }

    @Override
    public UInteger component10() {
        return getLastUpdatedBy();
    }

    @Override
    public String component11() {
        return getResponseData();
    }

    @Override
    public String component12() {
        return getTriggerValidity();
    }

    @Override
    public String component13() {
        return getEventValidity();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEventType();
    }

    @Override
    public String value3() {
        return getRequestData();
    }

    @Override
    public String value4() {
        return getState();
    }

    @Override
    public Byte value5() {
        return getIsActive();
    }

    @Override
    public Long value6() {
        return getScheduledTimestamp();
    }

    @Override
    public Long value7() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value8() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value9() {
        return getCreatedBy();
    }

    @Override
    public UInteger value10() {
        return getLastUpdatedBy();
    }

    @Override
    public String value11() {
        return getResponseData();
    }

    @Override
    public String value12() {
        return getTriggerValidity();
    }

    @Override
    public String value13() {
        return getEventValidity();
    }

    @Override
    public ScheduledEventsRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value2(String value) {
        setEventType(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value3(String value) {
        setRequestData(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value4(String value) {
        setState(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value5(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value6(Long value) {
        setScheduledTimestamp(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value7(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value8(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value9(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value10(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value11(String value) {
        setResponseData(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value12(String value) {
        setTriggerValidity(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord value13(String value) {
        setEventValidity(value);
        return this;
    }

    @Override
    public ScheduledEventsRecord values(UInteger value1, String value2, String value3, String value4, Byte value5, Long value6, Long value7, Long value8, UInteger value9, UInteger value10, String value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScheduledEventsRecord
     */
    public ScheduledEventsRecord() {
        super(ScheduledEvents.SCHEDULED_EVENTS);
    }

    /**
     * Create a detached, initialised ScheduledEventsRecord
     */
    public ScheduledEventsRecord(UInteger id, String eventType, String requestData, String state, Byte isActive, Long scheduledTimestamp, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy, String responseData, String triggerValidity, String eventValidity) {
        super(ScheduledEvents.SCHEDULED_EVENTS);

        set(0, id);
        set(1, eventType);
        set(2, requestData);
        set(3, state);
        set(4, isActive);
        set(5, scheduledTimestamp);
        set(6, createdTimestamp);
        set(7, lastUpdatedTimestamp);
        set(8, createdBy);
        set(9, lastUpdatedBy);
        set(10, responseData);
        set(11, triggerValidity);
        set(12, eventValidity);
    }
}
