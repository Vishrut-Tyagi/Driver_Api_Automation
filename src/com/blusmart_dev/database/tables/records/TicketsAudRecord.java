/*
 * This file is generated by jOOQ.
 */
package com.blusmart_dev.database.tables.records;


import com.blusmart_dev.database.tables.TicketsAud;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketsAudRecord extends UpdatableRecordImpl<TicketsAudRecord> implements Record17<UInteger, UInteger, UInteger, UInteger, UInteger, String, String, String, String, Long, String, Byte, Long, Long, UInteger, UInteger, String> {

    private static final long serialVersionUID = 1428182866;

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.aud_id</code>.
     */
    public TicketsAudRecord setAudId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.aud_id</code>.
     */
    public UInteger getAudId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.id</code>.
     */
    public TicketsAudRecord setId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.ride_request_id</code>.
     */
    public TicketsAudRecord setRideRequestId(UInteger value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.ride_request_id</code>.
     */
    public UInteger getRideRequestId() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.ride_id</code>.
     */
    public TicketsAudRecord setRideId(UInteger value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.ride_id</code>.
     */
    public UInteger getRideId() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.rider_id</code>.
     */
    public TicketsAudRecord setRiderId(UInteger value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.rider_id</code>.
     */
    public UInteger getRiderId() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.ticket_type</code>.
     */
    public TicketsAudRecord setTicketType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.ticket_type</code>.
     */
    public String getTicketType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.ticket_stage</code>.
     */
    public TicketsAudRecord setTicketStage(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.ticket_stage</code>.
     */
    public String getTicketStage() {
        return (String) get(6);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.incident_id</code>.
     */
    public TicketsAudRecord setIncidentId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.incident_id</code>.
     */
    public String getIncidentId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.ticket_history_details</code>.
     */
    public TicketsAudRecord setTicketHistoryDetails(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.ticket_history_details</code>.
     */
    public String getTicketHistoryDetails() {
        return (String) get(8);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.closed_timestamp</code>.
     */
    public TicketsAudRecord setClosedTimestamp(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.closed_timestamp</code>.
     */
    public Long getClosedTimestamp() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.closure_remark</code>.
     */
    public TicketsAudRecord setClosureRemark(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.closure_remark</code>.
     */
    public String getClosureRemark() {
        return (String) get(10);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.is_active</code>.
     */
    public TicketsAudRecord setIsActive(Byte value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.is_active</code>.
     */
    public Byte getIsActive() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.created_timestamp</code>.
     */
    public TicketsAudRecord setCreatedTimestamp(Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.created_timestamp</code>.
     */
    public Long getCreatedTimestamp() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.last_updated_timestamp</code>.
     */
    public TicketsAudRecord setLastUpdatedTimestamp(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.last_updated_timestamp</code>.
     */
    public Long getLastUpdatedTimestamp() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.created_by</code>.
     */
    public TicketsAudRecord setCreatedBy(UInteger value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(14);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.last_updated_by</code>.
     */
    public TicketsAudRecord setLastUpdatedBy(UInteger value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.last_updated_by</code>.
     */
    public UInteger getLastUpdatedBy() {
        return (UInteger) get(15);
    }

    /**
     * Setter for <code>blusmartDevDb.tickets_aud.feedback</code>.
     */
    public TicketsAudRecord setFeedback(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>blusmartDevDb.tickets_aud.feedback</code>.
     */
    public String getFeedback() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<UInteger, UInteger, UInteger, UInteger, UInteger, String, String, String, String, Long, String, Byte, Long, Long, UInteger, UInteger, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<UInteger, UInteger, UInteger, UInteger, UInteger, String, String, String, String, Long, String, Byte, Long, Long, UInteger, UInteger, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return TicketsAud.TICKETS_AUD.AUD_ID;
    }

    @Override
    public Field<UInteger> field2() {
        return TicketsAud.TICKETS_AUD.ID;
    }

    @Override
    public Field<UInteger> field3() {
        return TicketsAud.TICKETS_AUD.RIDE_REQUEST_ID;
    }

    @Override
    public Field<UInteger> field4() {
        return TicketsAud.TICKETS_AUD.RIDE_ID;
    }

    @Override
    public Field<UInteger> field5() {
        return TicketsAud.TICKETS_AUD.RIDER_ID;
    }

    @Override
    public Field<String> field6() {
        return TicketsAud.TICKETS_AUD.TICKET_TYPE;
    }

    @Override
    public Field<String> field7() {
        return TicketsAud.TICKETS_AUD.TICKET_STAGE;
    }

    @Override
    public Field<String> field8() {
        return TicketsAud.TICKETS_AUD.INCIDENT_ID;
    }

    @Override
    public Field<String> field9() {
        return TicketsAud.TICKETS_AUD.TICKET_HISTORY_DETAILS;
    }

    @Override
    public Field<Long> field10() {
        return TicketsAud.TICKETS_AUD.CLOSED_TIMESTAMP;
    }

    @Override
    public Field<String> field11() {
        return TicketsAud.TICKETS_AUD.CLOSURE_REMARK;
    }

    @Override
    public Field<Byte> field12() {
        return TicketsAud.TICKETS_AUD.IS_ACTIVE;
    }

    @Override
    public Field<Long> field13() {
        return TicketsAud.TICKETS_AUD.CREATED_TIMESTAMP;
    }

    @Override
    public Field<Long> field14() {
        return TicketsAud.TICKETS_AUD.LAST_UPDATED_TIMESTAMP;
    }

    @Override
    public Field<UInteger> field15() {
        return TicketsAud.TICKETS_AUD.CREATED_BY;
    }

    @Override
    public Field<UInteger> field16() {
        return TicketsAud.TICKETS_AUD.LAST_UPDATED_BY;
    }

    @Override
    public Field<String> field17() {
        return TicketsAud.TICKETS_AUD.FEEDBACK;
    }

    @Override
    public UInteger component1() {
        return getAudId();
    }

    @Override
    public UInteger component2() {
        return getId();
    }

    @Override
    public UInteger component3() {
        return getRideRequestId();
    }

    @Override
    public UInteger component4() {
        return getRideId();
    }

    @Override
    public UInteger component5() {
        return getRiderId();
    }

    @Override
    public String component6() {
        return getTicketType();
    }

    @Override
    public String component7() {
        return getTicketStage();
    }

    @Override
    public String component8() {
        return getIncidentId();
    }

    @Override
    public String component9() {
        return getTicketHistoryDetails();
    }

    @Override
    public Long component10() {
        return getClosedTimestamp();
    }

    @Override
    public String component11() {
        return getClosureRemark();
    }

    @Override
    public Byte component12() {
        return getIsActive();
    }

    @Override
    public Long component13() {
        return getCreatedTimestamp();
    }

    @Override
    public Long component14() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger component15() {
        return getCreatedBy();
    }

    @Override
    public UInteger component16() {
        return getLastUpdatedBy();
    }

    @Override
    public String component17() {
        return getFeedback();
    }

    @Override
    public UInteger value1() {
        return getAudId();
    }

    @Override
    public UInteger value2() {
        return getId();
    }

    @Override
    public UInteger value3() {
        return getRideRequestId();
    }

    @Override
    public UInteger value4() {
        return getRideId();
    }

    @Override
    public UInteger value5() {
        return getRiderId();
    }

    @Override
    public String value6() {
        return getTicketType();
    }

    @Override
    public String value7() {
        return getTicketStage();
    }

    @Override
    public String value8() {
        return getIncidentId();
    }

    @Override
    public String value9() {
        return getTicketHistoryDetails();
    }

    @Override
    public Long value10() {
        return getClosedTimestamp();
    }

    @Override
    public String value11() {
        return getClosureRemark();
    }

    @Override
    public Byte value12() {
        return getIsActive();
    }

    @Override
    public Long value13() {
        return getCreatedTimestamp();
    }

    @Override
    public Long value14() {
        return getLastUpdatedTimestamp();
    }

    @Override
    public UInteger value15() {
        return getCreatedBy();
    }

    @Override
    public UInteger value16() {
        return getLastUpdatedBy();
    }

    @Override
    public String value17() {
        return getFeedback();
    }

    @Override
    public TicketsAudRecord value1(UInteger value) {
        setAudId(value);
        return this;
    }

    @Override
    public TicketsAudRecord value2(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public TicketsAudRecord value3(UInteger value) {
        setRideRequestId(value);
        return this;
    }

    @Override
    public TicketsAudRecord value4(UInteger value) {
        setRideId(value);
        return this;
    }

    @Override
    public TicketsAudRecord value5(UInteger value) {
        setRiderId(value);
        return this;
    }

    @Override
    public TicketsAudRecord value6(String value) {
        setTicketType(value);
        return this;
    }

    @Override
    public TicketsAudRecord value7(String value) {
        setTicketStage(value);
        return this;
    }

    @Override
    public TicketsAudRecord value8(String value) {
        setIncidentId(value);
        return this;
    }

    @Override
    public TicketsAudRecord value9(String value) {
        setTicketHistoryDetails(value);
        return this;
    }

    @Override
    public TicketsAudRecord value10(Long value) {
        setClosedTimestamp(value);
        return this;
    }

    @Override
    public TicketsAudRecord value11(String value) {
        setClosureRemark(value);
        return this;
    }

    @Override
    public TicketsAudRecord value12(Byte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public TicketsAudRecord value13(Long value) {
        setCreatedTimestamp(value);
        return this;
    }

    @Override
    public TicketsAudRecord value14(Long value) {
        setLastUpdatedTimestamp(value);
        return this;
    }

    @Override
    public TicketsAudRecord value15(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public TicketsAudRecord value16(UInteger value) {
        setLastUpdatedBy(value);
        return this;
    }

    @Override
    public TicketsAudRecord value17(String value) {
        setFeedback(value);
        return this;
    }

    @Override
    public TicketsAudRecord values(UInteger value1, UInteger value2, UInteger value3, UInteger value4, UInteger value5, String value6, String value7, String value8, String value9, Long value10, String value11, Byte value12, Long value13, Long value14, UInteger value15, UInteger value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketsAudRecord
     */
    public TicketsAudRecord() {
        super(TicketsAud.TICKETS_AUD);
    }

    /**
     * Create a detached, initialised TicketsAudRecord
     */
    public TicketsAudRecord(UInteger audId, UInteger id, UInteger rideRequestId, UInteger rideId, UInteger riderId, String ticketType, String ticketStage, String incidentId, String ticketHistoryDetails, Long closedTimestamp, String closureRemark, Byte isActive, Long createdTimestamp, Long lastUpdatedTimestamp, UInteger createdBy, UInteger lastUpdatedBy, String feedback) {
        super(TicketsAud.TICKETS_AUD);

        set(0, audId);
        set(1, id);
        set(2, rideRequestId);
        set(3, rideId);
        set(4, riderId);
        set(5, ticketType);
        set(6, ticketStage);
        set(7, incidentId);
        set(8, ticketHistoryDetails);
        set(9, closedTimestamp);
        set(10, closureRemark);
        set(11, isActive);
        set(12, createdTimestamp);
        set(13, lastUpdatedTimestamp);
        set(14, createdBy);
        set(15, lastUpdatedBy);
        set(16, feedback);
    }
}
